{
  "abi": [
    {
      "gas": 388,
      "inputs": [
        {
          "name": "_coin",
          "type": "address"
        }
      ],
      "name": "get_rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/pool-templates/eth/RateCalculatorTemplateETH.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 27,
                "end_lineno": 14,
                "id": "address",
                "lineno": 14,
                "node_id": 6,
                "src": "308:7:0"
              },
              "arg": "_coin",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 27,
              "end_lineno": 14,
              "lineno": 14,
              "node_id": 5,
              "src": "301:14:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 27,
          "end_lineno": 14,
          "lineno": 14,
          "node_id": 4,
          "src": "301:14:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 12,
            "end_lineno": 15,
            "lineno": 15,
            "node_id": 8,
            "src": "333:8:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 11,
              "end_col_offset": 12,
              "end_lineno": 15,
              "lineno": 15,
              "node_id": 9,
              "src": "340:1:0",
              "value": 0
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 12,
            "id": "view",
            "lineno": 12,
            "node_id": 10,
            "src": "273:4:0"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 13,
            "id": "external",
            "lineno": 13,
            "node_id": 12,
            "src": "279:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 12,
        "end_lineno": 15,
        "lineno": 14,
        "name": "get_rate",
        "node_id": 3,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 32,
          "end_col_offset": 39,
          "end_lineno": 14,
          "id": "uint256",
          "lineno": 14,
          "node_id": 14,
          "src": "320:7:0"
        },
        "src": "288:53:0"
      }
    ],
    "col_offset": 0,
    "doc_string": {
      "ast_type": "DocStr",
      "col_offset": 0,
      "end_col_offset": 3,
      "end_lineno": 9,
      "lineno": 2,
      "node_id": 16,
      "src": "18:251:0",
      "value": "\n@title Curve Pool Rate Calculator \n@author Curve.Fi\n@license Copyright (c) Curve.Fi, 2021 - all rights reserved\n@notice Logic for calculating exchange rate for a pool\n@dev This contract is only a template, pool-specific logic\n    must be added\n"
    },
    "end_col_offset": 12,
    "end_lineno": 15,
    "lineno": 1,
    "name": "contracts/pool-templates/eth/RateCalculatorTemplateETH.vy",
    "node_id": 0,
    "src": "0:341:0"
  },
  "bytecode": "0x61005456600436101561000d5761004a565b600035601c52600051341561002157600080fd5b638f3220788114156100485760043560a01c1561003d57600080fd5b600060005260206000f35b505b60006000fd5b61000461005403610004600039610004610054036000f3",
  "bytecodeSha1": "6f50124ddcfa2869a9d278b796ddd859da4bcc25",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.11"
  },
  "contractName": "RateCalculatorTemplateETH",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "RateCalculatorTemplateETH.get_rate": {
          "0": [
            333,
            341
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d5761004a565b600035601c52600051341561002157600080fd5b638f3220788114156100485760043560a01c1561003d57600080fd5b600060005260206000f35b505b60006000fd",
  "deployedSourceMap": "-1:-1:0:-;;;;;:::-;;:::-;:::-;;;;;;;;;;:::-;;;;:::-;288:53;;;;;:::-;-1:-1;;;;;288:53;:::-;;;;:::-;340:1;333:8;;;;;288:53::-;-1:-1;:::-;;;;",
  "language": "Vyper",
  "natspec": {
    "author": "Curve.Fi",
    "details": "This contract is only a template, pool-specific logic must be added",
    "license": "Copyright (c) Curve.Fi, 2021 - all rights reserved",
    "methods": {},
    "notice": "Logic for calculating exchange rate for a pool",
    "title": "Curve Pool Rate Calculator"
  },
  "offset": [
    0,
    342
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x04A JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH1 0x0 MLOAD CALLVALUE ISZERO PUSH2 0x021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x8F322078 DUP2 EQ ISZERO PUSH2 0x048 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x03D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT",
  "pcMap": {
    "0": {
      "offset": [
        0,
        341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x04A"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19": {
      "op": "MSTORE"
    },
    "20": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22": {
      "op": "MLOAD"
    },
    "23": {
      "op": "CALLVALUE"
    },
    "24": {
      "op": "ISZERO"
    },
    "25": {
      "op": "PUSH2",
      "value": "0x021"
    },
    "28": {
      "op": "JUMPI"
    },
    "29": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "31": {
      "offset": [
        0,
        0
      ],
      "op": "DUP1",
      "path": "0"
    },
    "32": {
      "dev": "Cannot send ether to nonpayable function",
      "op": "REVERT"
    },
    "33": {
      "op": "JUMPDEST"
    },
    "34": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F322078"
    },
    "39": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "DUP2",
      "path": "0"
    },
    "40": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "EQ",
      "path": "0"
    },
    "41": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "42": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x048"
    },
    "45": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "46": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "48": {
      "op": "CALLDATALOAD"
    },
    "49": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "51": {
      "op": "SHR"
    },
    "52": {
      "op": "ISZERO"
    },
    "53": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x03D"
    },
    "56": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "57": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "59": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "DUP1",
      "path": "0"
    },
    "60": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "REVERT",
      "path": "0"
    },
    "61": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "62": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        340,
        341
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "64": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        333,
        341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "66": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        333,
        341
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "67": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        333,
        341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "69": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        333,
        341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "71": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        333,
        341
      ],
      "op": "RETURN",
      "path": "0"
    },
    "72": {
      "fn": "RateCalculatorTemplateETH.get_rate",
      "offset": [
        288,
        341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "73": {
      "op": "POP"
    },
    "74": {
      "op": "JUMPDEST"
    },
    "75": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "77": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "79": {
      "op": "REVERT"
    }
  },
  "sha1": "d1014357c8e3410d9517fd25869775dca8d5f130",
  "source": "# @version 0.2.11\n\"\"\"\n@title Curve Pool Rate Calculator \n@author Curve.Fi\n@license Copyright (c) Curve.Fi, 2021 - all rights reserved\n@notice Logic for calculating exchange rate for a pool\n@dev This contract is only a template, pool-specific logic\n    must be added\n\"\"\"\n\n\n@view\n@external\ndef get_rate(_coin: address) -> uint256:\n    return 0\n",
  "sourceMap": "",
  "sourcePath": "contracts/pool-templates/eth/RateCalculatorTemplateETH.vy",
  "type": "contract"
}