{
  "abi": [
    {
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "gas": 1088,
      "inputs": [],
      "name": "get_virtual_price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 35282,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "_set_virtual_price",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testing/SwapMock.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 15,
          "end_col_offset": 22,
          "end_lineno": 4,
          "id": "uint256",
          "lineno": 4,
          "node_id": 4,
          "src": "82:7:9"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 22,
        "end_lineno": 4,
        "lineno": 4,
        "node_id": 1,
        "simple": 1,
        "src": "67:22:9",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 4,
          "id": "virtual_price",
          "lineno": 4,
          "node_id": 2,
          "src": "67:13:9"
        },
        "value": null
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 7,
          "lineno": 7,
          "node_id": 7,
          "src": "101:3:9"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 8,
            "lineno": 8,
            "node_id": 8,
            "src": "121:29:9",
            "target": {
              "ast_type": "Attribute",
              "attr": "virtual_price",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 8,
              "lineno": 8,
              "node_id": 9,
              "src": "121:18:9",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 8,
                "id": "self",
                "lineno": 8,
                "node_id": 10,
                "src": "121:4:9"
              }
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 25,
              "end_col_offset": 33,
              "end_lineno": 8,
              "left": {
                "ast_type": "Int",
                "col_offset": 25,
                "end_col_offset": 27,
                "end_lineno": 8,
                "lineno": 8,
                "node_id": 14,
                "src": "142:2:9",
                "value": 10
              },
              "lineno": 8,
              "node_id": 13,
              "op": {
                "ast_type": "Pow",
                "col_offset": 25,
                "end_col_offset": 33,
                "end_lineno": 8,
                "lineno": 8,
                "node_id": 15,
                "src": "142:8:9"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 31,
                "end_col_offset": 33,
                "end_lineno": 8,
                "lineno": 8,
                "node_id": 16,
                "src": "148:2:9",
                "value": 18
              },
              "src": "142:8:9"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 6,
            "id": "external",
            "lineno": 6,
            "node_id": 17,
            "src": "92:8:9"
          }
        ],
        "doc_string": null,
        "end_col_offset": 33,
        "end_lineno": 8,
        "lineno": 7,
        "name": "__init__",
        "node_id": 6,
        "pos": null,
        "returns": null,
        "src": "101:49:9"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 13,
          "lineno": 13,
          "node_id": 20,
          "src": "169:3:9"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 14,
            "lineno": 14,
            "node_id": 21,
            "src": "209:25:9",
            "value": {
              "ast_type": "Attribute",
              "attr": "virtual_price",
              "col_offset": 11,
              "end_col_offset": 29,
              "end_lineno": 14,
              "lineno": 14,
              "node_id": 22,
              "src": "216:18:9",
              "value": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 15,
                "end_lineno": 14,
                "id": "self",
                "lineno": 14,
                "node_id": 23,
                "src": "216:4:9"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 11,
            "id": "view",
            "lineno": 11,
            "node_id": 26,
            "src": "154:4:9"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 12,
            "id": "external",
            "lineno": 12,
            "node_id": 28,
            "src": "160:8:9"
          }
        ],
        "doc_string": null,
        "end_col_offset": 29,
        "end_lineno": 14,
        "lineno": 13,
        "name": "get_virtual_price",
        "node_id": 19,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 27,
          "end_col_offset": 34,
          "end_lineno": 13,
          "id": "uint256",
          "lineno": 13,
          "node_id": 30,
          "src": "196:7:9"
        },
        "src": "169:65:9"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 18,
                "id": "uint256",
                "lineno": 18,
                "node_id": 35,
                "src": "278:7:9"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 38,
              "end_lineno": 18,
              "lineno": 18,
              "node_id": 34,
              "src": "270:15:9"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 23,
          "default": null,
          "defaults": [],
          "end_col_offset": 38,
          "end_lineno": 18,
          "lineno": 18,
          "node_id": 33,
          "src": "270:15:9"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 19,
            "lineno": 19,
            "node_id": 37,
            "src": "292:27:9",
            "target": {
              "ast_type": "Attribute",
              "attr": "virtual_price",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 19,
              "lineno": 19,
              "node_id": 38,
              "src": "292:18:9",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 19,
                "id": "self",
                "lineno": 19,
                "node_id": 39,
                "src": "292:4:9"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 25,
              "end_col_offset": 31,
              "end_lineno": 19,
              "id": "_value",
              "lineno": 19,
              "node_id": 42,
              "src": "313:6:9"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 17,
            "id": "external",
            "lineno": 17,
            "node_id": 44,
            "src": "238:8:9"
          }
        ],
        "doc_string": null,
        "end_col_offset": 31,
        "end_lineno": 19,
        "lineno": 18,
        "name": "_set_virtual_price",
        "node_id": 32,
        "pos": null,
        "returns": null,
        "src": "247:72:9"
      }
    ],
    "col_offset": 0,
    "doc_string": null,
    "end_col_offset": 31,
    "end_lineno": 19,
    "lineno": 1,
    "name": "contracts/testing/SwapMock.vy",
    "node_id": 0,
    "src": "0:319:9"
  },
  "bytecode": "0x670de0b6b3a764000060005561006556600436101561000d5761004f565b600035601c52600051341561002157600080fd5b63bb7b8b808114156100395760005460005260206000f35b633ba6801281141561004d57600435600055005b505b60006000fd5b61001061006503610010600039610010610065036000f3",
  "bytecodeSha1": "66bb392e048607369208cdc471dad137eab53faf",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.12"
  },
  "contractName": "SwapMock",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "SwapMock._set_virtual_price": {
          "1": [
            292,
            319
          ]
        },
        "SwapMock.get_virtual_price": {
          "0": [
            209,
            234
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d5761004f565b600035601c52600051341561002157600080fd5b63bb7b8b808114156100395760005460005260206000f35b633ba6801281141561004d57600435600055005b505b60006000fd",
  "deployedSourceMap": "-1:-1:9:-;;;;;:::-;;:::-;:::-;;;;;;;;;;:::-;;;;:::-;169:65;;;;;:::-;216:18;209:25;;;;;;169:65::-;247:72;;;;;:::-;313:6;-1:-1;292:18;:27;247:72;:::-;-1:-1;:::-;;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {}
  },
  "offset": [
    0,
    320
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x04F JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH1 0x0 MLOAD CALLVALUE ISZERO PUSH2 0x021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xBB7B8B80 DUP2 EQ ISZERO PUSH2 0x039 JUMPI PUSH1 0x0 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x3BA68012 DUP2 EQ ISZERO PUSH2 0x04D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SSTORE STOP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT",
  "pcMap": {
    "0": {
      "offset": [
        0,
        319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x04F"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19": {
      "op": "MSTORE"
    },
    "20": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22": {
      "op": "MLOAD"
    },
    "23": {
      "op": "CALLVALUE"
    },
    "24": {
      "op": "ISZERO"
    },
    "25": {
      "op": "PUSH2",
      "value": "0x021"
    },
    "28": {
      "op": "JUMPI"
    },
    "29": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "31": {
      "offset": [
        0,
        0
      ],
      "op": "DUP1",
      "path": "0"
    },
    "32": {
      "dev": "Cannot send ether to nonpayable function",
      "op": "REVERT"
    },
    "33": {
      "op": "JUMPDEST"
    },
    "34": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        169,
        234
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB7B8B80"
    },
    "39": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        169,
        234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "40": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        169,
        234
      ],
      "op": "EQ",
      "path": "0"
    },
    "41": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        169,
        234
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "42": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        169,
        234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x039"
    },
    "45": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        169,
        234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "46": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        216,
        234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "48": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        209,
        234
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "49": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        209,
        234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "51": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        209,
        234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "52": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        209,
        234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "54": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        209,
        234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "56": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        209,
        234
      ],
      "op": "RETURN",
      "path": "0"
    },
    "57": {
      "fn": "SwapMock.get_virtual_price",
      "offset": [
        169,
        234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "58": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3BA68012"
    },
    "63": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "64": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "EQ",
      "path": "0"
    },
    "65": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "66": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x04D"
    },
    "69": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "70": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        313,
        319
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x4"
    },
    "72": {
      "op": "CALLDATALOAD"
    },
    "73": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        292,
        310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "75": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        292,
        319
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "76": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "STOP",
      "path": "0"
    },
    "77": {
      "fn": "SwapMock._set_virtual_price",
      "offset": [
        247,
        319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "78": {
      "op": "POP"
    },
    "79": {
      "op": "JUMPDEST"
    },
    "80": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "82": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "84": {
      "op": "REVERT"
    }
  },
  "sha1": "1960f264ae8bfa97b38d034ca40b0c9c6ee6aa40",
  "source": "# @version ^0.2.0\n# Minimal StableSwap mock for testing snow pool\n\nvirtual_price: uint256\n\n@external\ndef __init__():\n    self.virtual_price = 10 ** 18\n\n\n@view\n@external\ndef get_virtual_price() -> uint256:\n    return self.virtual_price\n\n\n@external\ndef _set_virtual_price(_value: uint256):\n    self.virtual_price = _value\n",
  "sourceMap": "",
  "sourcePath": "contracts/testing/SwapMock.vy",
  "type": "contract"
}