{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_underlyingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_lendingPool",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_get_rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "_mint_for_testing",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "_set_pool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "set_exchange_rate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testing/AaveLendingPoolMock.sol",
    "1": "contracts/testing/aERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/testing/aERC20.sol",
    "exportedSymbols": {
      "ATokenMock": [
        689
      ],
      "IERC20": [
        256
      ],
      "SafeMath": [
        227
      ]
    },
    "id": 690,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 130,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "contracts/testing/AaveLendingPoolMock.sol",
        "file": "./AaveLendingPoolMock.sol",
        "id": 132,
        "nodeType": "ImportDirective",
        "scope": 690,
        "sourceUnit": 129,
        "src": "25:62:1",
        "symbolAliases": [
          {
            "foreign": 131,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 227,
        "linearizedBaseContracts": [
          227
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "172:68:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "182:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 142,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "186:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "190:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "186:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "182:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "182:9:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 148,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "209:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "214:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "209:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        707,
                        708
                      ],
                      "referencedDeclaration": 707,
                      "src": "201:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "201:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "201:15:1"
                }
              ]
            },
            "documentation": null,
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "125:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "133:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "133:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "124:16:1"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "164:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "163:8:1"
            },
            "scope": 227,
            "src": "112:128:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "305:69:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 164,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "323:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 165,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "328:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "323:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        707,
                        708
                      ],
                      "referencedDeclaration": 707,
                      "src": "315:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "315:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "315:15:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 169,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "358:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "362:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "366:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "362:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "358:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "358:9:1"
                }
              ]
            },
            "documentation": null,
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "258:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "266:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:16:1"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "297:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "296:8:1"
            },
            "scope": 227,
            "src": "245:129:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "439:82:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "449:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "453:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "457:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "453:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "449:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "449:9:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "476:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "481:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "476:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 195,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "486:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 196,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "490:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "486:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "495:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "486:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "476:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        707,
                        708
                      ],
                      "referencedDeclaration": 707,
                      "src": "468:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "468:29:1"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "392:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "400:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:16:1"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "431:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "430:8:1"
            },
            "scope": 227,
            "src": "379:142:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "586:73:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "604:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "608:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "604:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 213,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        707,
                        708
                      ],
                      "referencedDeclaration": 707,
                      "src": "596:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "596:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "596:14:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 219,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "643:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "647:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "651:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "647:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "643:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "643:9:1"
                }
              ]
            },
            "documentation": null,
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "539:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "547:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "538:16:1"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "578:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "577:8:1"
            },
            "scope": 227,
            "src": "526:133:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 690,
        "src": "89:572:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 256,
        "linearizedBaseContracts": [
          256
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 234,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "705:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "714:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:18:1"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "731:0:1"
            },
            "scope": 256,
            "src": "687:45:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 243,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "759:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "768:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "777:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "758:27:1"
            },
            "returnParameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:1"
            },
            "scope": 256,
            "src": "737:58:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 248,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "817:2:1"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "838:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "837:9:1"
            },
            "scope": 256,
            "src": "800:47:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 255,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_mint_for_testing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "879:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "888:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "878:18:1"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "905:0:1"
            },
            "scope": 256,
            "src": "852:54:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 690,
        "src": "664:244:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 689,
        "linearizedBaseContracts": [
          689
        ],
        "name": "ATokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 259,
            "libraryName": {
              "contractScope": null,
              "id": 257,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 227,
              "src": "944:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$227",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "938:27:1",
            "typeName": {
              "id": 258,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "957:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 261,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "971:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 260,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "971:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 263,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "997:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 262,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "997:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 265,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1021:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 264,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1021:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 267,
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1050:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 266,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1050:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 269,
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1083:12:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 268,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1083:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 271,
            "name": "_get_rate",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1176:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 270,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1176:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 273,
            "name": "lendingPool",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1207:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 272,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1207:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 275,
            "name": "underlyingToken",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1232:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$256",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 274,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 256,
              "src": "1232:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$256",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 279,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1261:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 278,
              "keyType": {
                "id": 276,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1269:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1261:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 277,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1280:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 285,
            "name": "allowed",
            "nodeType": "VariableDeclaration",
            "scope": 689,
            "src": "1303:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 284,
              "keyType": {
                "id": 280,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1303:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 283,
                "keyType": {
                  "id": 281,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1330:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1322:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 282,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1341:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 293,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "indexed": false,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1380:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 289,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1394:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 291,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1406:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1379:41:1"
            },
            "src": "1365:56:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 301,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "1441:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 297,
                  "indexed": false,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "1456:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 299,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "1473:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1440:47:1"
            },
            "src": "1426:62:1"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "1682:288:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 314,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "1692:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 315,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "1701:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1692:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:16:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 318,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "1718:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 319,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "1725:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1718:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 322,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 265,
                      "src": "1740:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 323,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "1751:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1740:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "1770:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$256",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 328,
                          "name": "_underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "1795:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 327,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "1788:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$256_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1788:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$256",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1770:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$256",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "1822:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 333,
                      "name": "_lendingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "1836:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1822:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 336,
                      "name": "_get_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "1858:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1870:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1874:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "1870:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "1858:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 346,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "1931:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 348,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 728,
                            "src": "1957:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ATokenMock_$689",
                              "typeString": "contract ATokenMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ATokenMock_$689",
                              "typeString": "contract ATokenMock"
                            }
                          ],
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1949:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1949:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "_lendingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "1906:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 342,
                          "name": "AaveLendingPoolMock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 128,
                          "src": "1886:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AaveLendingPoolMock_$128_$",
                            "typeString": "type(contract AaveLendingPoolMock)"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1886:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AaveLendingPoolMock_$128",
                          "typeString": "contract AaveLendingPoolMock"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_add_token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "1886:44:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "1886:77:1"
                }
              ]
            },
            "documentation": null,
            "id": 353,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1515:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1544:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 307,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1575:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "name": "_underlyingToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1602:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "name": "_lendingPool",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1636:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1636:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1505:157:1"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1682:0:1"
            },
            "scope": 689,
            "src": "1494:476:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "2041:40:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 360,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2058:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 362,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 361,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "2067:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2058:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 359,
                  "id": 363,
                  "nodeType": "Return",
                  "src": "2051:23:1"
                }
              ]
            },
            "documentation": null,
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "1995:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1994:16:1"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "2032:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2032:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2031:9:1"
            },
            "scope": 689,
            "src": "1976:105:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 380,
              "nodeType": "Block",
              "src": "2220:49:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "2237:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 376,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "2245:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2237:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 378,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 377,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "2253:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2237:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 373,
                  "id": 379,
                  "nodeType": "Return",
                  "src": "2230:32:1"
                }
              ]
            },
            "documentation": null,
            "id": 381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 381,
                  "src": "2115:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 369,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 381,
                  "src": "2139:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2105:56:1"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 381,
                  "src": "2207:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2206:9:1"
            },
            "scope": 689,
            "src": "2087:182:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "2348:129:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "2358:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 394,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 391,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "2366:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2366:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2358:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 395,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 393,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "2378:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2358:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "2390:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2358:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:38:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 704,
                          "src": "2420:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2420:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 402,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "2432:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "2442:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 399,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "2411:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "EmitStatement",
                  "src": "2406:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2466:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 389,
                  "id": 407,
                  "nodeType": "Return",
                  "src": "2459:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 383,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "2292:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2292:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 385,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "2310:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2310:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2291:34:1"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "2342:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2341:6:1"
            },
            "scope": 689,
            "src": "2275:202:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "2552:192:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 418,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2562:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 421,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 419,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 704,
                          "src": "2571:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2571:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2562:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 427,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "2610:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 422,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "2585:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 425,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 423,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "2594:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2594:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2585:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "2585:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2585:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2562:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "2562:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2627:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 433,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 432,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "2636:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2627:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 438,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "2661:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 434,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "2643:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 436,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "2652:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2643:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "2643:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2643:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2627:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "2627:41:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 443,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 704,
                          "src": "2692:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2692:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 445,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "2704:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 446,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "2709:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 442,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "2683:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2683:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "EmitStatement",
                  "src": "2678:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2733:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 417,
                  "id": 450,
                  "nodeType": "Return",
                  "src": "2726:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "2501:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 413,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "2514:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2514:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2500:29:1"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 416,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "2546:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2545:6:1"
            },
            "scope": 689,
            "src": "2483:261:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "2888:254:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2898:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 465,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 464,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 454,
                        "src": "2907:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2898:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "2936:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 466,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "2916:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 468,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "2925:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2916:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "2916:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2916:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2898:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 474,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "2953:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 478,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 475,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 454,
                          "src": "2961:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2953:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 479,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 704,
                          "src": "2968:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2968:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2953:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 487,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "3013:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 480,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 285,
                              "src": "2982:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 482,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 481,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 454,
                              "src": "2990:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2982:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 485,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 483,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "2997:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2997:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2982:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "2982:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2982:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2953:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:67:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 491,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3030:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 493,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 492,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "3039:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3030:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 498,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "3064:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 494,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3046:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 496,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 495,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "3055:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3046:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "3046:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3046:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3030:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "3030:41:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 503,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 454,
                        "src": "3095:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 504,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "3102:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 505,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "3107:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 502,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "3086:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3086:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 507,
                  "nodeType": "EmitStatement",
                  "src": "3081:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3131:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 462,
                  "id": 509,
                  "nodeType": "Return",
                  "src": "3124:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "2781:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "2804:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "2825:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2825:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2771:74:1"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "2878:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2878:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2877:6:1"
            },
            "scope": 689,
            "src": "2750:392:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "3218:210:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 520,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "3228:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 523,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "3258:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 521,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "3242:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "3242:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3242:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3228:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 526,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3276:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 529,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "3285:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3276:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 534,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "3314:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 530,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3294:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 532,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 531,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "3303:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3294:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "3294:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3294:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3276:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:46:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 541,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 515,
                        "src": "3357:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 542,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "3362:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 538,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3332:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$256",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 234,
                      "src": "3332:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3332:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "3332:38:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 546,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "3394:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3409:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3401:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3401:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 550,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "3413:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 545,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "3385:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3385:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "EmitStatement",
                  "src": "3380:41:1"
                }
              ]
            },
            "documentation": null,
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 513,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "3164:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3164:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "3179:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3179:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "3192:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3163:45:1"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3218:0:1"
            },
            "scope": 689,
            "src": "3148:280:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "3487:200:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 562,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "3505:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3505:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 564,
                          "name": "lendingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "3519:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3505:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        707,
                        708
                      ],
                      "referencedDeclaration": 707,
                      "src": "3497:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 568,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "3541:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 571,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 558,
                          "src": "3571:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 569,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "3555:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "3555:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3555:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3541:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "3541:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 575,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3589:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 577,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "3598:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3589:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 582,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 558,
                          "src": "3623:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "3605:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 580,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 579,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "3614:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3605:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "3605:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3605:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3589:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "3589:42:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3663:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3655:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3655:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 590,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "3667:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "3672:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 586,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "3646:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3646:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "EmitStatement",
                  "src": "3641:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "3448:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3448:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "3461:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3447:30:1"
            },
            "returnParameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:0:1"
            },
            "scope": 689,
            "src": "3434:253:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "3736:29:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 600,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "3746:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "3753:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3746:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "3746:12:1"
                }
              ]
            },
            "documentation": null,
            "id": 605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_set_pool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "name": "_pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "3712:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3712:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3711:15:1"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3736:0:1"
            },
            "scope": 689,
            "src": "3693:72:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 644,
              "nodeType": "Block",
              "src": "3822:363:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 610,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "4014:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 613,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "4044:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 615,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 614,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "4053:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4044:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 611,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "4028:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 176,
                        "src": "4028:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4028:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4014:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:45:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "4069:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 621,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "4078:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4069:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4116:2:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3138",
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4120:2:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "4116:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 626,
                              "name": "_rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "4105:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 622,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 279,
                                "src": "4086:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 624,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 623,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 269,
                                "src": "4095:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4086:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "4086:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4086:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 226,
                        "src": "4086:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4086:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4069:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "4069:54:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 635,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "4133:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 638,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "4163:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 640,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 639,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "4172:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4163:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 636,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "4147:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "4147:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4147:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4133:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 643,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:45:1"
                }
              ]
            },
            "documentation": null,
            "id": 645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set_exchange_rate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 645,
                  "src": "3798:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3798:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3797:15:1"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3822:0:1"
            },
            "scope": 689,
            "src": "3771:414:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "4257:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 652,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "4267:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 655,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "4297:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 653,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "4281:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "4281:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4281:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4267:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "4267:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "4315:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 661,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 660,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "4324:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4315:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 666,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 649,
                          "src": "4349:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 662,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "4331:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 664,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 663,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "4340:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4331:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 154,
                        "src": "4331:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4331:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4315:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "4315:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 674,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 728,
                            "src": "4409:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ATokenMock_$689",
                              "typeString": "contract ATokenMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ATokenMock_$689",
                              "typeString": "contract ATokenMock"
                            }
                          ],
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4401:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4401:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "4416:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 670,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "4367:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$256",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint_for_testing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 255,
                      "src": "4367:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4367:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "4367:57:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4456:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4448:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4448:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 683,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "4460:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 684,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "4465:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 679,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "4439:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4439:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "EmitStatement",
                  "src": "4434:39:1"
                }
              ]
            },
            "documentation": null,
            "id": 688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint_for_testing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 647,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "4218:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4218:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "4231:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4231:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4217:30:1"
            },
            "returnParameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:0:1"
            },
            "scope": 689,
            "src": "4191:289:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 690,
        "src": "911:3572:1"
      }
    ],
    "src": "0:4484:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000e2938038062000e29833981810160405260a08110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040908152602082810151918301516060909301518651929550929350620001c79160009187019062000289565b508451620001dd90600190602088019062000289565b506002839055600780546001600160a01b038085166001600160a01b0319928316811790935560068054918516919092168117909155670de0b6b3a76400006005556040805163fdcc636360e01b8152600481019390935230602484015251909163fdcc636391604480830192600092919082900301818387803b1580156200026557600080fd5b505af11580156200027a573d6000803e3d6000fd5b5050505050505050506200032e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002cc57805160ff1916838001178555620002fc565b82800160010185558215620002fc579182015b82811115620002fc578251825591602001919060010190620002df565b506200030a9291506200030e565b5090565b6200032b91905b808211156200030a576000815560010162000315565b90565b610aeb806200033e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f1911610097578063a9059cbb11610066578063a9059cbb146102e4578063cf4f29d814610310578063dd62ed3e14610318578063f8c1410214610346576100f5565b806340c10f191461026457806370a08231146102905780637cb2566c146102b657806395d89b41146102dc576100f5565b80630e6dfcd5116100d35780630e6dfcd5146101d657806318160ddd1461020c57806323b872dd14610226578063313ce5671461025c576100f5565b806306fdde03146100fa578063095ea7b3146101775780630e216fe9146101b7575b600080fd5b610102610372565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103ff565b604080519115158252519081900360200190f35b6101d4600480360360208110156101cd57600080fd5b5035610471565b005b6101d4600480360360608110156101ec57600080fd5b506001600160a01b03813581169160208101359091169060400135610527565b61021461061e565b60408051918252519081900360200190f35b6101a36004803603606081101561023c57600080fd5b506001600160a01b03813581169160208101359091169060400135610624565b610214610724565b6101d46004803603604081101561027a57600080fd5b506001600160a01b03813516906020013561072a565b610214600480360360208110156102a657600080fd5b50356001600160a01b03166107ce565b6101d4600480360360208110156102cc57600080fd5b50356001600160a01b03166107e9565b61010261080b565b6101a3600480360360408110156102fa57600080fd5b506001600160a01b038135169060200135610866565b61021461090c565b6102146004803603604081101561032e57600080fd5b506001600160a01b0381358116916020013516610912565b6101d46004803603604081101561035c57600080fd5b506001600160a01b03813516906020013561093d565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b505050505081565b3360008181526009602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a15060015b92915050565b6004546001600160a01b031660009081526008602052604090205460035461049e9163ffffffff610a3116565b6003556004546001600160a01b03166000908152600860205260409020546104e690670de0b6b3a7640000906104da908463ffffffff610a4616565b9063ffffffff610a6716565b600480546001600160a01b0390811660009081526008602052604080822094909455915416815220546003546105219163ffffffff610a8616565b60035550565b60035461053a908263ffffffff610a3116565b6003556001600160a01b038316600090815260086020526040902054610566908263ffffffff610a3116565b6001600160a01b0380851660009081526008602052604080822093909355600754835163a9059cbb60e01b8152868416600482015260248101869052935192169263a9059cbb926044808301939282900301818387803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b5050604080516001600160a01b0387168152600060208201528082018590529051600080516020610a978339815191529350908190036060019150a1505050565b60035481565b6001600160a01b03831660009081526008602052604081205461064d908363ffffffff610a3116565b6001600160a01b038516600090815260086020908152604080832093909355600981528282203383529052205461068a908363ffffffff610a3116565b6001600160a01b0380861660009081526009602090815260408083203384528252808320949094559186168152600890915220546106ce908363ffffffff610a8616565b6001600160a01b038085166000818152600860209081526040918290209490945580519288168352928201528082018490529051600080516020610a978339815191529181900360600190a15060019392505050565b60025481565b6006546001600160a01b0316331461074157600080fd5b600354610754908263ffffffff610a8616565b6003556001600160a01b038216600090815260086020526040902054610780908263ffffffff610a8616565b6001600160a01b03831660008181526008602090815260408083209490945583519182528101919091528082018390529051600080516020610a978339815191529181900360600190a15050565b6001600160a01b031660009081526008602052604090205490565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b33600090815260086020526040812054610886908363ffffffff610a3116565b33600090815260086020526040808220929092556001600160a01b038516815220546108b8908363ffffffff610a8616565b6001600160a01b0384166000818152600860209081526040918290209390935580513381529283019190915281810184905251600080516020610a978339815191529181900360600190a150600192915050565b60055481565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205490565b600354610950908263ffffffff610a8616565b6003556001600160a01b03821660009081526008602052604090205461097c908263ffffffff610a8616565b6001600160a01b03808416600090815260086020526040808220939093556007548351637c60a08160e11b815230600482015260248101869052935192169263f8c14102926044808301939282900301818387803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b505060408051600081526001600160a01b03861660208201528082018590529051600080516020610a978339815191529350908190036060019150a15050565b600082821115610a4057600080fd5b50900390565b818102821580610a5e575081838281610a5b57fe5b04145b61046b57600080fd5b6000808211610a7557600080fd5b818381610a7e57fe5b049392505050565b8181018281101561046b57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa265627a7a723158206e9974893c03aed01f8ab95254d259bfdd691ae7e9dadbcf0ece95359ba35e1b64736f6c63430005110032",
  "bytecodeSha1": "8e3fa68d1a9d6f12790812081fd769fc77ac5c44",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "ATokenMock",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "ATokenMock.mint": {
          "38": [
            3505,
            3530,
            true
          ]
        },
        "SafeMath.add": {
          "43": [
            209,
            215,
            true
          ]
        },
        "SafeMath.div": {
          "42": [
            604,
            609,
            true
          ]
        },
        "SafeMath.mul": {
          "40": [
            476,
            482,
            true
          ],
          "41": [
            486,
            496,
            true
          ]
        },
        "SafeMath.sub": {
          "39": [
            323,
            329,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "ATokenMock._mint_for_testing": {
          "26": [
            4267,
            4305
          ],
          "27": [
            4315,
            4357
          ],
          "28": [
            4367,
            4424
          ],
          "29": [
            4434,
            4473
          ]
        },
        "ATokenMock._set_pool": {
          "20": [
            3746,
            3758
          ]
        },
        "ATokenMock.allowance": {
          "25": [
            2230,
            2262
          ]
        },
        "ATokenMock.approve": {
          "0": [
            2358,
            2396
          ],
          "1": [
            2406,
            2449
          ],
          "2": [
            2459,
            2470
          ]
        },
        "ATokenMock.balanceOf": {
          "19": [
            2051,
            2074
          ]
        },
        "ATokenMock.mint": {
          "15": [
            3497,
            3531
          ],
          "16": [
            3541,
            3579
          ],
          "17": [
            3589,
            3631
          ],
          "18": [
            3641,
            3680
          ]
        },
        "ATokenMock.redeem": {
          "6": [
            3228,
            3266
          ],
          "7": [
            3276,
            3322
          ],
          "8": [
            3332,
            3370
          ],
          "9": [
            3380,
            3421
          ]
        },
        "ATokenMock.set_exchange_rate": {
          "3": [
            4014,
            4059
          ],
          "4": [
            4069,
            4123
          ],
          "5": [
            4133,
            4178
          ]
        },
        "ATokenMock.transfer": {
          "21": [
            2562,
            2617
          ],
          "22": [
            2627,
            2668
          ],
          "23": [
            2678,
            2716
          ],
          "24": [
            2726,
            2737
          ]
        },
        "ATokenMock.transferFrom": {
          "10": [
            2898,
            2943
          ],
          "11": [
            2953,
            3020
          ],
          "12": [
            3030,
            3071
          ],
          "13": [
            3081,
            3114
          ],
          "14": [
            3124,
            3135
          ]
        },
        "SafeMath.add": {
          "36": [
            182,
            191
          ],
          "37": [
            201,
            216
          ]
        },
        "SafeMath.div": {
          "34": [
            596,
            610
          ],
          "35": [
            643,
            652
          ]
        },
        "SafeMath.mul": {
          "32": [
            449,
            458
          ],
          "33": [
            468,
            497
          ]
        },
        "SafeMath.sub": {
          "30": [
            315,
            330
          ],
          "31": [
            358,
            367
          ]
        }
      }
    }
  },
  "dependencies": [
    "AaveLendingPoolMock",
    "IERC20",
    "IERC20",
    "SafeMath",
    "aToken"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f1911610097578063a9059cbb11610066578063a9059cbb146102e4578063cf4f29d814610310578063dd62ed3e14610318578063f8c1410214610346576100f5565b806340c10f191461026457806370a08231146102905780637cb2566c146102b657806395d89b41146102dc576100f5565b80630e6dfcd5116100d35780630e6dfcd5146101d657806318160ddd1461020c57806323b872dd14610226578063313ce5671461025c576100f5565b806306fdde03146100fa578063095ea7b3146101775780630e216fe9146101b7575b600080fd5b610102610372565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103ff565b604080519115158252519081900360200190f35b6101d4600480360360208110156101cd57600080fd5b5035610471565b005b6101d4600480360360608110156101ec57600080fd5b506001600160a01b03813581169160208101359091169060400135610527565b61021461061e565b60408051918252519081900360200190f35b6101a36004803603606081101561023c57600080fd5b506001600160a01b03813581169160208101359091169060400135610624565b610214610724565b6101d46004803603604081101561027a57600080fd5b506001600160a01b03813516906020013561072a565b610214600480360360208110156102a657600080fd5b50356001600160a01b03166107ce565b6101d4600480360360208110156102cc57600080fd5b50356001600160a01b03166107e9565b61010261080b565b6101a3600480360360408110156102fa57600080fd5b506001600160a01b038135169060200135610866565b61021461090c565b6102146004803603604081101561032e57600080fd5b506001600160a01b0381358116916020013516610912565b6101d46004803603604081101561035c57600080fd5b506001600160a01b03813516906020013561093d565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b505050505081565b3360008181526009602090815260408083206001600160a01b0387168085529083528184208690558151948552918401919091528281018490525190917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925919081900360600190a15060015b92915050565b6004546001600160a01b031660009081526008602052604090205460035461049e9163ffffffff610a3116565b6003556004546001600160a01b03166000908152600860205260409020546104e690670de0b6b3a7640000906104da908463ffffffff610a4616565b9063ffffffff610a6716565b600480546001600160a01b0390811660009081526008602052604080822094909455915416815220546003546105219163ffffffff610a8616565b60035550565b60035461053a908263ffffffff610a3116565b6003556001600160a01b038316600090815260086020526040902054610566908263ffffffff610a3116565b6001600160a01b0380851660009081526008602052604080822093909355600754835163a9059cbb60e01b8152868416600482015260248101869052935192169263a9059cbb926044808301939282900301818387803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b5050604080516001600160a01b0387168152600060208201528082018590529051600080516020610a978339815191529350908190036060019150a1505050565b60035481565b6001600160a01b03831660009081526008602052604081205461064d908363ffffffff610a3116565b6001600160a01b038516600090815260086020908152604080832093909355600981528282203383529052205461068a908363ffffffff610a3116565b6001600160a01b0380861660009081526009602090815260408083203384528252808320949094559186168152600890915220546106ce908363ffffffff610a8616565b6001600160a01b038085166000818152600860209081526040918290209490945580519288168352928201528082018490529051600080516020610a978339815191529181900360600190a15060019392505050565b60025481565b6006546001600160a01b0316331461074157600080fd5b600354610754908263ffffffff610a8616565b6003556001600160a01b038216600090815260086020526040902054610780908263ffffffff610a8616565b6001600160a01b03831660008181526008602090815260408083209490945583519182528101919091528082018390529051600080516020610a978339815191529181900360600190a15050565b6001600160a01b031660009081526008602052604090205490565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b33600090815260086020526040812054610886908363ffffffff610a3116565b33600090815260086020526040808220929092556001600160a01b038516815220546108b8908363ffffffff610a8616565b6001600160a01b0384166000818152600860209081526040918290209390935580513381529283019190915281810184905251600080516020610a978339815191529181900360600190a150600192915050565b60055481565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205490565b600354610950908263ffffffff610a8616565b6003556001600160a01b03821660009081526008602052604090205461097c908263ffffffff610a8616565b6001600160a01b03808416600090815260086020526040808220939093556007548351637c60a08160e11b815230600482015260248101869052935192169263f8c14102926044808301939282900301818387803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b505060408051600081526001600160a01b03861660208201528082018590529051600080516020610a978339815191529350908190036060019150a15050565b600082821115610a4057600080fd5b50900390565b818102821580610a5e575081838281610a5b57fe5b04145b61046b57600080fd5b6000808211610a7557600080fd5b818381610a7e57fe5b049392505050565b8181018281101561046b57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa265627a7a723158206e9974893c03aed01f8ab95254d259bfdd691ae7e9dadbcf0ece95359ba35e1b64736f6c63430005110032",
  "deployedSourceMap": "911:3572:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;911:3572:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;997:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:202;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2275:202:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3771:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3771:414:1;;:::i;:::-;;3148:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3148:280:1;;;;;;;;;;;;;;;;;:::i;1050:26::-;;;:::i;:::-;;;;;;;;;;;;;;;;2750:392;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2750:392:1;;;;;;;;;;;;;;;;;:::i;1021:23::-;;;:::i;3434:253::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3434:253:1;;;;;;;;:::i;1976:105::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1976:105:1;-1:-1:-1;;;;;1976:105:1;;:::i;3693:72::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3693:72:1;-1:-1:-1;;;;;3693:72:1;;:::i;971:20::-;;;:::i;2483:261::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2483:261:1;;;;;;;;:::i;1176:24::-;;;:::i;2087:182::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2087:182:1;;;;;;;;;;:::i;4191:289::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4191:289:1;;;;;;;;:::i;997:18::-;;;;;;;;;;;;;;;-1:-1:-1;;997:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2275:202::-;2366:10;2342:4;2358:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2358:29:1;;;;;;;;;;;:38;;;2411;;;;;;;;;;;;;;;;;;;2342:4;;2411:38;;;;;;;;;;-1:-1:-1;2466:4:1;2275:202;;;;;:::o;3771:414::-;4053:4;;-1:-1:-1;;;;;4053:4:1;4044:14;;;;:8;:14;;;;;;4028:11;;:31;;;:15;:31;:::i;:::-;4014:11;:45;4095:4;;-1:-1:-1;;;;;4095:4:1;4086:14;;;;:8;:14;;;;;;:37;;4116:6;;4086:25;;4105:5;4086:25;:18;:25;:::i;:::-;:29;:37;:29;:37;:::i;:::-;4078:4;;;-1:-1:-1;;;;;4078:4:1;;;4069:14;;;;:8;:14;;;;;;:54;;;;4172:4;;;4163:14;;;;4147:11;;:31;;;:15;:31;:::i;:::-;4133:11;:45;-1:-1:-1;3771:414:1:o;3148:280::-;3242:11;;:24;;3258:7;3242:24;:15;:24;:::i;:::-;3228:11;:38;-1:-1:-1;;;;;3294:15:1;;;;;;:8;:15;;;;;;:28;;3314:7;3294:28;:19;:28;:::i;:::-;-1:-1:-1;;;;;3276:15:1;;;;;;;:8;:15;;;;;;:46;;;;3332:15;;:38;;-1:-1:-1;;;3332:38:1;;;;;;;;;;;;;;;;;:15;;;:24;;:38;;;;;3276:15;3332:38;;;;;3276:15;3332;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;3332:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3385:36:1;;;-1:-1:-1;;;;;3385:36:1;;;;3409:1;3385:36;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3385:36:1;-1:-1:-1;3385:36:1;;;;;;;-1:-1:-1;3385:36:1;3148:280;;;:::o;1050:26::-;;;;:::o;2750:392::-;-1:-1:-1;;;;;2916:15:1;;2878:4;2916:15;;;:8;:15;;;;;;:27;;2936:6;2916:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;2898:15:1;;;;;;:8;:15;;;;;;;;:45;;;;2982:7;:14;;;;;2997:10;2982:26;;;;;;:38;;3013:6;2982:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;2953:14:1;;;;;;;:7;:14;;;;;;;;2968:10;2953:26;;;;;;;:67;;;;3046:13;;;;;:8;:13;;;;;:25;;3064:6;3046:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;3030:13:1;;;;;;;:8;:13;;;;;;;;;:41;;;;3086:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3086:28:1;;;;;;;;-1:-1:-1;3131:4:1;2750:392;;;;;:::o;1021:23::-;;;;:::o;3434:253::-;3519:11;;-1:-1:-1;;;;;3519:11:1;3505:10;:25;3497:34;;;;;;3555:11;;:24;;3571:7;3555:24;:15;:24;:::i;:::-;3541:11;:38;-1:-1:-1;;;;;3605:13:1;;;;;;:8;:13;;;;;;:26;;3623:7;3605:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;3589:13:1;;;;;;:8;:13;;;;;;;;:42;;;;3646:34;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3646:34:1;;;;;;;;3434:253;;:::o;1976:105::-;-1:-1:-1;;;;;2058:16:1;2032:7;2058:16;;;:8;:16;;;;;;;1976:105::o;3693:72::-;3746:4;:12;;-1:-1:-1;;;;;;3746:12:1;-1:-1:-1;;;;;3746:12:1;;;;;;;;;;3693:72::o;971:20::-;;;;;;;;;;;;;;;-1:-1:-1;;971:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:261;2594:10;2546:4;2585:20;;;:8;:20;;;;;;:32;;2610:6;2585:32;:24;:32;:::i;:::-;2571:10;2562:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;2643:13:1;;;;;;:25;;2661:6;2643:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;2627:13:1;;;;;;:8;:13;;;;;;;;;:41;;;;2683:33;;2692:10;2683:33;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2683:33:1;;;;;;;;-1:-1:-1;2733:4:1;2483:261;;;;:::o;1176:24::-;;;;:::o;2087:182::-;-1:-1:-1;;;;;2237:15:1;;;2207:7;2237:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2087:182::o;4191:289::-;4281:11;;:24;;4297:7;4281:24;:15;:24;:::i;:::-;4267:11;:38;-1:-1:-1;;;;;4331:13:1;;;;;;:8;:13;;;;;;:26;;4349:7;4331:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;4315:13:1;;;;;;;:8;:13;;;;;;:42;;;;4367:15;;:57;;-1:-1:-1;;;4367:57:1;;4409:4;4367:57;;;;;;;;;;;;:15;;;:33;;:57;;;;;4315:13;4367:57;;;;;4315:13;4367:15;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;4367:57:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4439:34:1;;;4456:1;4439:34;;-1:-1:-1;;;;;4439:34:1;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4439:34:1;-1:-1:-1;4439:34:1;;;;;;;-1:-1:-1;4439:34:1;4191:289;;:::o;245:129::-;297:6;328:1;323;:6;;315:15;;;;;;-1:-1:-1;362:5:1;;;245:129::o;379:142::-;453:5;;;476:6;;;:20;;;495:1;490;486;:5;;;;;;:10;476:20;468:29;;;;;526:133;578:6;608:1;604;:5;596:14;;;;;;651:1;647;:5;;;;;;;526:133;-1:-1:-1;;;526:133:1:o;112:128::-;186:5;;;209:6;;;;201:15;;;;",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    911,
    4483
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xCF4F29D8 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xF8C14102 EQ PUSH2 0x346 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x7CB2566C EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xE6DFCD5 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xE6DFCD5 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25C JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xE216FE9 EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x471 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x527 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x624 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x724 JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x72A JUMP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x80B JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x866 JUMP JUMPDEST PUSH2 0x214 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x912 JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x93D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP2 ADD DUP5 SWAP1 MSTORE MLOAD SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH2 0x49E SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xA31 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4E6 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x4DA SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xA46 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA67 AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD AND DUP2 MSTORE KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH2 0x521 SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xA86 AND JUMP JUMPDEST PUSH1 0x3 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x53A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA31 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x566 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA31 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SLOAD DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP4 MLOAD SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA97 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP2 POP LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x64D SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xA31 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x68A SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xA31 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x6CE SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xA86 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD SWAP3 DUP9 AND DUP4 MSTORE SWAP3 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA97 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x754 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA86 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x780 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA86 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD SWAP2 DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA97 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x886 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xA31 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8B8 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0xA86 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD CALLER DUP2 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD DUP5 SWAP1 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA97 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x950 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA86 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x97C SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xA86 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SLOAD DUP4 MLOAD PUSH4 0x7C60A081 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP4 MLOAD SWAP3 AND SWAP3 PUSH4 0xF8C14102 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA97 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 POP SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP2 POP LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL DUP3 ISZERO DUP1 PUSH2 0xA5E JUMPI POP DUP2 DUP4 DUP3 DUP2 PUSH2 0xA5B JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0xA7E JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x9974893C03AED01F8AB95254D259BF 0xDD PUSH10 0x1AE7E9DADBCF0ECE9535 SWAP12 LOG3 0x5E SHL PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        911,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        911,
        4483
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x40C10F19"
    },
    "38": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "60": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E4"
    },
    "64": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCF4F29D8"
    },
    "71": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x310"
    },
    "75": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x318"
    },
    "86": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF8C14102"
    },
    "93": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x346"
    },
    "97": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMP",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x40C10F19"
    },
    "109": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x264"
    },
    "113": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x290"
    },
    "124": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7CB2566C"
    },
    "131": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B6"
    },
    "135": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DC"
    },
    "146": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMP",
      "path": "1"
    },
    "151": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE6DFCD5"
    },
    "158": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "GT",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE6DFCD5"
    },
    "169": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D6"
    },
    "173": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "180": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C"
    },
    "184": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x226"
    },
    "195": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25C"
    },
    "206": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMP",
      "path": "1"
    },
    "211": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "212": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "213": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "219": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "223": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "224": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "229": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "230": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "233": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "234": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "235": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE216FE9"
    },
    "240": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "EQ",
      "path": "1"
    },
    "241": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B7"
    },
    "244": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "245": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "246": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "DUP1",
      "path": "1"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        911,
        4483
      ],
      "op": "REVERT",
      "path": "1"
    },
    "250": {
      "offset": [
        997,
        1015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "251": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x102"
    },
    "254": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x372"
    },
    "257": {
      "fn": null,
      "jump": "i",
      "offset": [
        997,
        1015
      ],
      "op": "JUMP",
      "path": "1"
    },
    "258": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "259": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "261": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "262": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "263": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "265": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "266": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "267": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "268": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "269": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "270": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "271": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "272": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "273": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "274": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "275": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "276": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "277": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "278": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "279": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "280": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "281": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "282": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "283": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "284": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP6",
      "path": "1"
    },
    "285": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "286": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "287": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "288": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "289": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "290": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "292": {
      "op": "JUMPDEST"
    },
    "293": {
      "op": "DUP4"
    },
    "294": {
      "op": "DUP2"
    },
    "295": {
      "op": "LT"
    },
    "296": {
      "op": "ISZERO"
    },
    "297": {
      "op": "PUSH2",
      "value": "0x13C"
    },
    "300": {
      "op": "JUMPI"
    },
    "301": {
      "op": "DUP2"
    },
    "302": {
      "op": "DUP2"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MLOAD"
    },
    "305": {
      "op": "DUP4"
    },
    "306": {
      "op": "DUP3"
    },
    "307": {
      "op": "ADD"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "op": "PUSH2",
      "value": "0x124"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "op": "JUMPDEST"
    },
    "317": {
      "op": "POP"
    },
    "318": {
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "319": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "320": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "321": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "322": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "323": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "324": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "325": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "326": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "327": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "329": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "AND",
      "path": "1"
    },
    "330": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "331": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "332": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x169"
    },
    "335": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "336": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "337": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "338": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SUB",
      "path": "1"
    },
    "339": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "340": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "341": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "343": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "344": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "346": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SUB",
      "path": "1"
    },
    "347": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "350": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "EXP",
      "path": "1"
    },
    "351": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SUB",
      "path": "1"
    },
    "352": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "NOT",
      "path": "1"
    },
    "353": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "AND",
      "path": "1"
    },
    "354": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "355": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "356": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "358": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "359": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "360": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "361": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "362": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "363": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "364": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "365": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "366": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "367": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "369": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "370": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "371": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "372": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SUB",
      "path": "1"
    },
    "373": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "374": {
      "fn": null,
      "offset": [
        997,
        1015
      ],
      "op": "RETURN",
      "path": "1"
    },
    "375": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A3"
    },
    "379": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "381": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "DUP1",
      "path": "1"
    },
    "382": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SUB",
      "path": "1"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "386": {
      "op": "DUP2"
    },
    "387": {
      "op": "LT"
    },
    "388": {
      "op": "ISZERO"
    },
    "389": {
      "op": "PUSH2",
      "value": "0x18D"
    },
    "392": {
      "op": "JUMPI"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "395": {
      "op": "DUP1"
    },
    "396": {
      "op": "REVERT"
    },
    "397": {
      "op": "JUMPDEST"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "DUP2",
      "path": "1"
    },
    "408": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "409": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "AND",
      "path": "1"
    },
    "410": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "411": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "413": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "ADD",
      "path": "1"
    },
    "414": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "415": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FF"
    },
    "418": {
      "fn": "ATokenMock.approve",
      "jump": "i",
      "offset": [
        2275,
        2477
      ],
      "op": "JUMP",
      "path": "1"
    },
    "419": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "420": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "422": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "DUP1",
      "path": "1"
    },
    "423": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "424": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "425": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "426": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "427": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "DUP3",
      "path": "1"
    },
    "428": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "429": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "430": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "431": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "DUP2",
      "path": "1"
    },
    "432": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "433": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SUB",
      "path": "1"
    },
    "434": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "436": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "ADD",
      "path": "1"
    },
    "437": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "438": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "RETURN",
      "path": "1"
    },
    "439": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "440": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "443": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "445": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "DUP1",
      "path": "1"
    },
    "446": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "447": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "SUB",
      "path": "1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "450": {
      "op": "DUP2"
    },
    "451": {
      "op": "LT"
    },
    "452": {
      "op": "ISZERO"
    },
    "453": {
      "op": "PUSH2",
      "value": "0x1CD"
    },
    "456": {
      "op": "JUMPI"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "459": {
      "op": "DUP1"
    },
    "460": {
      "op": "REVERT"
    },
    "461": {
      "op": "JUMPDEST"
    },
    "462": {
      "op": "POP"
    },
    "463": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "464": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x471"
    },
    "467": {
      "fn": "ATokenMock.set_exchange_rate",
      "jump": "i",
      "offset": [
        3771,
        4185
      ],
      "op": "JUMP",
      "path": "1"
    },
    "468": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "469": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "STOP",
      "path": "1"
    },
    "470": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "471": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "474": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "476": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "DUP1",
      "path": "1"
    },
    "477": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "478": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "SUB",
      "path": "1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "481": {
      "op": "DUP2"
    },
    "482": {
      "op": "LT"
    },
    "483": {
      "op": "ISZERO"
    },
    "484": {
      "op": "PUSH2",
      "value": "0x1EC"
    },
    "487": {
      "op": "JUMPI"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "490": {
      "op": "DUP1"
    },
    "491": {
      "op": "REVERT"
    },
    "492": {
      "op": "JUMPDEST"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "500": {
      "op": "SHL"
    },
    "501": {
      "op": "SUB"
    },
    "502": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "503": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "504": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "505": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "AND",
      "path": "1"
    },
    "506": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "507": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "509": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "DUP2",
      "path": "1"
    },
    "510": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "ADD",
      "path": "1"
    },
    "511": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "512": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "513": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "514": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "AND",
      "path": "1"
    },
    "515": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "516": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "518": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "ADD",
      "path": "1"
    },
    "519": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "520": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x527"
    },
    "523": {
      "fn": "ATokenMock.redeem",
      "jump": "i",
      "offset": [
        3148,
        3428
      ],
      "op": "JUMP",
      "path": "1"
    },
    "524": {
      "offset": [
        1050,
        1076
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "525": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x214"
    },
    "528": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61E"
    },
    "531": {
      "fn": "ATokenMock.redeem",
      "jump": "i",
      "offset": [
        1050,
        1076
      ],
      "op": "JUMP",
      "path": "1"
    },
    "532": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "533": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "535": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "DUP1",
      "path": "1"
    },
    "536": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "537": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "538": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "DUP3",
      "path": "1"
    },
    "539": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "540": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "541": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "542": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "DUP2",
      "path": "1"
    },
    "543": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "544": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "SUB",
      "path": "1"
    },
    "545": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "547": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "ADD",
      "path": "1"
    },
    "548": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "549": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "RETURN",
      "path": "1"
    },
    "550": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "551": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A3"
    },
    "554": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "556": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "DUP1",
      "path": "1"
    },
    "557": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "558": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "SUB",
      "path": "1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "561": {
      "op": "DUP2"
    },
    "562": {
      "op": "LT"
    },
    "563": {
      "op": "ISZERO"
    },
    "564": {
      "op": "PUSH2",
      "value": "0x23C"
    },
    "567": {
      "op": "JUMPI"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "570": {
      "op": "DUP1"
    },
    "571": {
      "op": "REVERT"
    },
    "572": {
      "op": "JUMPDEST"
    },
    "573": {
      "op": "POP"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "op": "SUB"
    },
    "582": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "583": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "584": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "585": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "AND",
      "path": "1"
    },
    "586": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "587": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "589": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "DUP2",
      "path": "1"
    },
    "590": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "ADD",
      "path": "1"
    },
    "591": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "592": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "593": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "594": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "AND",
      "path": "1"
    },
    "595": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "596": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "598": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "ADD",
      "path": "1"
    },
    "599": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "600": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x624"
    },
    "603": {
      "fn": "ATokenMock.transferFrom",
      "jump": "i",
      "offset": [
        2750,
        3142
      ],
      "op": "JUMP",
      "path": "1"
    },
    "604": {
      "offset": [
        1021,
        1044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "605": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        1021,
        1044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x214"
    },
    "608": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        1021,
        1044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x724"
    },
    "611": {
      "fn": "ATokenMock.transferFrom",
      "jump": "i",
      "offset": [
        1021,
        1044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "612": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "613": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "616": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "618": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "DUP1",
      "path": "1"
    },
    "619": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "620": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "SUB",
      "path": "1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "623": {
      "op": "DUP2"
    },
    "624": {
      "op": "LT"
    },
    "625": {
      "op": "ISZERO"
    },
    "626": {
      "op": "PUSH2",
      "value": "0x27A"
    },
    "629": {
      "op": "JUMPI"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "632": {
      "op": "DUP1"
    },
    "633": {
      "op": "REVERT"
    },
    "634": {
      "op": "JUMPDEST"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "DUP2",
      "path": "1"
    },
    "645": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "646": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "AND",
      "path": "1"
    },
    "647": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "648": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "650": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "ADD",
      "path": "1"
    },
    "651": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "652": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72A"
    },
    "655": {
      "fn": "ATokenMock.mint",
      "jump": "i",
      "offset": [
        3434,
        3687
      ],
      "op": "JUMP",
      "path": "1"
    },
    "656": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "657": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x214"
    },
    "660": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "662": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "663": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "664": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "SUB",
      "path": "1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "667": {
      "op": "DUP2"
    },
    "668": {
      "op": "LT"
    },
    "669": {
      "op": "ISZERO"
    },
    "670": {
      "op": "PUSH2",
      "value": "0x2A6"
    },
    "673": {
      "op": "JUMPI"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "676": {
      "op": "DUP1"
    },
    "677": {
      "op": "REVERT"
    },
    "678": {
      "op": "JUMPDEST"
    },
    "679": {
      "op": "POP"
    },
    "680": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "687": {
      "op": "SHL"
    },
    "688": {
      "op": "SUB"
    },
    "689": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "AND",
      "path": "1"
    },
    "690": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7CE"
    },
    "693": {
      "fn": "ATokenMock.balanceOf",
      "jump": "i",
      "offset": [
        1976,
        2081
      ],
      "op": "JUMP",
      "path": "1"
    },
    "694": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "695": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "698": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "700": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "DUP1",
      "path": "1"
    },
    "701": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "702": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "SUB",
      "path": "1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "705": {
      "op": "DUP2"
    },
    "706": {
      "op": "LT"
    },
    "707": {
      "op": "ISZERO"
    },
    "708": {
      "op": "PUSH2",
      "value": "0x2CC"
    },
    "711": {
      "op": "JUMPI"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "714": {
      "op": "DUP1"
    },
    "715": {
      "op": "REVERT"
    },
    "716": {
      "op": "JUMPDEST"
    },
    "717": {
      "op": "POP"
    },
    "718": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "725": {
      "op": "SHL"
    },
    "726": {
      "op": "SUB"
    },
    "727": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "AND",
      "path": "1"
    },
    "728": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E9"
    },
    "731": {
      "fn": "ATokenMock._set_pool",
      "jump": "i",
      "offset": [
        3693,
        3765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "732": {
      "offset": [
        971,
        991
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "733": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x102"
    },
    "736": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x80B"
    },
    "739": {
      "fn": "ATokenMock._set_pool",
      "jump": "i",
      "offset": [
        971,
        991
      ],
      "op": "JUMP",
      "path": "1"
    },
    "740": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "741": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A3"
    },
    "744": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "746": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "747": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "748": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "SUB",
      "path": "1"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "751": {
      "op": "DUP2"
    },
    "752": {
      "op": "LT"
    },
    "753": {
      "op": "ISZERO"
    },
    "754": {
      "op": "PUSH2",
      "value": "0x2FA"
    },
    "757": {
      "op": "JUMPI"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "760": {
      "op": "DUP1"
    },
    "761": {
      "op": "REVERT"
    },
    "762": {
      "op": "JUMPDEST"
    },
    "763": {
      "op": "POP"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "DUP2",
      "path": "1"
    },
    "773": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "774": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "AND",
      "path": "1"
    },
    "775": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "776": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "778": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "ADD",
      "path": "1"
    },
    "779": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "780": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x866"
    },
    "783": {
      "fn": "ATokenMock.transfer",
      "jump": "i",
      "offset": [
        2483,
        2744
      ],
      "op": "JUMP",
      "path": "1"
    },
    "784": {
      "offset": [
        1176,
        1200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "785": {
      "fn": "ATokenMock.transfer",
      "offset": [
        1176,
        1200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x214"
    },
    "788": {
      "fn": "ATokenMock.transfer",
      "offset": [
        1176,
        1200
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90C"
    },
    "791": {
      "fn": "ATokenMock.transfer",
      "jump": "i",
      "offset": [
        1176,
        1200
      ],
      "op": "JUMP",
      "path": "1"
    },
    "792": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "793": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x214"
    },
    "796": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "798": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "DUP1",
      "path": "1"
    },
    "799": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "800": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "SUB",
      "path": "1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "803": {
      "op": "DUP2"
    },
    "804": {
      "op": "LT"
    },
    "805": {
      "op": "ISZERO"
    },
    "806": {
      "op": "PUSH2",
      "value": "0x32E"
    },
    "809": {
      "op": "JUMPI"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "812": {
      "op": "DUP1"
    },
    "813": {
      "op": "REVERT"
    },
    "814": {
      "op": "JUMPDEST"
    },
    "815": {
      "op": "POP"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "DUP2",
      "path": "1"
    },
    "825": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "826": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "DUP2",
      "path": "1"
    },
    "827": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "AND",
      "path": "1"
    },
    "828": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "829": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "831": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "ADD",
      "path": "1"
    },
    "832": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "833": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "AND",
      "path": "1"
    },
    "834": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x912"
    },
    "837": {
      "fn": "ATokenMock.allowance",
      "jump": "i",
      "offset": [
        2087,
        2269
      ],
      "op": "JUMP",
      "path": "1"
    },
    "838": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "839": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "842": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "844": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "DUP1",
      "path": "1"
    },
    "845": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "846": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "SUB",
      "path": "1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "849": {
      "op": "DUP2"
    },
    "850": {
      "op": "LT"
    },
    "851": {
      "op": "ISZERO"
    },
    "852": {
      "op": "PUSH2",
      "value": "0x35C"
    },
    "855": {
      "op": "JUMPI"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "858": {
      "op": "DUP1"
    },
    "859": {
      "op": "REVERT"
    },
    "860": {
      "op": "JUMPDEST"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "868": {
      "op": "SHL"
    },
    "869": {
      "op": "SUB"
    },
    "870": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "DUP2",
      "path": "1"
    },
    "871": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "872": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "AND",
      "path": "1"
    },
    "873": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "874": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "876": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "ADD",
      "path": "1"
    },
    "877": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "878": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x93D"
    },
    "881": {
      "fn": "ATokenMock._mint_for_testing",
      "jump": "i",
      "offset": [
        4191,
        4480
      ],
      "op": "JUMP",
      "path": "1"
    },
    "882": {
      "offset": [
        997,
        1015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "883": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "885": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "886": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "887": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "889": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "890": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "891": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "893": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "895": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP5",
      "path": "1"
    },
    "896": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP7",
      "path": "1"
    },
    "897": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "AND",
      "path": "1"
    },
    "898": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "899": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "902": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MUL",
      "path": "1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "905": {
      "op": "NOT"
    },
    "906": {
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "907": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "908": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "909": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "AND",
      "path": "1"
    },
    "910": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "911": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "912": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "913": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DIV",
      "path": "1"
    },
    "914": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "916": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "917": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "918": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP5",
      "path": "1"
    },
    "919": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "920": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DIV",
      "path": "1"
    },
    "921": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP5",
      "path": "1"
    },
    "922": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MUL",
      "path": "1"
    },
    "923": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "924": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "925": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP5",
      "path": "1"
    },
    "926": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "927": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "928": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "929": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "930": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "931": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "932": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "933": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "934": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "935": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "936": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "937": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "938": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "939": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "940": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "941": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F7"
    },
    "944": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "945": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "946": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "948": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "LT",
      "path": "1"
    },
    "949": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC"
    },
    "952": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "953": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "956": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "957": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "958": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "959": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DIV",
      "path": "1"
    },
    "960": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MUL",
      "path": "1"
    },
    "961": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "962": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "963": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "964": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "966": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "967": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "968": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F7"
    },
    "971": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "JUMP",
      "path": "1"
    },
    "972": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "973": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "974": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "975": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "976": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "977": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "979": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "980": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "982": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "984": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "985": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "986": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "987": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "988": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "989": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "990": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "991": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "992": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "994": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "995": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "996": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "998": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "999": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1000": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1001": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "GT",
      "path": "1"
    },
    "1002": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DA"
    },
    "1005": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1006": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1007": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1008": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SUB",
      "path": "1"
    },
    "1009": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1011": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "AND",
      "path": "1"
    },
    "1012": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1013": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "ADD",
      "path": "1"
    },
    "1014": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1015": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1016": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "1017": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "1018": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "1019": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "1020": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "POP",
      "path": "1"
    },
    "1021": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        997,
        1015
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1022": {
      "fn": "ATokenMock._mint_for_testing",
      "jump": "o",
      "offset": [
        997,
        1015
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1023": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1024": {
      "fn": "ATokenMock.approve",
      "offset": [
        2366,
        2376
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 0
    },
    "1025": {
      "fn": "ATokenMock.approve",
      "offset": [
        2342,
        2346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1027": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1028": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1029": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1030": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1032": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1034": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1035": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1036": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1037": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1039": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1040": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1041": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2377
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1051": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "AND",
      "path": "1"
    },
    "1052": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1053": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1054": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1055": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1056": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1057": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1058": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1059": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1060": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2387
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1061": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2396
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1062": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2396
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1063": {
      "fn": "ATokenMock.approve",
      "offset": [
        2358,
        2396
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1064": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 1
    },
    "1065": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1066": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1067": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1068": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1069": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1070": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1071": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "ADD",
      "path": "1"
    },
    "1072": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1073": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1074": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1075": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1076": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1077": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1078": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "ADD",
      "path": "1"
    },
    "1079": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1080": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1081": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1082": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1083": {
      "fn": "ATokenMock.approve",
      "offset": [
        2342,
        2346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1084": {
      "fn": "ATokenMock.approve",
      "offset": [
        2342,
        2346
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1085": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1118": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1119": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1120": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1121": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1122": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SUB",
      "path": "1"
    },
    "1123": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1125": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "ADD",
      "path": "1"
    },
    "1126": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1127": {
      "fn": "ATokenMock.approve",
      "offset": [
        2411,
        2449
      ],
      "op": "LOG1",
      "path": "1"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "fn": "ATokenMock.approve",
      "offset": [
        2466,
        2470
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x1"
    },
    "1131": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1132": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1133": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1134": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "POP",
      "path": "1"
    },
    "1135": {
      "fn": "ATokenMock.approve",
      "offset": [
        2275,
        2477
      ],
      "op": "POP",
      "path": "1"
    },
    "1136": {
      "fn": "ATokenMock.approve",
      "jump": "o",
      "offset": [
        2275,
        2477
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1137": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        3771,
        4185
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1138": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4053,
        4057
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x4"
    },
    "1140": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4053,
        4057
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "SUB"
    },
    "1149": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4053,
        4057
      ],
      "op": "AND",
      "path": "1"
    },
    "1150": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1152": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1153": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1154": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1155": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4052
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1157": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1159": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1160": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1162": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1163": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1164": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4044,
        4058
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1165": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1167": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4039
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1168": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x49E"
    },
    "1171": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4059
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1172": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4059
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1177": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4043
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA31"
    },
    "1180": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4059
      ],
      "op": "AND",
      "path": "1"
    },
    "1181": {
      "fn": "ATokenMock.set_exchange_rate",
      "jump": "i",
      "offset": [
        4028,
        4059
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1182": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4028,
        4059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1183": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4014,
        4025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1185": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4014,
        4059
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1186": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4095,
        4099
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x4"
    },
    "1188": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4095,
        4099
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1195": {
      "op": "SHL"
    },
    "1196": {
      "op": "SUB"
    },
    "1197": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4095,
        4099
      ],
      "op": "AND",
      "path": "1"
    },
    "1198": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1200": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1201": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1202": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1203": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1205": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1207": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1208": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1210": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1211": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1212": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4100
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1213": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E6"
    },
    "1216": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1217": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4116,
        4122
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "1226": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4116,
        4122
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1227": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4111
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DA"
    },
    "1230": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4111
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1231": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4105,
        4110
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1232": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4111
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1237": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4104
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA46"
    },
    "1240": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4111
      ],
      "op": "AND",
      "path": "1"
    },
    "1241": {
      "fn": "ATokenMock.set_exchange_rate",
      "jump": "i",
      "offset": [
        4086,
        4111
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1242": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4111
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1243": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4115
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1244": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4123
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1249": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA67"
    },
    "1252": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4123
      ],
      "op": "AND",
      "path": "1"
    },
    "1253": {
      "fn": "ATokenMock.set_exchange_rate",
      "jump": "i",
      "offset": [
        4086,
        4123
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1254": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4086,
        4123
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1255": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4078,
        4082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1257": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4078,
        4082
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1258": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4078,
        4082
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "SUB"
    },
    "1267": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4078,
        4082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1268": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4078,
        4082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1269": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4078,
        4082
      ],
      "op": "AND",
      "path": "1"
    },
    "1270": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1272": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1273": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1274": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1275": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1277": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1279": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1280": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1282": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1283": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1284": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4083
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1285": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4123
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1286": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1287": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4123
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1288": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4069,
        4123
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1289": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4172,
        4176
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 5
    },
    "1290": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4172,
        4176
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1291": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4172,
        4176
      ],
      "op": "AND",
      "path": "1"
    },
    "1292": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4163,
        4177
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1293": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4163,
        4177
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1294": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4163,
        4177
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1295": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4163,
        4177
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1296": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4158
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1298": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4158
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1299": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4178
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x521"
    },
    "1302": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4178
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1303": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4178
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1308": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4162
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "1311": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4178
      ],
      "op": "AND",
      "path": "1"
    },
    "1312": {
      "fn": "ATokenMock.set_exchange_rate",
      "jump": "i",
      "offset": [
        4147,
        4178
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1313": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4147,
        4178
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1314": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4133,
        4144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1316": {
      "fn": "ATokenMock.set_exchange_rate",
      "offset": [
        4133,
        4178
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "fn": "ATokenMock.set_exchange_rate",
      "jump": "o",
      "offset": [
        3771,
        4185
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1319": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1320": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3253
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x3"
    },
    "1322": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3253
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1323": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53A"
    },
    "1326": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3266
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1327": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3258,
        3265
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1328": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3266
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1333": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA31"
    },
    "1336": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3266
      ],
      "op": "AND",
      "path": "1"
    },
    "1337": {
      "fn": "ATokenMock.redeem",
      "jump": "i",
      "offset": [
        3242,
        3266
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1338": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3242,
        3266
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1339": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3228,
        3239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1341": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3228,
        3266
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1348": {
      "op": "SHL"
    },
    "1349": {
      "op": "SUB"
    },
    "1350": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 7
    },
    "1351": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "AND",
      "path": "1"
    },
    "1352": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1354": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1355": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1356": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1357": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1359": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1361": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1362": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1364": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1365": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1366": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3309
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1367": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x566"
    },
    "1370": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1371": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3314,
        3321
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1372": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3322
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1377": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3313
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA31"
    },
    "1380": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3322
      ],
      "op": "AND",
      "path": "1"
    },
    "1381": {
      "fn": "ATokenMock.redeem",
      "jump": "i",
      "offset": [
        3294,
        3322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1382": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3294,
        3322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1389": {
      "op": "SHL"
    },
    "1390": {
      "op": "SUB"
    },
    "1391": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1392": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1393": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "AND",
      "path": "1"
    },
    "1394": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1396": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1397": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1398": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1399": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1401": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1403": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1404": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1406": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1407": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1408": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1409": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3322
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1410": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1411": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3322
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1412": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3322
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1413": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3347
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x7"
    },
    "1415": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3347
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1416": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1417": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1418": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1427": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1428": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1429": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1430": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "AND",
      "path": "1"
    },
    "1431": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1433": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1434": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1435": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1436": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1438": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1439": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1440": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1441": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1442": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1443": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1444": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1445": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3347
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1446": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3347
      ],
      "op": "AND",
      "path": "1"
    },
    "1447": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3347
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1448": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3356
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "1453": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3356
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1454": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1456": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1457": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1458": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1459": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1460": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1461": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1462": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1463": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "SUB",
      "path": "1"
    },
    "1464": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "ADD",
      "path": "1"
    },
    "1465": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1466": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3276,
        3291
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1467": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3347
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1468": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1469": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1470": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1471": {
      "op": "DUP1"
    },
    "1472": {
      "op": "ISZERO"
    },
    "1473": {
      "op": "PUSH2",
      "value": "0x5C9"
    },
    "1476": {
      "op": "JUMPI"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1479": {
      "op": "DUP1"
    },
    "1480": {
      "op": "REVERT"
    },
    "1481": {
      "op": "JUMPDEST"
    },
    "1482": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "POP",
      "path": "1"
    },
    "1483": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "GAS",
      "path": "1"
    },
    "1484": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "CALL",
      "path": "1"
    },
    "1485": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3332,
        3370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1486": {
      "op": "DUP1"
    },
    "1487": {
      "op": "ISZERO"
    },
    "1488": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1491": {
      "op": "JUMPI"
    },
    "1492": {
      "op": "RETURNDATASIZE"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1495": {
      "op": "DUP1"
    },
    "1496": {
      "op": "RETURNDATACOPY"
    },
    "1497": {
      "op": "RETURNDATASIZE"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1500": {
      "op": "REVERT"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "POP"
    },
    "1503": {
      "op": "POP"
    },
    "1504": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x40"
    },
    "1506": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1507": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "op": "SUB"
    },
    "1516": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1517": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "AND",
      "path": "1"
    },
    "1518": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1519": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1520": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3409,
        3410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1522": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1524": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1525": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "ADD",
      "path": "1"
    },
    "1526": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1527": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1528": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1529": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "ADD",
      "path": "1"
    },
    "1530": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1531": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1532": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1533": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1534": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1537": {
      "op": "DUP1"
    },
    "1538": {
      "op": "MLOAD"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1541": {
      "op": "PUSH2",
      "value": "0xA97"
    },
    "1544": {
      "op": "DUP4"
    },
    "1545": {
      "op": "CODECOPY"
    },
    "1546": {
      "op": "DUP2"
    },
    "1547": {
      "op": "MLOAD"
    },
    "1548": {
      "op": "SWAP2"
    },
    "1549": {
      "op": "MSTORE"
    },
    "1550": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1553": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1554": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1555": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "SUB",
      "path": "1"
    },
    "1556": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1558": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "ADD",
      "path": "1"
    },
    "1559": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3385,
        3421
      ],
      "op": "LOG1",
      "path": "1"
    },
    "1562": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "POP",
      "path": "1"
    },
    "1563": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "POP",
      "path": "1"
    },
    "1564": {
      "fn": "ATokenMock.redeem",
      "offset": [
        3148,
        3428
      ],
      "op": "POP",
      "path": "1"
    },
    "1565": {
      "fn": "ATokenMock.redeem",
      "jump": "o",
      "offset": [
        3148,
        3428
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1566": {
      "offset": [
        1050,
        1076
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1567": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1569": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1570": {
      "fn": "ATokenMock.redeem",
      "offset": [
        1050,
        1076
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1571": {
      "fn": "ATokenMock.redeem",
      "jump": "o",
      "offset": [
        1050,
        1076
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1572": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 10
    },
    "1582": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "AND",
      "path": "1"
    },
    "1583": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2878,
        2882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1585": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1586": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1587": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1588": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2924
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1590": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1592": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1593": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1595": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1596": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1597": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2931
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1598": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64D"
    },
    "1601": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2943
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1602": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2936,
        2942
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1603": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2943
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1608": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA31"
    },
    "1611": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2943
      ],
      "op": "AND",
      "path": "1"
    },
    "1612": {
      "fn": "ATokenMock.transferFrom",
      "jump": "i",
      "offset": [
        2916,
        2943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1613": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2916,
        2943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1623": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "AND",
      "path": "1"
    },
    "1624": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1626": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1627": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1628": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1629": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2906
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1631": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1633": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1634": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1635": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1636": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1638": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1639": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1640": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2913
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1641": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2943
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1642": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2943
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1643": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2943
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1644": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2898,
        2943
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1645": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        2989
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x9"
    },
    "1647": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        2996
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1648": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        2996
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1649": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        2996
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1650": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        2996
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1651": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        2996
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1652": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2997,
        3007
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1653": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3008
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1654": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3008
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1655": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3008
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1656": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3008
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1657": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3008
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1658": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3008
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1659": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3020
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x68A"
    },
    "1662": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1663": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3013,
        3019
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1664": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3020
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1669": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA31"
    },
    "1672": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3020
      ],
      "op": "AND",
      "path": "1"
    },
    "1673": {
      "fn": "ATokenMock.transferFrom",
      "jump": "i",
      "offset": [
        2982,
        3020
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1674": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2982,
        3020
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1681": {
      "op": "SHL"
    },
    "1682": {
      "op": "SUB"
    },
    "1683": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1684": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1685": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "AND",
      "path": "1"
    },
    "1686": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1688": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1689": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1690": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1691": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1693": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1695": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1696": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1697": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1698": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1700": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1701": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1702": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2967
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1703": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2968,
        2978
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1704": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2979
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1705": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2979
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1706": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2979
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1707": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2979
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1708": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2979
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1709": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2979
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1710": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        2979
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1711": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        3020
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1712": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        3020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1713": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        3020
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1714": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2953,
        3020
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1715": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 12
    },
    "1716": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1717": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "AND",
      "path": "1"
    },
    "1718": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1719": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1720": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1722": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1723": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1724": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1725": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1726": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3059
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1727": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3071
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6CE"
    },
    "1730": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1731": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3064,
        3070
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1732": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3071
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1737": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "1740": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3071
      ],
      "op": "AND",
      "path": "1"
    },
    "1741": {
      "fn": "ATokenMock.transferFrom",
      "jump": "i",
      "offset": [
        3046,
        3071
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1742": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3046,
        3071
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1749": {
      "op": "SHL"
    },
    "1750": {
      "op": "SUB"
    },
    "1751": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1752": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1753": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "AND",
      "path": "1"
    },
    "1754": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1756": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1757": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1758": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1759": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1761": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1763": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1764": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1765": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1766": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1768": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1769": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1770": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1771": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3043
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1772": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3071
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1773": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1774": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3071
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1775": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3030,
        3071
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1776": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 13
    },
    "1777": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1778": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1779": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1780": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "AND",
      "path": "1"
    },
    "1781": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1782": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1783": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1784": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1785": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "ADD",
      "path": "1"
    },
    "1786": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1787": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1788": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1789": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "ADD",
      "path": "1"
    },
    "1790": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1791": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1792": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1793": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1794": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1797": {
      "op": "DUP1"
    },
    "1798": {
      "op": "MLOAD"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1801": {
      "op": "PUSH2",
      "value": "0xA97"
    },
    "1804": {
      "op": "DUP4"
    },
    "1805": {
      "op": "CODECOPY"
    },
    "1806": {
      "op": "DUP2"
    },
    "1807": {
      "op": "MLOAD"
    },
    "1808": {
      "op": "SWAP2"
    },
    "1809": {
      "op": "MSTORE"
    },
    "1810": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1811": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1812": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1813": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SUB",
      "path": "1"
    },
    "1814": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1816": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "ADD",
      "path": "1"
    },
    "1817": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1818": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3086,
        3114
      ],
      "op": "LOG1",
      "path": "1"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        3131,
        3135
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x1"
    },
    "1822": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1823": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1824": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "POP",
      "path": "1"
    },
    "1825": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "POP",
      "path": "1"
    },
    "1826": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        2750,
        3142
      ],
      "op": "POP",
      "path": "1"
    },
    "1827": {
      "fn": "ATokenMock.transferFrom",
      "jump": "o",
      "offset": [
        2750,
        3142
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1828": {
      "offset": [
        1021,
        1044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1829": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        1021,
        1044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1831": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        1021,
        1044
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1832": {
      "fn": "ATokenMock.transferFrom",
      "offset": [
        1021,
        1044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1833": {
      "fn": "ATokenMock.transferFrom",
      "jump": "o",
      "offset": [
        1021,
        1044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1834": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1835": {
      "fn": "ATokenMock.mint",
      "offset": [
        3519,
        3530
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x6"
    },
    "1837": {
      "fn": "ATokenMock.mint",
      "offset": [
        3519,
        3530
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1844": {
      "op": "SHL"
    },
    "1845": {
      "op": "SUB"
    },
    "1846": {
      "fn": "ATokenMock.mint",
      "offset": [
        3519,
        3530
      ],
      "op": "AND",
      "path": "1"
    },
    "1847": {
      "fn": "ATokenMock.mint",
      "offset": [
        3505,
        3515
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1848": {
      "branch": 38,
      "fn": "ATokenMock.mint",
      "offset": [
        3505,
        3530
      ],
      "op": "EQ",
      "path": "1"
    },
    "1849": {
      "fn": "ATokenMock.mint",
      "offset": [
        3497,
        3531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x741"
    },
    "1852": {
      "branch": 38,
      "fn": "ATokenMock.mint",
      "offset": [
        3497,
        3531
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1853": {
      "fn": "ATokenMock.mint",
      "offset": [
        3497,
        3531
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1855": {
      "fn": "ATokenMock.mint",
      "offset": [
        3497,
        3531
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1856": {
      "fn": "ATokenMock.mint",
      "offset": [
        3497,
        3531
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1857": {
      "fn": "ATokenMock.mint",
      "offset": [
        3497,
        3531
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1858": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3566
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x3"
    },
    "1860": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3566
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1861": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x754"
    },
    "1864": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3579
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1865": {
      "fn": "ATokenMock.mint",
      "offset": [
        3571,
        3578
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1866": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3579
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1871": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "1874": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3579
      ],
      "op": "AND",
      "path": "1"
    },
    "1875": {
      "fn": "ATokenMock.mint",
      "jump": "i",
      "offset": [
        3555,
        3579
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1876": {
      "fn": "ATokenMock.mint",
      "offset": [
        3555,
        3579
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1877": {
      "fn": "ATokenMock.mint",
      "offset": [
        3541,
        3552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1879": {
      "fn": "ATokenMock.mint",
      "offset": [
        3541,
        3579
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "op": "SUB"
    },
    "1888": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 17
    },
    "1889": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "AND",
      "path": "1"
    },
    "1890": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1892": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1893": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1894": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1895": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1897": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1899": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1900": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1902": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1903": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1904": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3618
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1905": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x780"
    },
    "1908": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1909": {
      "fn": "ATokenMock.mint",
      "offset": [
        3623,
        3630
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1910": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3631
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1915": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3622
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "1918": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3631
      ],
      "op": "AND",
      "path": "1"
    },
    "1919": {
      "fn": "ATokenMock.mint",
      "jump": "i",
      "offset": [
        3605,
        3631
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1920": {
      "fn": "ATokenMock.mint",
      "offset": [
        3605,
        3631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1927": {
      "op": "SHL"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1930": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "AND",
      "path": "1"
    },
    "1931": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1933": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1934": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1935": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1936": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3597
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1938": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1940": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1941": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1942": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1943": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1945": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1946": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1947": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3602
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1948": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3631
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1949": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1950": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3631
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1951": {
      "fn": "ATokenMock.mint",
      "offset": [
        3589,
        3631
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1952": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 18
    },
    "1953": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1954": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1955": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1956": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1957": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1958": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "ADD",
      "path": "1"
    },
    "1959": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1960": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1961": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1962": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1963": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1964": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1965": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "ADD",
      "path": "1"
    },
    "1966": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1967": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1968": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1969": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1970": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1973": {
      "op": "DUP1"
    },
    "1974": {
      "op": "MLOAD"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0xA97"
    },
    "1980": {
      "op": "DUP4"
    },
    "1981": {
      "op": "CODECOPY"
    },
    "1982": {
      "op": "DUP2"
    },
    "1983": {
      "op": "MLOAD"
    },
    "1984": {
      "op": "SWAP2"
    },
    "1985": {
      "op": "MSTORE"
    },
    "1986": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1987": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1988": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1989": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SUB",
      "path": "1"
    },
    "1990": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1992": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "ADD",
      "path": "1"
    },
    "1993": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1994": {
      "fn": "ATokenMock.mint",
      "offset": [
        3646,
        3680
      ],
      "op": "LOG1",
      "path": "1"
    },
    "1995": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "POP",
      "path": "1"
    },
    "1996": {
      "fn": "ATokenMock.mint",
      "offset": [
        3434,
        3687
      ],
      "op": "POP",
      "path": "1"
    },
    "1997": {
      "fn": "ATokenMock.mint",
      "jump": "o",
      "offset": [
        3434,
        3687
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1998": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        1976,
        2081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "op": "SUB"
    },
    "2007": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "AND",
      "path": "1",
      "statement": 19
    },
    "2008": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2032,
        2039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2010": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2011": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2012": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2013": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2066
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2015": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2017": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2018": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2020": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2021": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2022": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2023": {
      "fn": "ATokenMock.balanceOf",
      "offset": [
        2058,
        2074
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2024": {
      "fn": "ATokenMock.balanceOf",
      "jump": "o",
      "offset": [
        1976,
        2081
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2025": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3693,
        3765
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2026": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3750
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x4"
    },
    "2028": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2029": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2036": {
      "op": "SHL"
    },
    "2037": {
      "op": "SUB"
    },
    "2038": {
      "op": "NOT"
    },
    "2039": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "AND",
      "path": "1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2046": {
      "op": "SHL"
    },
    "2047": {
      "op": "SUB"
    },
    "2048": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2049": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2050": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2051": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "AND",
      "path": "1"
    },
    "2052": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2053": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2054": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2055": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "OR",
      "path": "1"
    },
    "2056": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2057": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        3746,
        3758
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2058": {
      "fn": "ATokenMock._set_pool",
      "jump": "o",
      "offset": [
        3693,
        3765
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2059": {
      "offset": [
        971,
        991
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2060": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2062": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2063": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2064": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2066": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2067": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2068": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2070": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2072": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2074": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2075": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "AND",
      "path": "1"
    },
    "2076": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2077": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2080": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "MUL",
      "path": "1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2083": {
      "op": "NOT"
    },
    "2084": {
      "offset": [
        971,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2085": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2086": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2087": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "AND",
      "path": "1"
    },
    "2088": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2089": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2090": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2091": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DIV",
      "path": "1"
    },
    "2092": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2094": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2095": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2096": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2097": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2098": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DIV",
      "path": "1"
    },
    "2099": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2100": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "MUL",
      "path": "1"
    },
    "2101": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2102": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2103": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2104": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2105": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2106": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2107": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2108": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2109": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2110": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2111": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2112": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2113": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2114": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2115": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2116": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2117": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2118": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2119": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F7"
    },
    "2122": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2123": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2124": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2126": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "LT",
      "path": "1"
    },
    "2127": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CC"
    },
    "2130": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2131": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2134": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2135": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2136": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2137": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DIV",
      "path": "1"
    },
    "2138": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "MUL",
      "path": "1"
    },
    "2139": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2140": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2141": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2142": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2144": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "ADD",
      "path": "1"
    },
    "2145": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2146": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F7"
    },
    "2149": {
      "fn": "ATokenMock._set_pool",
      "offset": [
        971,
        991
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2150": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2151": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2594,
        2604
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 21
    },
    "2152": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2546,
        2550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2154": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2155": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2156": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2157": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2159": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2161": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2162": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2164": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2165": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2166": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2605
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2167": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x886"
    },
    "2170": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2171": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2610,
        2616
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2172": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2617
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2177": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA31"
    },
    "2180": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2617
      ],
      "op": "AND",
      "path": "1"
    },
    "2181": {
      "fn": "ATokenMock.transfer",
      "jump": "i",
      "offset": [
        2585,
        2617
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2182": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2585,
        2617
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2183": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2571,
        2581
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2184": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2186": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2187": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2188": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2189": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2570
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2191": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2193": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2194": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2196": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2197": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2198": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2582
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2199": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2617
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2200": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2201": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2617
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2202": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2562,
        2617
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2209": {
      "op": "SHL"
    },
    "2210": {
      "op": "SUB"
    },
    "2211": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2656
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 22
    },
    "2212": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2656
      ],
      "op": "AND",
      "path": "1"
    },
    "2213": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2656
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2214": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2656
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2215": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2656
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2216": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2656
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2217": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8B8"
    },
    "2220": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2221": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2661,
        2667
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2222": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2668
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2227": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2660
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "2230": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2668
      ],
      "op": "AND",
      "path": "1"
    },
    "2231": {
      "fn": "ATokenMock.transfer",
      "jump": "i",
      "offset": [
        2643,
        2668
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2232": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2643,
        2668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "op": "SUB"
    },
    "2241": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2242": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "AND",
      "path": "1"
    },
    "2243": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2245": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2246": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2247": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2248": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2250": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2252": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2253": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2254": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2255": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2257": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2258": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2259": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2260": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2640
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2261": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2668
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2262": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2668
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2263": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2668
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2264": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2627,
        2668
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2265": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 23
    },
    "2266": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2267": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2692,
        2702
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2268": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2269": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2270": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2271": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2272": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "ADD",
      "path": "1"
    },
    "2273": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2274": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2275": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2276": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2277": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2278": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2279": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "ADD",
      "path": "1"
    },
    "2280": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2281": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2282": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2283": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2286": {
      "op": "DUP1"
    },
    "2287": {
      "op": "MLOAD"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2290": {
      "op": "PUSH2",
      "value": "0xA97"
    },
    "2293": {
      "op": "DUP4"
    },
    "2294": {
      "op": "CODECOPY"
    },
    "2295": {
      "op": "DUP2"
    },
    "2296": {
      "op": "MLOAD"
    },
    "2297": {
      "op": "SWAP2"
    },
    "2298": {
      "op": "MSTORE"
    },
    "2299": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2300": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2301": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2302": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SUB",
      "path": "1"
    },
    "2303": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2305": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "ADD",
      "path": "1"
    },
    "2306": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2307": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2683,
        2716
      ],
      "op": "LOG1",
      "path": "1"
    },
    "2308": {
      "op": "POP"
    },
    "2309": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2733,
        2737
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x1"
    },
    "2311": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2312": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2313": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "POP",
      "path": "1"
    },
    "2314": {
      "fn": "ATokenMock.transfer",
      "offset": [
        2483,
        2744
      ],
      "op": "POP",
      "path": "1"
    },
    "2315": {
      "fn": "ATokenMock.transfer",
      "jump": "o",
      "offset": [
        2483,
        2744
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2316": {
      "offset": [
        1176,
        1200
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2317": {
      "fn": "ATokenMock.transfer",
      "offset": [
        1176,
        1200
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2319": {
      "fn": "ATokenMock.transfer",
      "offset": [
        1176,
        1200
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2320": {
      "fn": "ATokenMock.transfer",
      "offset": [
        1176,
        1200
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2321": {
      "fn": "ATokenMock.transfer",
      "jump": "o",
      "offset": [
        1176,
        1200
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2322": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2087,
        2269
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "op": "SUB"
    },
    "2331": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 25
    },
    "2332": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2333": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "AND",
      "path": "1"
    },
    "2334": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2207,
        2214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2336": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2337": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2338": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2339": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "2341": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2343": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2344": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2345": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2346": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2348": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2349": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2350": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2252
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2351": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2352": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2353": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2354": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "AND",
      "path": "1"
    },
    "2355": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2356": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2357": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2358": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2359": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2360": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2361": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2362": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2363": {
      "fn": "ATokenMock.allowance",
      "offset": [
        2237,
        2262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2364": {
      "fn": "ATokenMock.allowance",
      "jump": "o",
      "offset": [
        2087,
        2269
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2365": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2366": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4292
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x3"
    },
    "2368": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4292
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2369": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x950"
    },
    "2372": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2373": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4297,
        4304
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2374": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4305
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2379": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4296
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "2382": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4305
      ],
      "op": "AND",
      "path": "1"
    },
    "2383": {
      "fn": "ATokenMock._mint_for_testing",
      "jump": "i",
      "offset": [
        4281,
        4305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2384": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4281,
        4305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2385": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4267,
        4278
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2387": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4267,
        4305
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "op": "SUB"
    },
    "2396": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 27
    },
    "2397": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "AND",
      "path": "1"
    },
    "2398": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2400": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2401": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2402": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2403": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2405": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2407": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2408": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2410": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2411": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2412": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4344
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2413": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4357
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97C"
    },
    "2416": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4357
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2417": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4349,
        4356
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2418": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2423": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4348
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA86"
    },
    "2426": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4357
      ],
      "op": "AND",
      "path": "1"
    },
    "2427": {
      "fn": "ATokenMock._mint_for_testing",
      "jump": "i",
      "offset": [
        4331,
        4357
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2428": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4331,
        4357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2435": {
      "op": "SHL"
    },
    "2436": {
      "op": "SUB"
    },
    "2437": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2438": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2439": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "AND",
      "path": "1"
    },
    "2440": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2442": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2443": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2444": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2445": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4323
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2447": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2449": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2450": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2452": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2453": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2454": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2455": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4357
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2456": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4357
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2457": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4357
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2458": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4357
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2459": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4382
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x7"
    },
    "2461": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2462": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2463": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2464": {
      "op": "PUSH4",
      "value": "0x7C60A081"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2471": {
      "op": "SHL"
    },
    "2472": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2473": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2474": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4409,
        4413
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2475": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2477": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2478": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "ADD",
      "path": "1"
    },
    "2479": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2480": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2482": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2483": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "ADD",
      "path": "1"
    },
    "2484": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2485": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2486": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2487": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2488": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2489": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4382
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2490": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4382
      ],
      "op": "AND",
      "path": "1"
    },
    "2491": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4382
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2492": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4400
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF8C14102"
    },
    "2497": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4400
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2498": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2500": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2501": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2502": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "ADD",
      "path": "1"
    },
    "2503": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2504": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2505": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2506": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2507": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "SUB",
      "path": "1"
    },
    "2508": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "ADD",
      "path": "1"
    },
    "2509": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2510": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4315,
        4328
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2511": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4382
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2512": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2513": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2514": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2515": {
      "op": "DUP1"
    },
    "2516": {
      "op": "ISZERO"
    },
    "2517": {
      "op": "PUSH2",
      "value": "0x9DD"
    },
    "2520": {
      "op": "JUMPI"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2523": {
      "op": "DUP1"
    },
    "2524": {
      "op": "REVERT"
    },
    "2525": {
      "op": "JUMPDEST"
    },
    "2526": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "POP",
      "path": "1"
    },
    "2527": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "GAS",
      "path": "1"
    },
    "2528": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "CALL",
      "path": "1"
    },
    "2529": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4367,
        4424
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2530": {
      "op": "DUP1"
    },
    "2531": {
      "op": "ISZERO"
    },
    "2532": {
      "op": "PUSH2",
      "value": "0x9F1"
    },
    "2535": {
      "op": "JUMPI"
    },
    "2536": {
      "op": "RETURNDATASIZE"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2539": {
      "op": "DUP1"
    },
    "2540": {
      "op": "RETURNDATACOPY"
    },
    "2541": {
      "op": "RETURNDATASIZE"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2544": {
      "op": "REVERT"
    },
    "2545": {
      "op": "JUMPDEST"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "op": "POP"
    },
    "2548": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x40"
    },
    "2550": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2551": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2552": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4456,
        4457
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2554": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2555": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "SUB"
    },
    "2564": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2565": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "AND",
      "path": "1"
    },
    "2566": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2568": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2569": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "ADD",
      "path": "1"
    },
    "2570": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2571": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2572": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2573": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "ADD",
      "path": "1"
    },
    "2574": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2575": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2576": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2577": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2578": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2581": {
      "op": "DUP1"
    },
    "2582": {
      "op": "MLOAD"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2585": {
      "op": "PUSH2",
      "value": "0xA97"
    },
    "2588": {
      "op": "DUP4"
    },
    "2589": {
      "op": "CODECOPY"
    },
    "2590": {
      "op": "DUP2"
    },
    "2591": {
      "op": "MLOAD"
    },
    "2592": {
      "op": "SWAP2"
    },
    "2593": {
      "op": "MSTORE"
    },
    "2594": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2595": {
      "op": "POP"
    },
    "2596": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2597": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2598": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2599": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "SUB",
      "path": "1"
    },
    "2600": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2602": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "ADD",
      "path": "1"
    },
    "2603": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4439,
        4473
      ],
      "op": "LOG1",
      "path": "1"
    },
    "2606": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "POP",
      "path": "1"
    },
    "2607": {
      "fn": "ATokenMock._mint_for_testing",
      "offset": [
        4191,
        4480
      ],
      "op": "POP",
      "path": "1"
    },
    "2608": {
      "fn": "ATokenMock._mint_for_testing",
      "jump": "o",
      "offset": [
        4191,
        4480
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2609": {
      "fn": "SafeMath.sub",
      "offset": [
        245,
        374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2610": {
      "fn": "SafeMath.sub",
      "offset": [
        297,
        303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2612": {
      "fn": "SafeMath.sub",
      "offset": [
        328,
        329
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 30
    },
    "2613": {
      "fn": "SafeMath.sub",
      "offset": [
        323,
        324
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2614": {
      "fn": "SafeMath.sub",
      "offset": [
        323,
        329
      ],
      "op": "GT",
      "path": "1"
    },
    "2615": {
      "branch": 39,
      "fn": "SafeMath.sub",
      "offset": [
        323,
        329
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2616": {
      "fn": "SafeMath.sub",
      "offset": [
        315,
        330
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA40"
    },
    "2619": {
      "branch": 39,
      "fn": "SafeMath.sub",
      "offset": [
        315,
        330
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2620": {
      "fn": "SafeMath.sub",
      "offset": [
        315,
        330
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2622": {
      "fn": "SafeMath.sub",
      "offset": [
        315,
        330
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2623": {
      "fn": "SafeMath.sub",
      "offset": [
        315,
        330
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2624": {
      "fn": "SafeMath.sub",
      "offset": [
        315,
        330
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2625": {
      "op": "POP"
    },
    "2626": {
      "fn": "SafeMath.sub",
      "offset": [
        362,
        367
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 31
    },
    "2627": {
      "fn": "SafeMath.sub",
      "offset": [
        362,
        367
      ],
      "op": "SUB",
      "path": "1"
    },
    "2628": {
      "fn": "SafeMath.sub",
      "offset": [
        362,
        367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2629": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        245,
        374
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2630": {
      "fn": "SafeMath.mul",
      "offset": [
        379,
        521
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2631": {
      "fn": "SafeMath.mul",
      "offset": [
        453,
        458
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 32
    },
    "2632": {
      "fn": "SafeMath.mul",
      "offset": [
        453,
        458
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2633": {
      "fn": "SafeMath.mul",
      "offset": [
        453,
        458
      ],
      "op": "MUL",
      "path": "1"
    },
    "2634": {
      "fn": "SafeMath.mul",
      "offset": [
        476,
        482
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 33
    },
    "2635": {
      "fn": "SafeMath.mul",
      "offset": [
        476,
        482
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2636": {
      "branch": 40,
      "fn": "SafeMath.mul",
      "offset": [
        476,
        482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2637": {
      "fn": "SafeMath.mul",
      "offset": [
        476,
        496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5E"
    },
    "2640": {
      "branch": 40,
      "fn": "SafeMath.mul",
      "offset": [
        476,
        496
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2641": {
      "fn": "SafeMath.mul",
      "offset": [
        476,
        496
      ],
      "op": "POP",
      "path": "1"
    },
    "2642": {
      "fn": "SafeMath.mul",
      "offset": [
        495,
        496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2643": {
      "fn": "SafeMath.mul",
      "offset": [
        490,
        491
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2644": {
      "fn": "SafeMath.mul",
      "offset": [
        486,
        487
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2645": {
      "fn": "SafeMath.mul",
      "offset": [
        486,
        491
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2646": {
      "fn": "SafeMath.mul",
      "offset": [
        486,
        491
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5B"
    },
    "2649": {
      "fn": "SafeMath.mul",
      "offset": [
        486,
        491
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2650": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        486,
        491
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2651": {
      "fn": "SafeMath.mul",
      "offset": [
        486,
        491
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2652": {
      "fn": "SafeMath.mul",
      "offset": [
        486,
        491
      ],
      "op": "DIV",
      "path": "1"
    },
    "2653": {
      "branch": 41,
      "fn": "SafeMath.mul",
      "offset": [
        486,
        496
      ],
      "op": "EQ",
      "path": "1"
    },
    "2654": {
      "fn": "SafeMath.mul",
      "offset": [
        476,
        496
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2655": {
      "fn": "SafeMath.mul",
      "offset": [
        468,
        497
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46B"
    },
    "2658": {
      "branch": 41,
      "fn": "SafeMath.mul",
      "offset": [
        468,
        497
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2659": {
      "fn": "SafeMath.mul",
      "offset": [
        468,
        497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2661": {
      "fn": "SafeMath.mul",
      "offset": [
        468,
        497
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2662": {
      "fn": "SafeMath.mul",
      "offset": [
        468,
        497
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2663": {
      "fn": "SafeMath.div",
      "offset": [
        526,
        659
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2664": {
      "fn": "SafeMath.div",
      "offset": [
        578,
        584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2666": {
      "fn": "SafeMath.div",
      "offset": [
        608,
        609
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 34
    },
    "2667": {
      "fn": "SafeMath.div",
      "offset": [
        604,
        605
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2668": {
      "branch": 42,
      "fn": "SafeMath.div",
      "offset": [
        604,
        609
      ],
      "op": "GT",
      "path": "1"
    },
    "2669": {
      "fn": "SafeMath.div",
      "offset": [
        596,
        610
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA75"
    },
    "2672": {
      "branch": 42,
      "fn": "SafeMath.div",
      "offset": [
        596,
        610
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2673": {
      "fn": "SafeMath.div",
      "offset": [
        596,
        610
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2675": {
      "fn": "SafeMath.div",
      "offset": [
        596,
        610
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2676": {
      "fn": "SafeMath.div",
      "offset": [
        596,
        610
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2677": {
      "fn": "SafeMath.div",
      "offset": [
        596,
        610
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2678": {
      "fn": "SafeMath.div",
      "offset": [
        651,
        652
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 35
    },
    "2679": {
      "fn": "SafeMath.div",
      "offset": [
        647,
        648
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2680": {
      "fn": "SafeMath.div",
      "offset": [
        647,
        652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2681": {
      "fn": "SafeMath.div",
      "offset": [
        647,
        652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA7E"
    },
    "2684": {
      "fn": "SafeMath.div",
      "offset": [
        647,
        652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2685": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        647,
        652
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2686": {
      "fn": "SafeMath.div",
      "offset": [
        647,
        652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2687": {
      "fn": "SafeMath.div",
      "offset": [
        647,
        652
      ],
      "op": "DIV",
      "path": "1"
    },
    "2688": {
      "fn": "SafeMath.div",
      "offset": [
        647,
        652
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2689": {
      "fn": "SafeMath.div",
      "offset": [
        526,
        659
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2690": {
      "op": "POP"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        526,
        659
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2694": {
      "fn": "SafeMath.add",
      "offset": [
        112,
        240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2695": {
      "fn": "SafeMath.add",
      "offset": [
        186,
        191
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 36
    },
    "2696": {
      "fn": "SafeMath.add",
      "offset": [
        186,
        191
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2697": {
      "fn": "SafeMath.add",
      "offset": [
        186,
        191
      ],
      "op": "ADD",
      "path": "1"
    },
    "2698": {
      "fn": "SafeMath.add",
      "offset": [
        209,
        215
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 37
    },
    "2699": {
      "fn": "SafeMath.add",
      "offset": [
        209,
        215
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2700": {
      "fn": "SafeMath.add",
      "offset": [
        209,
        215
      ],
      "op": "LT",
      "path": "1"
    },
    "2701": {
      "branch": 43,
      "fn": "SafeMath.add",
      "offset": [
        209,
        215
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2702": {
      "fn": "SafeMath.add",
      "offset": [
        201,
        216
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46B"
    },
    "2705": {
      "branch": 43,
      "fn": "SafeMath.add",
      "offset": [
        201,
        216
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2706": {
      "fn": "SafeMath.add",
      "offset": [
        201,
        216
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2708": {
      "fn": "SafeMath.add",
      "offset": [
        201,
        216
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2709": {
      "fn": "SafeMath.add",
      "offset": [
        201,
        216
      ],
      "op": "REVERT",
      "path": "1"
    }
  },
  "sha1": "b6948e7acb311fb147fb00c2d70f41ac4a1b3be2",
  "source": "pragma solidity ^0.5.0;\n\nimport {AaveLendingPoolMock} from \"./AaveLendingPoolMock.sol\";\n\nlibrary SafeMath {\n    function add(uint a, uint b) internal pure returns (uint c) {\n        c = a + b;\n        require(c >= a); // dev: overflow\n    }\n    function sub(uint a, uint b) internal pure returns (uint c) {\n        require(b <= a); // dev: underflow\n        c = a - b;\n    }\n    function mul(uint a, uint b) internal pure returns (uint c) {\n        c = a * b;\n        require(a == 0 || c / a == b); // dev: overflow\n    }\n    function div(uint a, uint b) internal pure returns (uint c) {\n        require(b > 0); // dev: divide by zero\n        c = a / b;\n    }\n}\n\n\ninterface IERC20 {\n    function transfer(address, uint256) external;\n    function transferFrom(address, address, uint256) external;\n    function decimals() external returns (uint256);\n    function _mint_for_testing(address, uint256) external;\n}\n\n\ncontract ATokenMock {\n\n    using SafeMath for uint256;\n\n    string public symbol;\n    string public name;\n    uint256 public decimals;\n    uint256 public totalSupply;\n\n    address pool;\n\n    // included for compatibility with test suite - always returns 10**18\n    uint256 public _get_rate;\n\n    address lendingPool;\n    IERC20 underlyingToken;\n\n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n\n    event Transfer(address from, address to, uint256 value);\n    event Approval(address owner, address spender, uint256 value);\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _decimals,\n        address _underlyingToken,\n        address _lendingPool\n    )\n        public\n    {\n        symbol = _symbol;\n        name = _name;\n        decimals = _decimals;\n        underlyingToken = IERC20(_underlyingToken);\n        lendingPool = _lendingPool;\n        _get_rate = 10**18;\n        AaveLendingPoolMock(_lendingPool)._add_token(_underlyingToken, address(this));\n    }\n\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n    function allowance(\n        address _owner,\n        address _spender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        return allowed[_owner][_spender];\n    }\n\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n        public\n        returns (bool)\n    {\n        balances[_from] = balances[_from].sub(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n\n    function redeem(address _from, address _to, uint256 _amount) external {\n        totalSupply = totalSupply.sub(_amount);\n        balances[_from] = balances[_from].sub(_amount);\n        underlyingToken.transfer(_to, _amount);\n        emit Transfer(_from, address(0), _amount);\n    }\n\n    function mint(address _to, uint256 _amount) external {\n        require(msg.sender == lendingPool);\n        totalSupply = totalSupply.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        emit Transfer(address(0), _to, _amount);\n    }\n\n    function _set_pool(address _pool) external {\n        pool = _pool;\n    }\n\n    function set_exchange_rate(uint256 _rate) external {\n        /**\n            Because aTokens accrue balance instead of increasing their rate,\n            we simulate a rate change by modifying the token balance of the pool\n         */\n        totalSupply = totalSupply.sub(balances[pool]);\n        balances[pool] = balances[pool].mul(_rate).div(10**18);\n        totalSupply = totalSupply.add(balances[pool]);\n    }\n\n    function _mint_for_testing(address _to, uint256 _amount) external {\n        totalSupply = totalSupply.add(_amount);\n        balances[_to] = balances[_to].add(_amount);\n        underlyingToken._mint_for_testing(address(this), _amount);\n        emit Transfer(address(0), _to, _amount);\n    }\n\n}\n",
  "sourceMap": "911:3572:1:-;;;1494:476;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:476:1;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1494:476:1;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1494:476:1;;420:4:-1;411:14;;;;1494:476:1;;;;;411:14:-1;1494:476:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1494:476:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1494:476:1;;420:4:-1;411:14;;;;1494:476:1;;;;;411:14:-1;1494:476:1;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1494:476:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1494:476:1;;;;;;;;;;;;;;;;;;1692:16;;1494:476;;-1:-1:-1;1494:476:1;;-1:-1:-1;1692:16:1;;:6;;:16;;;;:::i;:::-;-1:-1:-1;1718:12:1;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1740:8:1;:20;;;1770:15;:42;;-1:-1:-1;;;;;1770:42:1;;;-1:-1:-1;;;;;;1770:42:1;;;;;;;;1822:11;:26;;;;;;;;;;;;;;1870:6;1858:9;:18;1886:77;;;-1:-1:-1;;;1886:77:1;;;;;;;;;1957:4;1886:77;;;;;1822:26;;1886:44;;:77;;;;;1770:15;;1886:77;;;;;;;1770:15;1822:26;1886:77;;;5:2:-1;;;;30:1;27;20:12;5:2;1886:77:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1886:77:1;;;;1494:476;;;;;911:3572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;911:3572:1;;;-1:-1:-1;911:3572:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/testing/aERC20.sol",
  "type": "contract"
}