{
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlying",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aToken",
          "type": "address"
        }
      ],
      "name": "_add_token",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_referralCode",
          "type": "uint16"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastReferral",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testing/AaveLendingPoolMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/testing/AaveLendingPoolMock.sol",
    "exportedSymbols": {
      "AaveLendingPoolMock": [
        128
      ],
      "IERC20": [
        11
      ],
      "aToken": [
        28
      ]
    },
    "id": 129,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "IERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "71:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "71:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "80:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "80:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "89:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "89:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "70:27:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "106:0:0"
            },
            "scope": 11,
            "src": "49:58:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 129,
        "src": "26:83:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 28,
        "linearizedBaseContracts": [
          28
        ],
        "name": "aToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 18,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "148:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "148:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "161:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "147:30:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "186:0:0"
            },
            "scope": 28,
            "src": "134:53:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 27,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "208:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "208:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "223:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "236:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "207:45:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "261:0:0"
            },
            "scope": 28,
            "src": "192:70:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 129,
        "src": "111:153:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 128,
        "linearizedBaseContracts": [
          128
        ],
        "name": "AaveLendingPoolMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 30,
            "name": "lastReferral",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "302:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 29,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "302:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 34,
            "name": "aTokens",
            "nodeType": "VariableDeclaration",
            "scope": 128,
            "src": "335:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 31,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "344:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "335:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "355:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "445:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "aTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "455:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 43,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "_underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "463:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "455:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "_aToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "478:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "455:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "455:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_add_token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "_underlying",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "398:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "_aToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "419:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "397:38:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:0"
            },
            "scope": 128,
            "src": "378:114:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "963:234:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "aTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "982:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 62,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "990:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "982:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1011:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1003:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1003:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "982:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        707,
                        708
                      ],
                      "referencedDeclaration": 707,
                      "src": "973:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "973:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 69,
                      "name": "lastReferral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1024:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "_referralCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1039:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1024:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1092:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "aTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1103:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 80,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "_reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "1111:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1103:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1122:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "_reserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1069:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 73,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1062:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$11_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1062:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$11",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "1062:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:68:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:68:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1171:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1182:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "aTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1147:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 87,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 86,
                              "name": "_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50,
                              "src": "1155:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1147:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 84,
                          "name": "aToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1140:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_aToken_$28_$",
                            "typeString": "type(contract aToken)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1140:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_aToken_$28",
                          "typeString": "contract aToken"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "1140:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1140:50:0"
                }
              ]
            },
            "documentation": "@dev deposits The underlying asset into the reserve. A corresponding amount\nof the overlying asset (aTokens) is minted.\n@param _reserve the address of the reserve\n@param _amount the amount to be deposited\n@param _referralCode integrators are assigned a referral code and can potentially receive rewards.*",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "870:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "870:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "888:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "905:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_referralCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "924:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "869:76:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:0:0"
            },
            "scope": 128,
            "src": "853:344:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1273:118:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 105,
                            "name": "aTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "1292:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 107,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1300:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1292:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1310:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1310:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1292:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        707,
                        708
                      ],
                      "referencedDeclaration": 707,
                      "src": "1283:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 704,
                          "src": "1361:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1361:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1373:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1377:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 115,
                              "name": "aTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1338:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 117,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 116,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "1346:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1338:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 114,
                          "name": "aToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1331:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_aToken_$28_$",
                            "typeString": "type(contract aToken)"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1331:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_aToken_$28",
                          "typeString": "contract aToken"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "1331:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:53:0"
                }
              ]
            },
            "documentation": null,
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "name": "asset",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1221:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1236:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1252:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1220:43:0"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:0:0"
            },
            "scope": 128,
            "src": "1203:188:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 129,
        "src": "266:1127:0"
      }
    ],
    "src": "0:1394:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5061036a806100206000396000f3fe60806040526004361061003f5760003560e01c806369328dec14610044578063e8eda9df14610089578063f6b3b485146100c8578063fdcc6363146100f4575b600080fd5b34801561005057600080fd5b506100876004803603606081101561006757600080fd5b506001600160a01b0381358116916020810135916040909101351661012f565b005b6100876004803603608081101561009f57600080fd5b5080356001600160a01b0390811691602081013591604082013516906060013561ffff166101d5565b3480156100d457600080fd5b506100dd6102fd565b6040805161ffff9092168252519081900360200190f35b34801561010057600080fd5b506100876004803603604081101561011757600080fd5b506001600160a01b0381358116916020013516610307565b6001600160a01b038381166000908152600160205260409020541661015357600080fd5b6001600160a01b03808416600090815260016020526040808220548151630e6dfcd560e01b81523360048201528585166024820152604481018790529151931692630e6dfcd59260648084019391929182900301818387803b1580156101b857600080fd5b505af11580156101cc573d6000803e3d6000fd5b50505050505050565b6001600160a01b03848116600090815260016020526040902054166101f957600080fd5b6000805461ffff191661ffff83161781556001600160a01b03858116808352600160205260408084205481516323b872dd60e01b8152878516600482015293166024840152604483018790525190926323b872dd926064808201939182900301818387803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b5050506001600160a01b038086166000908152600160205260408082205481516340c10f1960e01b81528785166004820152602481018990529151931693506340c10f19926044808301939282900301818387803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b5050505050505050565b60005461ffff1681565b6001600160a01b03918216600090815260016020526040902080546001600160a01b0319169190921617905556fea265627a7a72315820f8f5a899908800d03c3e784f9db86ad6e1572326fa0bbe9056fcac15c5cec17864736f6c63430005110032",
  "bytecodeSha1": "5d48ba3a671d0504e4525f6b5a2f2d1ffe7677ac",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "AaveLendingPoolMock",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "AaveLendingPoolMock._add_token": {
          "6": [
            455,
            485
          ]
        },
        "AaveLendingPoolMock.deposit": {
          "2": [
            973,
            1014
          ],
          "3": [
            1024,
            1052
          ],
          "4": [
            1062,
            1130
          ],
          "5": [
            1140,
            1190
          ]
        },
        "AaveLendingPoolMock.withdraw": {
          "0": [
            1283,
            1321
          ],
          "1": [
            1331,
            1384
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC20",
    "aToken"
  ],
  "deployedBytecode": "60806040526004361061003f5760003560e01c806369328dec14610044578063e8eda9df14610089578063f6b3b485146100c8578063fdcc6363146100f4575b600080fd5b34801561005057600080fd5b506100876004803603606081101561006757600080fd5b506001600160a01b0381358116916020810135916040909101351661012f565b005b6100876004803603608081101561009f57600080fd5b5080356001600160a01b0390811691602081013591604082013516906060013561ffff166101d5565b3480156100d457600080fd5b506100dd6102fd565b6040805161ffff9092168252519081900360200190f35b34801561010057600080fd5b506100876004803603604081101561011757600080fd5b506001600160a01b0381358116916020013516610307565b6001600160a01b038381166000908152600160205260409020541661015357600080fd5b6001600160a01b03808416600090815260016020526040808220548151630e6dfcd560e01b81523360048201528585166024820152604481018790529151931692630e6dfcd59260648084019391929182900301818387803b1580156101b857600080fd5b505af11580156101cc573d6000803e3d6000fd5b50505050505050565b6001600160a01b03848116600090815260016020526040902054166101f957600080fd5b6000805461ffff191661ffff83161781556001600160a01b03858116808352600160205260408084205481516323b872dd60e01b8152878516600482015293166024840152604483018790525190926323b872dd926064808201939182900301818387803b15801561026a57600080fd5b505af115801561027e573d6000803e3d6000fd5b5050506001600160a01b038086166000908152600160205260408082205481516340c10f1960e01b81528785166004820152602481018990529151931693506340c10f19926044808301939282900301818387803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b5050505050505050565b60005461ffff1681565b6001600160a01b03918216600090815260016020526040902080546001600160a01b0319169190921617905556fea265627a7a72315820f8f5a899908800d03c3e784f9db86ad6e1572326fa0bbe9056fcac15c5cec17864736f6c63430005110032",
  "deployedSourceMap": "266:1127:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1203:188:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1203:188:0;;;;;;;;;;;;;;;;;:::i;:::-;;853:344;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;853:344:0;;-1:-1:-1;;;;;853:344:0;;;;;;;;;;;;;;;;;;;;;:::i;302:26::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;302:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;378:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;378:114:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;378:114:0;;;;;;;;;;:::i;1203:188::-;-1:-1:-1;;;;;1292:14:0;;;1318:1;1292:14;;;:7;:14;;;;;;;1283:38;;;;;;-1:-1:-1;;;;;1338:14:0;;;;;;;:7;:14;;;;;;;1331:53;;-1:-1:-1;;;1331:53:0;;1361:10;1331:53;;;;;;;;;;;;;;;;;;;1338:14;;;1331:29;;:53;;;;;1338:14;;1331:53;;;;;;1338:14;;1331:53;;;5:2:-1;;;;30:1;27;20:12;5:2;1331:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1331:53:0;;;;1203:188;;;:::o;853:344::-;-1:-1:-1;;;;;982:17:0;;;1011:1;982:17;;;:7;:17;;;;;;;973:41;;;;;;1024:12;:28;;-1:-1:-1;;1024:28:0;;;;;;;-1:-1:-1;;;;;1062:29:0;;;1103:17;;;-1:-1:-1;1103:17:0;;;;;;;1062:68;;-1:-1:-1;;;1062:68:0;;;;;;;;;1103:17;;1062:68;;;;;;;;;;;:29;;;;:68;;;;;;;;;;;1024:12;1062:29;:68;;;5:2:-1;;;;30:1;27;20:12;5:2;1062:68:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;;;;;;1147:17:0;;;;;;;:7;:17;;;;;;;1140:50;;-1:-1:-1;;;1140:50:0;;;;;;;;;;;;;;;;;1147:17;;;-1:-1:-1;1140:30:0;;:50;;;;;1147:17;1140:50;;;;;1147:17;;1140:50;;;5:2:-1;;;;30:1;27;20:12;5:2;1140:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1140:50:0;;;;853:344;;;;:::o;302:26::-;;;;;;:::o;378:114::-;-1:-1:-1;;;;;455:20:0;;;;;;;:7;:20;;;;;:30;;-1:-1:-1;;;;;;455:30:0;;;;;;;;378:114::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "deposit(address,uint256,address,uint16)": {
        "details": "deposits The underlying asset into the reserve. A corresponding amount of the overlying asset (aTokens) is minted.",
        "params": {
          "_amount": "the amount to be deposited",
          "_referralCode": "integrators are assigned a referral code and can potentially receive rewards.*",
          "_reserve": "the address of the reserve"
        }
      }
    }
  },
  "offset": [
    266,
    1393
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69328DEC EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0xE8EDA9DF EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xF6B3B485 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xFDCC6363 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x12F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x1D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0xE6DFCD5 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP4 AND SWAP3 PUSH4 0xE6DFCD5 SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP4 AND OR DUP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP8 SWAP1 MSTORE MLOAD SWAP1 SWAP3 PUSH4 0x23B872DD SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP4 AND SWAP4 POP PUSH4 0x40C10F19 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF8 CREATE2 0xA8 SWAP10 SWAP1 DUP9 STOP 0xD0 EXTCODECOPY RETURNDATACOPY PUSH25 0x4F9DB86AD6E1572326FA0BBE9056FCAC15C5CEC17864736F6C PUSH4 0x43000511 STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        266,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F"
    },
    "12": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69328DEC"
    },
    "25": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44"
    },
    "29": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE8EDA9DF"
    },
    "36": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89"
    },
    "40": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF6B3B485"
    },
    "47": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "51": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFDCC6363"
    },
    "58": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "62": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "66": {
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "67": {
      "first_revert": true,
      "fn": null,
      "offset": [
        266,
        1393
      ],
      "op": "REVERT",
      "path": "0"
    },
    "68": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "69": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "70": {
      "op": "DUP1"
    },
    "71": {
      "op": "ISZERO"
    },
    "72": {
      "op": "PUSH2",
      "value": "0x50"
    },
    "75": {
      "op": "JUMPI"
    },
    "76": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "78": {
      "op": "DUP1"
    },
    "79": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "REVERT",
      "path": "0"
    },
    "80": {
      "op": "JUMPDEST"
    },
    "81": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "POP",
      "path": "0"
    },
    "82": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "85": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "87": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "89": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "SUB",
      "path": "0"
    },
    "90": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "92": {
      "op": "DUP2"
    },
    "93": {
      "op": "LT"
    },
    "94": {
      "op": "ISZERO"
    },
    "95": {
      "op": "PUSH2",
      "value": "0x67"
    },
    "98": {
      "op": "JUMPI"
    },
    "99": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "101": {
      "op": "DUP1"
    },
    "102": {
      "op": "REVERT"
    },
    "103": {
      "op": "JUMPDEST"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "111": {
      "op": "SHL"
    },
    "112": {
      "op": "SUB"
    },
    "113": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "DUP2",
      "path": "0"
    },
    "114": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "115": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "DUP2",
      "path": "0"
    },
    "116": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "AND",
      "path": "0"
    },
    "117": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "118": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "120": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "DUP2",
      "path": "0"
    },
    "121": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "ADD",
      "path": "0"
    },
    "122": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "123": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "124": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "126": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "127": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "128": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "ADD",
      "path": "0"
    },
    "129": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "130": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "AND",
      "path": "0"
    },
    "131": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F"
    },
    "134": {
      "fn": "AaveLendingPoolMock.withdraw",
      "jump": "i",
      "offset": [
        1203,
        1391
      ],
      "op": "JUMP",
      "path": "0"
    },
    "135": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "136": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "STOP",
      "path": "0"
    },
    "137": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "138": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "141": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "143": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "144": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "145": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "SUB",
      "path": "0"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "148": {
      "op": "DUP2"
    },
    "149": {
      "op": "LT"
    },
    "150": {
      "op": "ISZERO"
    },
    "151": {
      "op": "PUSH2",
      "value": "0x9F"
    },
    "154": {
      "op": "JUMPI"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "157": {
      "op": "DUP1"
    },
    "158": {
      "op": "REVERT"
    },
    "159": {
      "op": "JUMPDEST"
    },
    "160": {
      "op": "POP"
    },
    "161": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "169": {
      "op": "SHL"
    },
    "170": {
      "op": "SUB"
    },
    "171": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "172": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "173": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "AND",
      "path": "0"
    },
    "174": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "175": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "177": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "178": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "ADD",
      "path": "0"
    },
    "179": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "180": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "181": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "183": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "184": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "ADD",
      "path": "0"
    },
    "185": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "186": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "AND",
      "path": "0"
    },
    "187": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "188": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "190": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "ADD",
      "path": "0"
    },
    "191": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "192": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "195": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "AND",
      "path": "0"
    },
    "196": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D5"
    },
    "199": {
      "fn": "AaveLendingPoolMock.deposit",
      "jump": "i",
      "offset": [
        853,
        1197
      ],
      "op": "JUMP",
      "path": "0"
    },
    "200": {
      "offset": [
        302,
        328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "202": {
      "op": "DUP1"
    },
    "203": {
      "op": "ISZERO"
    },
    "204": {
      "op": "PUSH2",
      "value": "0xD4"
    },
    "207": {
      "op": "JUMPI"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "210": {
      "op": "DUP1"
    },
    "211": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "REVERT",
      "path": "0"
    },
    "212": {
      "op": "JUMPDEST"
    },
    "213": {
      "offset": [
        302,
        328
      ],
      "op": "POP",
      "path": "0"
    },
    "214": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD"
    },
    "217": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD"
    },
    "220": {
      "fn": "AaveLendingPoolMock.deposit",
      "jump": "i",
      "offset": [
        302,
        328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "221": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "222": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "224": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "DUP1",
      "path": "0"
    },
    "225": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "226": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "229": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "230": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "231": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "AND",
      "path": "0"
    },
    "232": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "DUP3",
      "path": "0"
    },
    "233": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "234": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "235": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "236": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "237": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "238": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "SUB",
      "path": "0"
    },
    "239": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "241": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "ADD",
      "path": "0"
    },
    "242": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "243": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "RETURN",
      "path": "0"
    },
    "244": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "246": {
      "op": "DUP1"
    },
    "247": {
      "op": "ISZERO"
    },
    "248": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "251": {
      "op": "JUMPI"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "254": {
      "op": "DUP1"
    },
    "255": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "REVERT",
      "path": "0"
    },
    "256": {
      "op": "JUMPDEST"
    },
    "257": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "POP",
      "path": "0"
    },
    "258": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "261": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "263": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "264": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "265": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "SUB",
      "path": "0"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "268": {
      "op": "DUP2"
    },
    "269": {
      "op": "LT"
    },
    "270": {
      "op": "ISZERO"
    },
    "271": {
      "op": "PUSH2",
      "value": "0x117"
    },
    "274": {
      "op": "JUMPI"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "277": {
      "op": "DUP1"
    },
    "278": {
      "op": "REVERT"
    },
    "279": {
      "op": "JUMPDEST"
    },
    "280": {
      "op": "POP"
    },
    "281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "287": {
      "op": "SHL"
    },
    "288": {
      "op": "SUB"
    },
    "289": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "290": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "291": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "292": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "AND",
      "path": "0"
    },
    "293": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "294": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "296": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "ADD",
      "path": "0"
    },
    "297": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "298": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "AND",
      "path": "0"
    },
    "299": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "302": {
      "fn": "AaveLendingPoolMock._add_token",
      "jump": "i",
      "offset": [
        378,
        492
      ],
      "op": "JUMP",
      "path": "0"
    },
    "303": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 0
    },
    "313": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "DUP2",
      "path": "0"
    },
    "314": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "AND",
      "path": "0"
    },
    "315": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1318,
        1319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "317": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "318": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "DUP2",
      "path": "0"
    },
    "319": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "320": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "322": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "324": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "325": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "327": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "328": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "329": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "330": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1292,
        1306
      ],
      "op": "AND",
      "path": "0"
    },
    "331": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1283,
        1321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "334": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1283,
        1321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "335": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1283,
        1321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "337": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1283,
        1321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "338": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1283,
        1321
      ],
      "op": "REVERT",
      "path": "0"
    },
    "339": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1283,
        1321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "346": {
      "op": "SHL"
    },
    "347": {
      "op": "SUB"
    },
    "348": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "349": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "DUP5",
      "path": "0"
    },
    "350": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "AND",
      "path": "0"
    },
    "351": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "353": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "354": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "356": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1345
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "358": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "360": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "361": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "363": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "364": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "DUP3",
      "path": "0"
    },
    "365": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "366": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "367": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "368": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "369": {
      "op": "PUSH4",
      "value": "0xE6DFCD5"
    },
    "374": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "376": {
      "op": "SHL"
    },
    "377": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "378": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "379": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1361,
        1371
      ],
      "op": "CALLER",
      "path": "0"
    },
    "380": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "382": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP3",
      "path": "0"
    },
    "383": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "ADD",
      "path": "0"
    },
    "384": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "385": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP6",
      "path": "0"
    },
    "386": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP6",
      "path": "0"
    },
    "387": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "AND",
      "path": "0"
    },
    "388": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "390": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP3",
      "path": "0"
    },
    "391": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "ADD",
      "path": "0"
    },
    "392": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "393": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "395": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "396": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "ADD",
      "path": "0"
    },
    "397": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP8",
      "path": "0"
    },
    "398": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "399": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "400": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "401": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "402": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "403": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "AND",
      "path": "0"
    },
    "404": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "405": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1360
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE6DFCD5"
    },
    "410": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1360
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "411": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "413": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP5",
      "path": "0"
    },
    "415": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "ADD",
      "path": "0"
    },
    "416": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "417": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "418": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "419": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "420": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP3",
      "path": "0"
    },
    "421": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "422": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "SUB",
      "path": "0"
    },
    "423": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "ADD",
      "path": "0"
    },
    "424": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "425": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "DUP4",
      "path": "0"
    },
    "426": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1338,
        1352
      ],
      "op": "DUP8",
      "path": "0"
    },
    "427": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "DUP1",
      "path": "0"
    },
    "428": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "429": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "430": {
      "op": "DUP1"
    },
    "431": {
      "op": "ISZERO"
    },
    "432": {
      "op": "PUSH2",
      "value": "0x1B8"
    },
    "435": {
      "op": "JUMPI"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "438": {
      "op": "DUP1"
    },
    "439": {
      "op": "REVERT"
    },
    "440": {
      "op": "JUMPDEST"
    },
    "441": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "POP",
      "path": "0"
    },
    "442": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "GAS",
      "path": "0"
    },
    "443": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "CALL",
      "path": "0"
    },
    "444": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "445": {
      "op": "DUP1"
    },
    "446": {
      "op": "ISZERO"
    },
    "447": {
      "op": "PUSH2",
      "value": "0x1CC"
    },
    "450": {
      "op": "JUMPI"
    },
    "451": {
      "op": "RETURNDATASIZE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "454": {
      "op": "DUP1"
    },
    "455": {
      "op": "RETURNDATACOPY"
    },
    "456": {
      "op": "RETURNDATASIZE"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "459": {
      "op": "REVERT"
    },
    "460": {
      "op": "JUMPDEST"
    },
    "461": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "POP",
      "path": "0"
    },
    "462": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "POP",
      "path": "0"
    },
    "463": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "POP",
      "path": "0"
    },
    "464": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1331,
        1384
      ],
      "op": "POP",
      "path": "0"
    },
    "465": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "POP",
      "path": "0"
    },
    "466": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "POP",
      "path": "0"
    },
    "467": {
      "fn": "AaveLendingPoolMock.withdraw",
      "offset": [
        1203,
        1391
      ],
      "op": "POP",
      "path": "0"
    },
    "468": {
      "fn": "AaveLendingPoolMock.withdraw",
      "jump": "o",
      "offset": [
        1203,
        1391
      ],
      "op": "JUMP",
      "path": "0"
    },
    "469": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "476": {
      "op": "SHL"
    },
    "477": {
      "op": "SUB"
    },
    "478": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 2
    },
    "479": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "480": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "AND",
      "path": "0"
    },
    "481": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1011,
        1012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "483": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "484": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "485": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "486": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "488": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "490": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "491": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "493": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "494": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "495": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "496": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        982,
        999
      ],
      "op": "AND",
      "path": "0"
    },
    "497": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        973,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9"
    },
    "500": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        973,
        1014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "501": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        973,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "503": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        973,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "504": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        973,
        1014
      ],
      "op": "REVERT",
      "path": "0"
    },
    "505": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        973,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "506": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1036
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "508": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "DUP1",
      "path": "0"
    },
    "509": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "510": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "513": {
      "op": "NOT"
    },
    "514": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "AND",
      "path": "0"
    },
    "515": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "518": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "DUP4",
      "path": "0"
    },
    "519": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "AND",
      "path": "0"
    },
    "520": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "OR",
      "path": "0"
    },
    "521": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "DUP2",
      "path": "0"
    },
    "522": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1052
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "529": {
      "op": "SHL"
    },
    "530": {
      "op": "SUB"
    },
    "531": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 4
    },
    "532": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "DUP2",
      "path": "0"
    },
    "533": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "AND",
      "path": "0"
    },
    "534": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "535": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "DUP4",
      "path": "0"
    },
    "536": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "541": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "542": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "544": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "545": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "DUP5",
      "path": "0"
    },
    "546": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "547": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "548": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "549": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "550": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "555": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "557": {
      "op": "SHL"
    },
    "558": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "559": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "560": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP8",
      "path": "0"
    },
    "561": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP6",
      "path": "0"
    },
    "562": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "AND",
      "path": "0"
    },
    "563": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "565": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "566": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "ADD",
      "path": "0"
    },
    "567": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "568": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "569": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1103,
        1120
      ],
      "op": "AND",
      "path": "0"
    },
    "570": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "572": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP5",
      "path": "0"
    },
    "573": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "ADD",
      "path": "0"
    },
    "574": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "575": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "577": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP4",
      "path": "0"
    },
    "578": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "ADD",
      "path": "0"
    },
    "579": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP8",
      "path": "0"
    },
    "580": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "581": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "582": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "583": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "584": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "585": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "590": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "591": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "593": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP1",
      "path": "0"
    },
    "594": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "595": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "ADD",
      "path": "0"
    },
    "596": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "597": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "598": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP3",
      "path": "0"
    },
    "599": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "600": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "SUB",
      "path": "0"
    },
    "601": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "ADD",
      "path": "0"
    },
    "602": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP2",
      "path": "0"
    },
    "603": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1024,
        1036
      ],
      "op": "DUP4",
      "path": "0"
    },
    "604": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1091
      ],
      "op": "DUP8",
      "path": "0"
    },
    "605": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "DUP1",
      "path": "0"
    },
    "606": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "607": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "608": {
      "op": "DUP1"
    },
    "609": {
      "op": "ISZERO"
    },
    "610": {
      "op": "PUSH2",
      "value": "0x26A"
    },
    "613": {
      "op": "JUMPI"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "616": {
      "op": "DUP1"
    },
    "617": {
      "op": "REVERT"
    },
    "618": {
      "op": "JUMPDEST"
    },
    "619": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "POP",
      "path": "0"
    },
    "620": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "GAS",
      "path": "0"
    },
    "621": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "CALL",
      "path": "0"
    },
    "622": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1062,
        1130
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "623": {
      "op": "DUP1"
    },
    "624": {
      "op": "ISZERO"
    },
    "625": {
      "op": "PUSH2",
      "value": "0x27E"
    },
    "628": {
      "op": "JUMPI"
    },
    "629": {
      "op": "RETURNDATASIZE"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "632": {
      "op": "DUP1"
    },
    "633": {
      "op": "RETURNDATACOPY"
    },
    "634": {
      "op": "RETURNDATASIZE"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "637": {
      "op": "REVERT"
    },
    "638": {
      "op": "JUMPDEST"
    },
    "639": {
      "op": "POP"
    },
    "640": {
      "op": "POP"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "op": "SUB"
    },
    "650": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 5
    },
    "651": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "DUP7",
      "path": "0"
    },
    "652": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "AND",
      "path": "0"
    },
    "653": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "655": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "656": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "657": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "658": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "660": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "662": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "663": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "665": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "666": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "667": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "668": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "669": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "670": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "671": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "676": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "680": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "681": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP8",
      "path": "0"
    },
    "682": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP6",
      "path": "0"
    },
    "683": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "AND",
      "path": "0"
    },
    "684": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "686": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP3",
      "path": "0"
    },
    "687": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "ADD",
      "path": "0"
    },
    "688": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "689": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "691": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "692": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "ADD",
      "path": "0"
    },
    "693": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP10",
      "path": "0"
    },
    "694": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "695": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "696": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "697": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "698": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "699": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "AND",
      "path": "0"
    },
    "700": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1170
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x40C10F19"
    },
    "707": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1170
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "708": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "710": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "711": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP4",
      "path": "0"
    },
    "712": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "ADD",
      "path": "0"
    },
    "713": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "714": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "715": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP3",
      "path": "0"
    },
    "716": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "717": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "SUB",
      "path": "0"
    },
    "718": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "ADD",
      "path": "0"
    },
    "719": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "720": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "DUP4",
      "path": "0"
    },
    "721": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1147,
        1164
      ],
      "op": "DUP8",
      "path": "0"
    },
    "722": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "723": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "724": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "725": {
      "op": "DUP1"
    },
    "726": {
      "op": "ISZERO"
    },
    "727": {
      "op": "PUSH2",
      "value": "0x2DF"
    },
    "730": {
      "op": "JUMPI"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "733": {
      "op": "DUP1"
    },
    "734": {
      "op": "REVERT"
    },
    "735": {
      "op": "JUMPDEST"
    },
    "736": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "POP",
      "path": "0"
    },
    "737": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "GAS",
      "path": "0"
    },
    "738": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "CALL",
      "path": "0"
    },
    "739": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "740": {
      "op": "DUP1"
    },
    "741": {
      "op": "ISZERO"
    },
    "742": {
      "op": "PUSH2",
      "value": "0x2F3"
    },
    "745": {
      "op": "JUMPI"
    },
    "746": {
      "op": "RETURNDATASIZE"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "749": {
      "op": "DUP1"
    },
    "750": {
      "op": "RETURNDATACOPY"
    },
    "751": {
      "op": "RETURNDATASIZE"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "754": {
      "op": "REVERT"
    },
    "755": {
      "op": "JUMPDEST"
    },
    "756": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "POP",
      "path": "0"
    },
    "757": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "POP",
      "path": "0"
    },
    "758": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "POP",
      "path": "0"
    },
    "759": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        1140,
        1190
      ],
      "op": "POP",
      "path": "0"
    },
    "760": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "POP",
      "path": "0"
    },
    "761": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "POP",
      "path": "0"
    },
    "762": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "POP",
      "path": "0"
    },
    "763": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        853,
        1197
      ],
      "op": "POP",
      "path": "0"
    },
    "764": {
      "fn": "AaveLendingPoolMock.deposit",
      "jump": "o",
      "offset": [
        853,
        1197
      ],
      "op": "JUMP",
      "path": "0"
    },
    "765": {
      "offset": [
        302,
        328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "766": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "768": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "769": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFFF"
    },
    "772": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "AND",
      "path": "0"
    },
    "773": {
      "fn": "AaveLendingPoolMock.deposit",
      "offset": [
        302,
        328
      ],
      "op": "DUP2",
      "path": "0"
    },
    "774": {
      "fn": "AaveLendingPoolMock.deposit",
      "jump": "o",
      "offset": [
        302,
        328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "775": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        378,
        492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "782": {
      "op": "SHL"
    },
    "783": {
      "op": "SUB"
    },
    "784": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 6
    },
    "785": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "DUP3",
      "path": "0"
    },
    "786": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "AND",
      "path": "0"
    },
    "787": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "789": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "790": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "DUP2",
      "path": "0"
    },
    "791": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "792": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "794": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "796": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "797": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "799": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "800": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        475
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "801": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "802": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "op": "NOT"
    },
    "812": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "AND",
      "path": "0"
    },
    "813": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "814": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "815": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "816": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "AND",
      "path": "0"
    },
    "817": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "OR",
      "path": "0"
    },
    "818": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "819": {
      "fn": "AaveLendingPoolMock._add_token",
      "offset": [
        455,
        485
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "820": {
      "fn": "AaveLendingPoolMock._add_token",
      "jump": "o",
      "offset": [
        378,
        492
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "ff289186fd68688412a55fbc74d614267a00453a",
  "source": "pragma solidity ^0.5.0;\n\n\ninterface IERC20 {\n    function transferFrom(address, address, uint256) external;\n}\n\ninterface aToken {\n    function mint(address _to, uint256 _amount) external;\n    function redeem(address _from, address _to, uint256 _amount) external;\n}\n\ncontract AaveLendingPoolMock {\n\n    uint16 public lastReferral;\n\n    mapping (address => address) aTokens;\n\n    function _add_token(address _underlying, address _aToken) external {\n        aTokens[_underlying] = _aToken;\n    }\n\n    /**\n    * @dev deposits The underlying asset into the reserve. A corresponding amount\n           of the overlying asset (aTokens) is minted.\n    * @param _reserve the address of the reserve\n    * @param _amount the amount to be deposited\n    * @param _referralCode integrators are assigned a referral code and can potentially receive rewards.\n    **/\n    function deposit(address _reserve, uint256 _amount, address _receiver, uint16 _referralCode) external payable {\n        require (aTokens[_reserve] != address(0));\n        lastReferral = _referralCode;\n        IERC20(_reserve).transferFrom(_receiver, aTokens[_reserve], _amount);\n        aToken(aTokens[_reserve]).mint(_receiver, _amount);\n    }\n\n    function withdraw(address asset, uint256 amount, address to) external {\n        require (aTokens[asset] != address(0));\n        aToken(aTokens[asset]).redeem(msg.sender, to, amount);\n    }\n}\n",
  "sourceMap": "266:1127:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:1127:0;;;;;;;",
  "sourcePath": "contracts/testing/AaveLendingPoolMock.sol",
  "type": "contract"
}