{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "gas": 1088,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1548,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 74770,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 111125,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 37851,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 74756,
      "inputs": [
        {
          "name": "_target",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "_mint_for_testing",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 7670,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 6723,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1328,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1573,
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testing/ERC20Mock.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 7,
                  "id": "address",
                  "lineno": 7,
                  "node_id": 10,
                  "src": "93:7:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 7,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 7,
                "id": "indexed",
                "lineno": 7,
                "node_id": 8,
                "src": "85:7:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 7,
              "node_id": 7,
              "src": "85:16:7"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 7,
            "lineno": 7,
            "node_id": 4,
            "simple": 1,
            "src": "78:23:7",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 7,
              "id": "_from",
              "lineno": 7,
              "node_id": 5,
              "src": "78:5:7"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 24,
                  "end_lineno": 8,
                  "id": "address",
                  "lineno": 8,
                  "node_id": 18,
                  "src": "119:7:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 9,
              "end_col_offset": 25,
              "end_lineno": 8,
              "func": {
                "ast_type": "Name",
                "col_offset": 9,
                "end_col_offset": 16,
                "end_lineno": 8,
                "id": "indexed",
                "lineno": 8,
                "node_id": 16,
                "src": "111:7:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 8,
              "node_id": 15,
              "src": "111:16:7"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 25,
            "end_lineno": 8,
            "lineno": 8,
            "node_id": 12,
            "simple": 1,
            "src": "106:21:7",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 7,
              "end_lineno": 8,
              "id": "_to",
              "lineno": 8,
              "node_id": 13,
              "src": "106:3:7"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 12,
              "end_col_offset": 19,
              "end_lineno": 9,
              "id": "uint256",
              "lineno": 9,
              "node_id": 23,
              "src": "140:7:7"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 9,
            "lineno": 9,
            "node_id": 20,
            "simple": 1,
            "src": "132:15:7",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 9,
              "id": "_value",
              "lineno": 9,
              "node_id": 21,
              "src": "132:6:7"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 19,
        "end_lineno": 9,
        "lineno": 6,
        "name": "Transfer",
        "node_id": 3,
        "src": "58:89:7"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 12,
                  "id": "address",
                  "lineno": 12,
                  "node_id": 32,
                  "src": "185:7:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 12,
              "end_col_offset": 28,
              "end_lineno": 12,
              "func": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 19,
                "end_lineno": 12,
                "id": "indexed",
                "lineno": 12,
                "node_id": 30,
                "src": "177:7:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 12,
              "node_id": 29,
              "src": "177:16:7"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 12,
            "lineno": 12,
            "node_id": 26,
            "simple": 1,
            "src": "169:24:7",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 12,
              "id": "_owner",
              "lineno": 12,
              "node_id": 27,
              "src": "169:6:7"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 13,
                  "id": "address",
                  "lineno": 13,
                  "node_id": 40,
                  "src": "216:7:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 13,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 13,
                "id": "indexed",
                "lineno": 13,
                "node_id": 38,
                "src": "208:7:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 13,
              "node_id": 37,
              "src": "208:16:7"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 13,
            "lineno": 13,
            "node_id": 34,
            "simple": 1,
            "src": "198:26:7",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 13,
              "id": "_spender",
              "lineno": 13,
              "node_id": 35,
              "src": "198:8:7"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 12,
              "end_col_offset": 19,
              "end_lineno": 14,
              "id": "uint256",
              "lineno": 14,
              "node_id": 45,
              "src": "237:7:7"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 14,
            "lineno": 14,
            "node_id": 42,
            "simple": 1,
            "src": "229:15:7",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 14,
              "id": "_value",
              "lineno": 14,
              "node_id": 43,
              "src": "229:6:7"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 19,
        "end_lineno": 14,
        "lineno": 11,
        "name": "Approval",
        "node_id": 25,
        "src": "149:95:7"
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Subscript",
              "col_offset": 13,
              "end_col_offset": 23,
              "end_lineno": 16,
              "lineno": 16,
              "node_id": 53,
              "slice": {
                "ast_type": "Index",
                "col_offset": 20,
                "end_col_offset": 22,
                "end_lineno": 16,
                "lineno": 16,
                "node_id": 56,
                "src": "266:2:7",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 20,
                  "end_col_offset": 22,
                  "end_lineno": 16,
                  "lineno": 16,
                  "node_id": 57,
                  "src": "266:2:7",
                  "value": 64
                }
              },
              "src": "259:10:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 19,
                "end_lineno": 16,
                "id": "String",
                "lineno": 16,
                "node_id": 54,
                "src": "259:6:7"
              }
            }
          ],
          "ast_type": "Call",
          "col_offset": 6,
          "end_col_offset": 24,
          "end_lineno": 16,
          "func": {
            "ast_type": "Name",
            "col_offset": 6,
            "end_col_offset": 12,
            "end_lineno": 16,
            "id": "public",
            "lineno": 16,
            "node_id": 51,
            "src": "252:6:7"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 16,
          "node_id": 50,
          "src": "252:18:7"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 24,
        "end_lineno": 16,
        "lineno": 16,
        "node_id": 47,
        "simple": 1,
        "src": "246:24:7",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 4,
          "end_lineno": 16,
          "id": "name",
          "lineno": 16,
          "node_id": 48,
          "src": "246:4:7"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Subscript",
              "col_offset": 15,
              "end_col_offset": 25,
              "end_lineno": 17,
              "lineno": 17,
              "node_id": 65,
              "slice": {
                "ast_type": "Index",
                "col_offset": 22,
                "end_col_offset": 24,
                "end_lineno": 17,
                "lineno": 17,
                "node_id": 68,
                "src": "293:2:7",
                "value": {
                  "ast_type": "Int",
                  "col_offset": 22,
                  "end_col_offset": 24,
                  "end_lineno": 17,
                  "lineno": 17,
                  "node_id": 69,
                  "src": "293:2:7",
                  "value": 32
                }
              },
              "src": "286:10:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 15,
                "end_col_offset": 21,
                "end_lineno": 17,
                "id": "String",
                "lineno": 17,
                "node_id": 66,
                "src": "286:6:7"
              }
            }
          ],
          "ast_type": "Call",
          "col_offset": 8,
          "end_col_offset": 26,
          "end_lineno": 17,
          "func": {
            "ast_type": "Name",
            "col_offset": 8,
            "end_col_offset": 14,
            "end_lineno": 17,
            "id": "public",
            "lineno": 17,
            "node_id": 63,
            "src": "279:6:7"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 17,
          "node_id": 62,
          "src": "279:18:7"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 17,
        "lineno": 17,
        "node_id": 59,
        "simple": 1,
        "src": "271:26:7",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 17,
          "id": "symbol",
          "lineno": 17,
          "node_id": 60,
          "src": "271:6:7"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Name",
              "col_offset": 17,
              "end_col_offset": 24,
              "end_lineno": 18,
              "id": "uint256",
              "lineno": 18,
              "node_id": 77,
              "src": "315:7:7"
            }
          ],
          "ast_type": "Call",
          "col_offset": 10,
          "end_col_offset": 25,
          "end_lineno": 18,
          "func": {
            "ast_type": "Name",
            "col_offset": 10,
            "end_col_offset": 16,
            "end_lineno": 18,
            "id": "public",
            "lineno": 18,
            "node_id": 75,
            "src": "308:6:7"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 18,
          "node_id": 74,
          "src": "308:15:7"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 18,
        "lineno": 18,
        "node_id": 71,
        "simple": 1,
        "src": "298:25:7",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 18,
          "id": "decimals",
          "lineno": 18,
          "node_id": 72,
          "src": "298:8:7"
        },
        "value": null
      },
      {
        "annotation": {
          "args": [
            {
              "ast_type": "Subscript",
              "col_offset": 18,
              "end_col_offset": 43,
              "end_lineno": 19,
              "lineno": 19,
              "node_id": 85,
              "slice": {
                "ast_type": "Index",
                "col_offset": 26,
                "end_col_offset": 42,
                "end_lineno": 19,
                "lineno": 19,
                "node_id": 88,
                "src": "350:16:7",
                "value": {
                  "ast_type": "Tuple",
                  "col_offset": 26,
                  "elements": [
                    {
                      "ast_type": "Name",
                      "col_offset": 26,
                      "end_col_offset": 33,
                      "end_lineno": 19,
                      "id": "address",
                      "lineno": 19,
                      "node_id": 90,
                      "src": "350:7:7"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 35,
                      "end_col_offset": 42,
                      "end_lineno": 19,
                      "id": "uint256",
                      "lineno": 19,
                      "node_id": 92,
                      "src": "359:7:7"
                    }
                  ],
                  "end_col_offset": 42,
                  "end_lineno": 19,
                  "lineno": 19,
                  "node_id": 89,
                  "src": "350:16:7"
                }
              },
              "src": "342:25:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 25,
                "end_lineno": 19,
                "id": "HashMap",
                "lineno": 19,
                "node_id": 86,
                "src": "342:7:7"
              }
            }
          ],
          "ast_type": "Call",
          "col_offset": 11,
          "end_col_offset": 44,
          "end_lineno": 19,
          "func": {
            "ast_type": "Name",
            "col_offset": 11,
            "end_col_offset": 17,
            "end_lineno": 19,
            "id": "public",
            "lineno": 19,
            "node_id": 83,
            "src": "335:6:7"
          },
          "keyword": null,
          "keywords": [],
          "lineno": 19,
          "node_id": 82,
          "src": "335:33:7"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 44,
        "end_lineno": 19,
        "lineno": 19,
        "node_id": 79,
        "simple": 1,
        "src": "324:44:7",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 19,
          "id": "balanceOf",
          "lineno": 19,
          "node_id": 80,
          "src": "324:9:7"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 12,
          "end_col_offset": 55,
          "end_lineno": 20,
          "lineno": 20,
          "node_id": 99,
          "slice": {
            "ast_type": "Index",
            "col_offset": 20,
            "end_col_offset": 54,
            "end_lineno": 20,
            "lineno": 20,
            "node_id": 102,
            "src": "389:34:7",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 20,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 20,
                  "id": "address",
                  "lineno": 20,
                  "node_id": 104,
                  "src": "389:7:7"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 29,
                  "end_col_offset": 54,
                  "end_lineno": 20,
                  "lineno": 20,
                  "node_id": 106,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 37,
                    "end_col_offset": 53,
                    "end_lineno": 20,
                    "lineno": 20,
                    "node_id": 109,
                    "src": "406:16:7",
                    "value": {
                      "ast_type": "Tuple",
                      "col_offset": 37,
                      "elements": [
                        {
                          "ast_type": "Name",
                          "col_offset": 37,
                          "end_col_offset": 44,
                          "end_lineno": 20,
                          "id": "address",
                          "lineno": 20,
                          "node_id": 111,
                          "src": "406:7:7"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 46,
                          "end_col_offset": 53,
                          "end_lineno": 20,
                          "id": "uint256",
                          "lineno": 20,
                          "node_id": 113,
                          "src": "415:7:7"
                        }
                      ],
                      "end_col_offset": 53,
                      "end_lineno": 20,
                      "lineno": 20,
                      "node_id": 110,
                      "src": "406:16:7"
                    }
                  },
                  "src": "398:25:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 29,
                    "end_col_offset": 36,
                    "end_lineno": 20,
                    "id": "HashMap",
                    "lineno": 20,
                    "node_id": 107,
                    "src": "398:7:7"
                  }
                }
              ],
              "end_col_offset": 54,
              "end_lineno": 20,
              "lineno": 20,
              "node_id": 103,
              "src": "389:34:7"
            }
          },
          "src": "381:43:7",
          "value": {
            "ast_type": "Name",
            "col_offset": 12,
            "end_col_offset": 19,
            "end_lineno": 20,
            "id": "HashMap",
            "lineno": 20,
            "node_id": 100,
            "src": "381:7:7"
          }
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 55,
        "end_lineno": 20,
        "lineno": 20,
        "node_id": 96,
        "simple": 1,
        "src": "369:55:7",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 20,
          "id": "allowances",
          "lineno": 20,
          "node_id": 97,
          "src": "369:10:7"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 14,
          "end_col_offset": 21,
          "end_lineno": 21,
          "id": "uint256",
          "lineno": 21,
          "node_id": 122,
          "src": "439:7:7"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 21,
        "end_lineno": 21,
        "lineno": 21,
        "node_id": 119,
        "simple": 1,
        "src": "425:21:7",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 12,
          "end_lineno": 21,
          "id": "total_supply",
          "lineno": 21,
          "node_id": 120,
          "src": "425:12:7"
        },
        "value": null
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 20,
                "end_col_offset": 30,
                "end_lineno": 25,
                "lineno": 25,
                "node_id": 127,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 27,
                  "end_col_offset": 29,
                  "end_lineno": 25,
                  "lineno": 25,
                  "node_id": 130,
                  "src": "486:2:7",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 27,
                    "end_col_offset": 29,
                    "end_lineno": 25,
                    "lineno": 25,
                    "node_id": 131,
                    "src": "486:2:7",
                    "value": 64
                  }
                },
                "src": "479:10:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 26,
                  "end_lineno": 25,
                  "id": "String",
                  "lineno": 25,
                  "node_id": 128,
                  "src": "479:6:7"
                }
              },
              "arg": "_name",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 30,
              "end_lineno": 25,
              "lineno": 25,
              "node_id": 126,
              "src": "472:17:7"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 41,
                "end_col_offset": 51,
                "end_lineno": 25,
                "lineno": 25,
                "node_id": 134,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 48,
                  "end_col_offset": 50,
                  "end_lineno": 25,
                  "lineno": 25,
                  "node_id": 137,
                  "src": "507:2:7",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 48,
                    "end_col_offset": 50,
                    "end_lineno": 25,
                    "lineno": 25,
                    "node_id": 138,
                    "src": "507:2:7",
                    "value": 32
                  }
                },
                "src": "500:10:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 41,
                  "end_col_offset": 47,
                  "end_lineno": 25,
                  "id": "String",
                  "lineno": 25,
                  "node_id": 135,
                  "src": "500:6:7"
                }
              },
              "arg": "_symbol",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 51,
              "end_lineno": 25,
              "lineno": 25,
              "node_id": 133,
              "src": "491:19:7"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 64,
                "end_col_offset": 71,
                "end_lineno": 25,
                "id": "uint256",
                "lineno": 25,
                "node_id": 141,
                "src": "523:7:7"
              },
              "arg": "_decimals",
              "ast_type": "arg",
              "col_offset": 53,
              "end_col_offset": 71,
              "end_lineno": 25,
              "lineno": 25,
              "node_id": 140,
              "src": "512:18:7"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 71,
          "end_lineno": 25,
          "lineno": 25,
          "node_id": 125,
          "src": "472:58:7"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 21,
            "end_lineno": 26,
            "lineno": 26,
            "node_id": 143,
            "src": "537:17:7",
            "target": {
              "ast_type": "Attribute",
              "attr": "name",
              "col_offset": 4,
              "end_col_offset": 13,
              "end_lineno": 26,
              "lineno": 26,
              "node_id": 144,
              "src": "537:9:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 26,
                "id": "self",
                "lineno": 26,
                "node_id": 145,
                "src": "537:4:7"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 16,
              "end_col_offset": 21,
              "end_lineno": 26,
              "id": "_name",
              "lineno": 26,
              "node_id": 148,
              "src": "549:5:7"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 25,
            "end_lineno": 27,
            "lineno": 27,
            "node_id": 150,
            "src": "559:21:7",
            "target": {
              "ast_type": "Attribute",
              "attr": "symbol",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 27,
              "lineno": 27,
              "node_id": 151,
              "src": "559:11:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 27,
                "id": "self",
                "lineno": 27,
                "node_id": 152,
                "src": "559:4:7"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 27,
              "id": "_symbol",
              "lineno": 27,
              "node_id": 155,
              "src": "573:7:7"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 28,
            "lineno": 28,
            "node_id": 157,
            "src": "585:25:7",
            "target": {
              "ast_type": "Attribute",
              "attr": "decimals",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 28,
              "lineno": 28,
              "node_id": 158,
              "src": "585:13:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 28,
                "id": "self",
                "lineno": 28,
                "node_id": 159,
                "src": "585:4:7"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 29,
              "end_lineno": 28,
              "id": "_decimals",
              "lineno": 28,
              "node_id": 162,
              "src": "601:9:7"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 24,
            "id": "external",
            "lineno": 24,
            "node_id": 164,
            "src": "450:8:7"
          }
        ],
        "doc_string": null,
        "end_col_offset": 29,
        "end_lineno": 28,
        "lineno": 25,
        "name": "__init__",
        "node_id": 124,
        "pos": null,
        "returns": null,
        "src": "459:151:7"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 33,
          "lineno": 33,
          "node_id": 167,
          "src": "629:3:7"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 34,
            "lineno": 34,
            "node_id": 168,
            "src": "663:24:7",
            "value": {
              "ast_type": "Attribute",
              "attr": "total_supply",
              "col_offset": 11,
              "end_col_offset": 28,
              "end_lineno": 34,
              "lineno": 34,
              "node_id": 169,
              "src": "670:17:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 15,
                "end_lineno": 34,
                "id": "self",
                "lineno": 34,
                "node_id": 170,
                "src": "670:4:7"
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 31,
            "id": "external",
            "lineno": 31,
            "node_id": 173,
            "src": "614:8:7"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 32,
            "id": "view",
            "lineno": 32,
            "node_id": 175,
            "src": "624:4:7"
          }
        ],
        "doc_string": null,
        "end_col_offset": 28,
        "end_lineno": 34,
        "lineno": 33,
        "name": "totalSupply",
        "node_id": 166,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 21,
          "end_col_offset": 28,
          "end_lineno": 33,
          "id": "uint256",
          "lineno": 33,
          "node_id": 177,
          "src": "650:7:7"
        },
        "src": "629:58:7"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 39,
                "id": "address",
                "lineno": 39,
                "node_id": 182,
                "src": "729:7:7"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 39,
              "lineno": 39,
              "node_id": 181,
              "src": "720:16:7"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 43,
                "end_col_offset": 50,
                "end_lineno": 39,
                "id": "address",
                "lineno": 39,
                "node_id": 185,
                "src": "749:7:7"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 50,
              "end_lineno": 39,
              "lineno": 39,
              "node_id": 184,
              "src": "738:18:7"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 50,
          "end_lineno": 39,
          "lineno": 39,
          "node_id": 180,
          "src": "720:36:7"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 40,
            "lineno": 40,
            "node_id": 187,
            "src": "774:40:7",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 44,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 188,
              "slice": {
                "ast_type": "Index",
                "col_offset": 35,
                "end_col_offset": 43,
                "end_lineno": 40,
                "lineno": 40,
                "node_id": 198,
                "src": "805:8:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 40,
                  "id": "_spender",
                  "lineno": 40,
                  "node_id": 199,
                  "src": "805:8:7"
                }
              },
              "src": "781:33:7",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 40,
                "lineno": 40,
                "node_id": 189,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 27,
                  "end_col_offset": 33,
                  "end_lineno": 40,
                  "lineno": 40,
                  "node_id": 194,
                  "src": "797:6:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 27,
                    "end_col_offset": 33,
                    "end_lineno": 40,
                    "id": "_owner",
                    "lineno": 40,
                    "node_id": 195,
                    "src": "797:6:7"
                  }
                },
                "src": "781:23:7",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowances",
                  "col_offset": 11,
                  "end_col_offset": 26,
                  "end_lineno": 40,
                  "lineno": 40,
                  "node_id": 190,
                  "src": "781:15:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 40,
                    "id": "self",
                    "lineno": 40,
                    "node_id": 191,
                    "src": "781:4:7"
                  }
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 37,
            "id": "external",
            "lineno": 37,
            "node_id": 202,
            "src": "691:8:7"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 38,
            "id": "view",
            "lineno": 38,
            "node_id": 204,
            "src": "701:4:7"
          }
        ],
        "doc_string": null,
        "end_col_offset": 44,
        "end_lineno": 40,
        "lineno": 39,
        "name": "allowance",
        "node_id": 179,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 55,
          "end_col_offset": 62,
          "end_lineno": 39,
          "id": "uint256",
          "lineno": 39,
          "node_id": 206,
          "src": "761:7:7"
        },
        "src": "706:108:7"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 44,
                "id": "address",
                "lineno": 44,
                "node_id": 211,
                "src": "846:7:7"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 26,
              "end_lineno": 44,
              "lineno": 44,
              "node_id": 210,
              "src": "840:13:7"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 44,
                "end_lineno": 44,
                "id": "uint256",
                "lineno": 44,
                "node_id": 214,
                "src": "864:7:7"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 28,
              "end_col_offset": 44,
              "end_lineno": 44,
              "lineno": 44,
              "node_id": 213,
              "src": "855:16:7"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 44,
          "lineno": 44,
          "node_id": 209,
          "src": "840:31:7"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 45,
            "lineno": 45,
            "node_id": 216,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 45,
              "lineno": 45,
              "node_id": 317,
              "src": "886:36:7"
            },
            "src": "886:36:7",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 45,
              "lineno": 45,
              "node_id": 217,
              "slice": {
                "ast_type": "Index",
                "col_offset": 19,
                "end_col_offset": 29,
                "end_lineno": 45,
                "lineno": 45,
                "node_id": 222,
                "src": "901:10:7",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 45,
                  "lineno": 45,
                  "node_id": 223,
                  "src": "901:10:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 45,
                    "id": "msg",
                    "lineno": 45,
                    "node_id": 224,
                    "src": "901:3:7"
                  }
                }
              },
              "src": "886:26:7",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 45,
                "lineno": 45,
                "node_id": 218,
                "src": "886:14:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 45,
                  "id": "self",
                  "lineno": 45,
                  "node_id": 219,
                  "src": "886:4:7"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 34,
              "end_col_offset": 40,
              "end_lineno": 45,
              "id": "_value",
              "lineno": 45,
              "node_id": 229,
              "src": "916:6:7"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 46,
            "lineno": 46,
            "node_id": 231,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 46,
              "lineno": 46,
              "node_id": 409,
              "src": "927:29:7"
            },
            "src": "927:29:7",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 46,
              "lineno": 46,
              "node_id": 232,
              "slice": {
                "ast_type": "Index",
                "col_offset": 19,
                "end_col_offset": 22,
                "end_lineno": 46,
                "lineno": 46,
                "node_id": 237,
                "src": "942:3:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 46,
                  "id": "_to",
                  "lineno": 46,
                  "node_id": 238,
                  "src": "942:3:7"
                }
              },
              "src": "927:19:7",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 46,
                "lineno": 46,
                "node_id": 233,
                "src": "927:14:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 46,
                  "id": "self",
                  "lineno": 46,
                  "node_id": 234,
                  "src": "927:4:7"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 46,
              "id": "_value",
              "lineno": 46,
              "node_id": 242,
              "src": "950:6:7"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 41,
            "end_lineno": 47,
            "lineno": 47,
            "node_id": 245,
            "src": "961:37:7",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 17,
                  "end_col_offset": 27,
                  "end_lineno": 47,
                  "lineno": 47,
                  "node_id": 249,
                  "src": "974:10:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 20,
                    "end_lineno": 47,
                    "id": "msg",
                    "lineno": 47,
                    "node_id": 250,
                    "src": "974:3:7"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 32,
                  "end_lineno": 47,
                  "id": "_to",
                  "lineno": 47,
                  "node_id": 253,
                  "src": "986:3:7"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 34,
                  "end_col_offset": 40,
                  "end_lineno": 47,
                  "id": "_value",
                  "lineno": 47,
                  "node_id": 255,
                  "src": "991:6:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 41,
              "end_lineno": 47,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 47,
                "id": "Transfer",
                "lineno": 47,
                "node_id": 247,
                "src": "965:8:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 47,
              "node_id": 246,
              "src": "965:33:7"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 48,
            "lineno": 48,
            "node_id": 257,
            "src": "1003:11:7",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 48,
              "lineno": 48,
              "node_id": 258,
              "src": "1010:4:7",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 43,
            "id": "external",
            "lineno": 43,
            "node_id": 259,
            "src": "818:8:7"
          }
        ],
        "doc_string": null,
        "end_col_offset": 15,
        "end_lineno": 48,
        "lineno": 44,
        "name": "transfer",
        "node_id": 208,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 53,
          "end_lineno": 44,
          "id": "bool",
          "lineno": 44,
          "node_id": 261,
          "src": "876:4:7"
        },
        "src": "827:187:7"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 52,
                "id": "address",
                "lineno": 52,
                "node_id": 266,
                "src": "1052:7:7"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 32,
              "end_lineno": 52,
              "lineno": 52,
              "node_id": 265,
              "src": "1044:15:7"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 40,
                "end_col_offset": 47,
                "end_lineno": 52,
                "id": "address",
                "lineno": 52,
                "node_id": 269,
                "src": "1067:7:7"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 34,
              "end_col_offset": 47,
              "end_lineno": 52,
              "lineno": 52,
              "node_id": 268,
              "src": "1061:13:7"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 58,
                "end_col_offset": 65,
                "end_lineno": 52,
                "id": "uint256",
                "lineno": 52,
                "node_id": 272,
                "src": "1085:7:7"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 49,
              "end_col_offset": 65,
              "end_lineno": 52,
              "lineno": 52,
              "node_id": 271,
              "src": "1076:16:7"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 65,
          "end_lineno": 52,
          "lineno": 52,
          "node_id": 264,
          "src": "1044:48:7"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 53,
            "lineno": 53,
            "node_id": 274,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 53,
              "lineno": 53,
              "node_id": 317,
              "src": "1107:31:7"
            },
            "src": "1107:31:7",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 25,
              "end_lineno": 53,
              "lineno": 53,
              "node_id": 275,
              "slice": {
                "ast_type": "Index",
                "col_offset": 19,
                "end_col_offset": 24,
                "end_lineno": 53,
                "lineno": 53,
                "node_id": 280,
                "src": "1122:5:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 24,
                  "end_lineno": 53,
                  "id": "_from",
                  "lineno": 53,
                  "node_id": 281,
                  "src": "1122:5:7"
                }
              },
              "src": "1107:21:7",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 53,
                "lineno": 53,
                "node_id": 276,
                "src": "1107:14:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 53,
                  "id": "self",
                  "lineno": 53,
                  "node_id": 277,
                  "src": "1107:4:7"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 29,
              "end_col_offset": 35,
              "end_lineno": 53,
              "id": "_value",
              "lineno": 53,
              "node_id": 285,
              "src": "1132:6:7"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 54,
            "lineno": 54,
            "node_id": 287,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 54,
              "lineno": 54,
              "node_id": 409,
              "src": "1143:29:7"
            },
            "src": "1143:29:7",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 54,
              "lineno": 54,
              "node_id": 288,
              "slice": {
                "ast_type": "Index",
                "col_offset": 19,
                "end_col_offset": 22,
                "end_lineno": 54,
                "lineno": 54,
                "node_id": 293,
                "src": "1158:3:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 54,
                  "id": "_to",
                  "lineno": 54,
                  "node_id": 294,
                  "src": "1158:3:7"
                }
              },
              "src": "1143:19:7",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 54,
                "lineno": 54,
                "node_id": 289,
                "src": "1143:14:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 54,
                  "id": "self",
                  "lineno": 54,
                  "node_id": 290,
                  "src": "1143:4:7"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 54,
              "id": "_value",
              "lineno": 54,
              "node_id": 298,
              "src": "1166:6:7"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 48,
            "end_lineno": 55,
            "lineno": 55,
            "node_id": 300,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 48,
              "end_lineno": 55,
              "lineno": 55,
              "node_id": 317,
              "src": "1177:44:7"
            },
            "src": "1177:44:7",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 38,
              "end_lineno": 55,
              "lineno": 55,
              "node_id": 301,
              "slice": {
                "ast_type": "Index",
                "col_offset": 27,
                "end_col_offset": 37,
                "end_lineno": 55,
                "lineno": 55,
                "node_id": 311,
                "src": "1200:10:7",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 27,
                  "end_col_offset": 37,
                  "end_lineno": 55,
                  "lineno": 55,
                  "node_id": 312,
                  "src": "1200:10:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 27,
                    "end_col_offset": 30,
                    "end_lineno": 55,
                    "id": "msg",
                    "lineno": 55,
                    "node_id": 313,
                    "src": "1200:3:7"
                  }
                }
              },
              "src": "1177:34:7",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 26,
                "end_lineno": 55,
                "lineno": 55,
                "node_id": 302,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 20,
                  "end_col_offset": 25,
                  "end_lineno": 55,
                  "lineno": 55,
                  "node_id": 307,
                  "src": "1193:5:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 20,
                    "end_col_offset": 25,
                    "end_lineno": 55,
                    "id": "_from",
                    "lineno": 55,
                    "node_id": 308,
                    "src": "1193:5:7"
                  }
                },
                "src": "1177:22:7",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowances",
                  "col_offset": 4,
                  "end_col_offset": 19,
                  "end_lineno": 55,
                  "lineno": 55,
                  "node_id": 303,
                  "src": "1177:15:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 55,
                    "id": "self",
                    "lineno": 55,
                    "node_id": 304,
                    "src": "1177:4:7"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 42,
              "end_col_offset": 48,
              "end_lineno": 55,
              "id": "_value",
              "lineno": 55,
              "node_id": 318,
              "src": "1215:6:7"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 56,
            "lineno": 56,
            "node_id": 321,
            "src": "1226:32:7",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 56,
                  "id": "_from",
                  "lineno": 56,
                  "node_id": 325,
                  "src": "1239:5:7"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 56,
                  "id": "_to",
                  "lineno": 56,
                  "node_id": 327,
                  "src": "1246:3:7"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 35,
                  "end_lineno": 56,
                  "id": "_value",
                  "lineno": 56,
                  "node_id": 329,
                  "src": "1251:6:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 36,
              "end_lineno": 56,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 56,
                "id": "Transfer",
                "lineno": 56,
                "node_id": 323,
                "src": "1230:8:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 56,
              "node_id": 322,
              "src": "1230:28:7"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 57,
            "lineno": 57,
            "node_id": 331,
            "src": "1263:11:7",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 57,
              "lineno": 57,
              "node_id": 332,
              "src": "1270:4:7",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 51,
            "id": "external",
            "lineno": 51,
            "node_id": 333,
            "src": "1018:8:7"
          }
        ],
        "doc_string": null,
        "end_col_offset": 15,
        "end_lineno": 57,
        "lineno": 52,
        "name": "transferFrom",
        "node_id": 263,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 70,
          "end_col_offset": 74,
          "end_lineno": 52,
          "id": "bool",
          "lineno": 52,
          "node_id": 335,
          "src": "1097:4:7"
        },
        "src": "1027:247:7"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 61,
                "id": "address",
                "lineno": 61,
                "node_id": 340,
                "src": "1310:7:7"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 30,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 339,
              "src": "1299:18:7"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 41,
                "end_col_offset": 48,
                "end_lineno": 61,
                "id": "uint256",
                "lineno": 61,
                "node_id": 343,
                "src": "1328:7:7"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 48,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 342,
              "src": "1319:16:7"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 48,
          "end_lineno": 61,
          "lineno": 61,
          "node_id": 338,
          "src": "1299:36:7"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 50,
            "end_lineno": 62,
            "lineno": 62,
            "node_id": 345,
            "src": "1350:46:7",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 41,
              "end_lineno": 62,
              "lineno": 62,
              "node_id": 346,
              "slice": {
                "ast_type": "Index",
                "col_offset": 32,
                "end_col_offset": 40,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 358,
                "src": "1378:8:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 32,
                  "end_col_offset": 40,
                  "end_lineno": 62,
                  "id": "_spender",
                  "lineno": 62,
                  "node_id": 359,
                  "src": "1378:8:7"
                }
              },
              "src": "1350:37:7",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 31,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 347,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 20,
                  "end_col_offset": 30,
                  "end_lineno": 62,
                  "lineno": 62,
                  "node_id": 352,
                  "src": "1366:10:7",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 20,
                    "end_col_offset": 30,
                    "end_lineno": 62,
                    "lineno": 62,
                    "node_id": 353,
                    "src": "1366:10:7",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 20,
                      "end_col_offset": 23,
                      "end_lineno": 62,
                      "id": "msg",
                      "lineno": 62,
                      "node_id": 354,
                      "src": "1366:3:7"
                    }
                  }
                },
                "src": "1350:27:7",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowances",
                  "col_offset": 4,
                  "end_col_offset": 19,
                  "end_lineno": 62,
                  "lineno": 62,
                  "node_id": 348,
                  "src": "1350:15:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 62,
                    "id": "self",
                    "lineno": 62,
                    "node_id": 349,
                    "src": "1350:4:7"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 44,
              "end_col_offset": 50,
              "end_lineno": 62,
              "id": "_value",
              "lineno": 62,
              "node_id": 362,
              "src": "1390:6:7"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 46,
            "end_lineno": 63,
            "lineno": 63,
            "node_id": 365,
            "src": "1401:42:7",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 17,
                  "end_col_offset": 27,
                  "end_lineno": 63,
                  "lineno": 63,
                  "node_id": 369,
                  "src": "1414:10:7",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 20,
                    "end_lineno": 63,
                    "id": "msg",
                    "lineno": 63,
                    "node_id": 370,
                    "src": "1414:3:7"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 37,
                  "end_lineno": 63,
                  "id": "_spender",
                  "lineno": 63,
                  "node_id": 373,
                  "src": "1426:8:7"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 45,
                  "end_lineno": 63,
                  "id": "_value",
                  "lineno": 63,
                  "node_id": 375,
                  "src": "1436:6:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 46,
              "end_lineno": 63,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 63,
                "id": "Approval",
                "lineno": 63,
                "node_id": 367,
                "src": "1405:8:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 63,
              "node_id": 366,
              "src": "1405:38:7"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 64,
            "lineno": 64,
            "node_id": 377,
            "src": "1448:11:7",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 64,
              "lineno": 64,
              "node_id": 378,
              "src": "1455:4:7",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 60,
            "id": "external",
            "lineno": 60,
            "node_id": 379,
            "src": "1278:8:7"
          }
        ],
        "doc_string": null,
        "end_col_offset": 15,
        "end_lineno": 64,
        "lineno": 61,
        "name": "approve",
        "node_id": 337,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 53,
          "end_col_offset": 57,
          "end_lineno": 61,
          "id": "bool",
          "lineno": 61,
          "node_id": 381,
          "src": "1340:4:7"
        },
        "src": "1287:172:7"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 68,
                "id": "address",
                "lineno": 68,
                "node_id": 386,
                "src": "1503:7:7"
              },
              "arg": "_target",
              "ast_type": "arg",
              "col_offset": 22,
              "end_col_offset": 38,
              "end_lineno": 68,
              "lineno": 68,
              "node_id": 385,
              "src": "1494:16:7"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 48,
                "end_col_offset": 55,
                "end_lineno": 68,
                "id": "uint256",
                "lineno": 68,
                "node_id": 389,
                "src": "1520:7:7"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 40,
              "end_col_offset": 55,
              "end_lineno": 68,
              "lineno": 68,
              "node_id": 388,
              "src": "1512:15:7"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 22,
          "default": null,
          "defaults": [],
          "end_col_offset": 55,
          "end_lineno": 68,
          "lineno": 68,
          "node_id": 384,
          "src": "1494:33:7"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 31,
            "end_lineno": 69,
            "lineno": 69,
            "node_id": 391,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 31,
              "end_lineno": 69,
              "lineno": 69,
              "node_id": 409,
              "src": "1542:27:7"
            },
            "src": "1542:27:7",
            "target": {
              "ast_type": "Attribute",
              "attr": "total_supply",
              "col_offset": 4,
              "end_col_offset": 21,
              "end_lineno": 69,
              "lineno": 69,
              "node_id": 392,
              "src": "1542:17:7",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 69,
                "id": "self",
                "lineno": 69,
                "node_id": 393,
                "src": "1542:4:7"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 25,
              "end_col_offset": 31,
              "end_lineno": 69,
              "id": "_value",
              "lineno": 69,
              "node_id": 397,
              "src": "1563:6:7"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 37,
            "end_lineno": 70,
            "lineno": 70,
            "node_id": 399,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 37,
              "end_lineno": 70,
              "lineno": 70,
              "node_id": 409,
              "src": "1574:33:7"
            },
            "src": "1574:33:7",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 70,
              "lineno": 70,
              "node_id": 400,
              "slice": {
                "ast_type": "Index",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 70,
                "lineno": 70,
                "node_id": 405,
                "src": "1589:7:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 70,
                  "id": "_target",
                  "lineno": 70,
                  "node_id": 406,
                  "src": "1589:7:7"
                }
              },
              "src": "1574:23:7",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 70,
                "lineno": 70,
                "node_id": 401,
                "src": "1574:14:7",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 70,
                  "id": "self",
                  "lineno": 70,
                  "node_id": 402,
                  "src": "1574:4:7"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 31,
              "end_col_offset": 37,
              "end_lineno": 70,
              "id": "_value",
              "lineno": 70,
              "node_id": 410,
              "src": "1601:6:7"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 47,
            "end_lineno": 71,
            "lineno": 71,
            "node_id": 413,
            "src": "1612:43:7",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 29,
                  "end_lineno": 71,
                  "id": "ZERO_ADDRESS",
                  "lineno": 71,
                  "node_id": 417,
                  "src": "1625:12:7"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 38,
                  "end_lineno": 71,
                  "id": "_target",
                  "lineno": 71,
                  "node_id": 419,
                  "src": "1639:7:7"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 40,
                  "end_col_offset": 46,
                  "end_lineno": 71,
                  "id": "_value",
                  "lineno": 71,
                  "node_id": 421,
                  "src": "1648:6:7"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 47,
              "end_lineno": 71,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 71,
                "id": "Transfer",
                "lineno": 71,
                "node_id": 415,
                "src": "1616:8:7"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 71,
              "node_id": 414,
              "src": "1616:39:7"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 73,
            "lineno": 73,
            "node_id": 423,
            "src": "1661:11:7",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 73,
              "lineno": 73,
              "node_id": 424,
              "src": "1668:4:7",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 67,
            "id": "external",
            "lineno": 67,
            "node_id": 425,
            "src": "1463:8:7"
          }
        ],
        "doc_string": null,
        "end_col_offset": 15,
        "end_lineno": 73,
        "lineno": 68,
        "name": "_mint_for_testing",
        "node_id": 383,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 60,
          "end_col_offset": 64,
          "end_lineno": 68,
          "id": "bool",
          "lineno": 68,
          "node_id": 427,
          "src": "1532:4:7"
        },
        "src": "1472:200:7"
      }
    ],
    "col_offset": 0,
    "doc_string": {
      "ast_type": "DocStr",
      "col_offset": 0,
      "end_col_offset": 3,
      "end_lineno": 4,
      "lineno": 2,
      "node_id": 429,
      "src": "18:38:7",
      "value": "\n@notice Mock ERC20 for testing\n"
    },
    "end_col_offset": 15,
    "end_lineno": 73,
    "lineno": 1,
    "name": "contracts/testing/ERC20Mock.vy",
    "node_id": 0,
    "src": "0:1672:7"
  },
  "bytecode": "0x6060610644610140396060602061064460c03960c051610644016101a0396040602061064460c03960c05160040135111561003957600080fd5b6040602060206106440160c03960c05161064401610220396020602060206106440160c03960c05160040135111561007057600080fd5b6101a080600060c052602060c020602082510161012060006003818352015b826101205160200211156100a2576100c4565b61012051602002850151610120518501555b815160010180835281141561008f575b50505050505061022080600160c052602060c020602082510161012060006002818352015b826101205160200211156100fc5761011e565b61012051602002850151610120518501555b81516001018083528114156100e9575b5050505050506101805160025561062c56600436101561000d576104f6565b600035601c52600051341561002157600080fd5b6318160ddd8114156100395760055460005260206000f35b63dd62ed3e81141561008d5760043560a01c1561005557600080fd5b60243560a01c1561006557600080fd5b600460043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f35b63a9059cbb81141561013e5760043560a01c156100a957600080fd5b60033360e05260c052604060c0208054602435808210156100c957600080fd5b80820390509050815550600360043560e05260c052604060c02080546024358181830110156100f757600080fd5b8082019050905081555060243561014052600435337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f35b6323b872dd81141561023b5760043560a01c1561015a57600080fd5b60243560a01c1561016a57600080fd5b600360043560e05260c052604060c02080546044358082101561018c57600080fd5b80820390509050815550600360243560e05260c052604060c02080546044358181830110156101ba57600080fd5b80820190509050815550600460043560e05260c052604060c0203360e05260c052604060c0208054604435808210156101f257600080fd5b80820390509050815550604435610140526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f35b63095ea7b38114156102b45760043560a01c1561025757600080fd5b60243560043360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f35b63f8c1410281141561035c5760043560a01c156102d057600080fd5b600580546024358181830110156102e657600080fd5b80820190509050815550600360043560e05260c052604060c020805460243581818301101561031457600080fd5b808201905090508155506024356101405260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f35b6306fdde038114156104015760008060c052602060c020610180602082540161012060006003818352015b8261012051602002111561039a576103bc565b61012051850154610120516020028501525b8151600101808352811415610387575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f35b6395d89b418114156104a65760018060c052602060c020610180602082540161012060006002818352015b8261012051602002111561043f57610461565b61012051850154610120516020028501525b815160010180835281141561042c575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f35b63313ce5678114156104be5760025460005260206000f35b6370a082318114156104f45760043560a01c156104da57600080fd5b600360043560e05260c052604060c0205460005260206000f35b505b60006000fd5b61013061062c0361013060003961013061062c036000f3",
  "bytecodeSha1": "a9ae9385684fb1febf9fb9d74659f68d89b6b531",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.12"
  },
  "contractName": "ERC20Mock",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "ERC20Mock._mint_for_testing": {
          "14": [
            1542,
            1569
          ],
          "15": [
            1574,
            1607
          ],
          "16": [
            1612,
            1655
          ],
          "17": [
            1661,
            1672
          ]
        },
        "ERC20Mock.allowance": {
          "1": [
            774,
            814
          ]
        },
        "ERC20Mock.approve": {
          "11": [
            1350,
            1396
          ],
          "12": [
            1401,
            1443
          ],
          "13": [
            1448,
            1459
          ]
        },
        "ERC20Mock.totalSupply": {
          "0": [
            663,
            687
          ]
        },
        "ERC20Mock.transfer": {
          "2": [
            886,
            922
          ],
          "3": [
            927,
            956
          ],
          "4": [
            961,
            998
          ],
          "5": [
            1003,
            1014
          ]
        },
        "ERC20Mock.transferFrom": {
          "6": [
            1107,
            1138
          ],
          "7": [
            1143,
            1172
          ],
          "8": [
            1177,
            1221
          ],
          "9": [
            1226,
            1258
          ],
          "10": [
            1263,
            1274
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x600436101561000d576104f6565b600035601c52600051341561002157600080fd5b6318160ddd8114156100395760055460005260206000f35b63dd62ed3e81141561008d5760043560a01c1561005557600080fd5b60243560a01c1561006557600080fd5b600460043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f35b63a9059cbb81141561013e5760043560a01c156100a957600080fd5b60033360e05260c052604060c0208054602435808210156100c957600080fd5b80820390509050815550600360043560e05260c052604060c02080546024358181830110156100f757600080fd5b8082019050905081555060243561014052600435337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f35b6323b872dd81141561023b5760043560a01c1561015a57600080fd5b60243560a01c1561016a57600080fd5b600360043560e05260c052604060c02080546044358082101561018c57600080fd5b80820390509050815550600360243560e05260c052604060c02080546044358181830110156101ba57600080fd5b80820190509050815550600460043560e05260c052604060c0203360e05260c052604060c0208054604435808210156101f257600080fd5b80820390509050815550604435610140526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f35b63095ea7b38114156102b45760043560a01c1561025757600080fd5b60243560043360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f35b63f8c1410281141561035c5760043560a01c156102d057600080fd5b600580546024358181830110156102e657600080fd5b80820190509050815550600360043560e05260c052604060c020805460243581818301101561031457600080fd5b808201905090508155506024356101405260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f35b6306fdde038114156104015760008060c052602060c020610180602082540161012060006003818352015b8261012051602002111561039a576103bc565b61012051850154610120516020028501525b8151600101808352811415610387575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f35b6395d89b418114156104a65760018060c052602060c020610180602082540161012060006002818352015b8261012051602002111561043f57610461565b61012051850154610120516020028501525b815160010180835281141561042c575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f35b63313ce5678114156104be5760025460005260206000f35b6370a082318114156104f45760043560a01c156104da57600080fd5b600360043560e05260c052604060c0205460005260206000f35b505b60006000fd",
  "deployedSourceMap": "-1:-1:7:-;;;;;:::-;;:::-;:::-;;;;;;;;;;:::-;;;;:::-;629:58;;;;;:::-;670:17;663:24;;;;;;629:58::-;706:108;;;;;:::-;-1:-1;;;;;706:108;:::-;;;;:::-;-1:-1;;;;;706:108;:::-;;;;:::-;781:15;797:6;-1:-1;;;;;;;;805:8;-1:-1;;;;;;;;774:40;;;;;;706:108::-;827:187;;;;;:::-;-1:-1;;;;;827:187;:::-;;;;:::-;886:14;901:10;886:36;;;;;;;-1:-1;886:36;916:6;886:36;;;-1:-1;;886:36;:::-;;;;:::-;;;;;;;;;;;927:14;942:3;-1:-1;927:29;;;;;;;-1:-1;927:29;950:6;927:29;;;;;-1:-1;;927:29;:::-;;;;:::-;;;;;;;;;;;991:6;-1:-1;;961:37;986:3;-1:-1;974:10;-1:-1;;;961:37;1010:4;1003:11;;;;;827:187::-;1027:247;;;;;:::-;-1:-1;;;;;1027:247;:::-;;;;:::-;-1:-1;;;;;1027:247;:::-;;;;:::-;1107:14;1122:5;-1:-1;1107:31;;;;;;;-1:-1;1107:31;1132:6;1107:31;;;-1:-1;;1107:31;:::-;;;;:::-;;;;;;;;;;;1143:14;1158:3;-1:-1;1143:29;;;;;;;-1:-1;1143:29;1166:6;1143:29;;;;;-1:-1;;1143:29;:::-;;;;:::-;;;;;;;;;;;1177:15;1193:5;-1:-1;;;;;;;;1200:10;1177:44;;;;;;;-1:-1;1177:44;1215:6;1177:44;;;-1:-1;;1177:44;:::-;;;;:::-;;;;;;;;;;;1251:6;-1:-1;;1226:32;1246:3;-1:-1;1239:5;-1:-1;;;;1226:32;1270:4;1263:11;;;;;1027:247::-;1287:172;;;;;:::-;-1:-1;;;;;1287:172;:::-;;;;:::-;1390:6;-1:-1;1350:15;1366:10;-1:-1;;;;;;;1378:8;-1:-1;;;;;;;;1350:46;1436:6;-1:-1;;1401:42;1426:8;-1:-1;1414:10;-1:-1;;;1401:42;1455:4;1448:11;;;;;1287:172::-;1472:200;;;;;:::-;-1:-1;;;;;1472:200;:::-;;;;:::-;1542:17;;;1563:6;1542:27;;;;;-1:-1;;1542:27;:::-;;;;:::-;;;;;;;;;;;1574:14;1589:7;-1:-1;1574:33;;;;;;;-1:-1;1574:33;1601:6;1574:33;;;;;-1:-1;;1574:33;:::-;;;;:::-;;;;;;;;;;;1648:6;-1:-1;;1612:43;1639:7;-1:-1;1625:12;-1:-1;;;1612:43;1668:4;1661:11;;;;;1472:200::-;252:18;;;;;:::-;-1:-1;;252:18;;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;252:18;;;;;;;;-1:-1;;;;;;;;;;;252:18;;:::-;279;;;;;:::-;-1:-1;;279:18;;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;279:18;;;;;;;;-1:-1;;;;;;;;;;;279:18;;:::-;308:15;;;;;:::-;-1:-1;308:15;;;;;;:::-;335:33;;;;;:::-;-1:-1;;;;;335:33;:::-;;;;:::-;-1:-1;;;;;;;;;;335:33;;;;;;:::-;-1:-1;:::-;;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {},
    "notice": "Mock ERC20 for testing"
  },
  "offset": [
    0,
    1673
  ],
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH1 0x0 MLOAD CALLVALUE ISZERO PUSH2 0x021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x1816DDD DUP2 EQ ISZERO PUSH2 0x039 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xDD62ED3E DUP2 EQ ISZERO PUSH2 0x08D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x065 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x24 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xA959CBB DUP2 EQ ISZERO PUSH2 0x13E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x0A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 LT ISZERO PUSH2 0x0C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x0F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH2 0x140 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x23B872DD DUP2 EQ ISZERO PUSH2 0x23B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 LT ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x3 PUSH1 0x24 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x4 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x44 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH2 0x140 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x95EA7B3 DUP2 EQ ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x20 PUSH2 0x140 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xF8C1412 DUP2 EQ ISZERO PUSH2 0x35C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH2 0x140 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x6FDDE3 DUP2 EQ ISZERO PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH2 0x180 PUSH1 0x20 DUP3 SLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x3 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x39A JUMPI PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x120 MLOAD DUP6 ADD SLOAD PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x387 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x180 MLOAD DUP1 PUSH2 0x1A0 ADD DUP2 DUP3 PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP SUB CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x20 PUSH2 0x160 MSTORE PUSH1 0x40 PUSH2 0x180 MLOAD ADD PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP PUSH2 0x160 RETURN JUMPDEST PUSH4 0x95D89B41 DUP2 EQ ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x1 DUP1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH2 0x180 PUSH1 0x20 DUP3 SLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x461 JUMP JUMPDEST PUSH2 0x120 MLOAD DUP6 ADD SLOAD PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x42C JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x180 MLOAD DUP1 PUSH2 0x1A0 ADD DUP2 DUP3 PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP SUB CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x20 PUSH2 0x160 MSTORE PUSH1 0x40 PUSH2 0x180 MLOAD ADD PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP PUSH2 0x160 RETURN JUMPDEST PUSH4 0x313CE567 DUP2 EQ ISZERO PUSH2 0x4BE JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x70A08231 DUP2 EQ ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT",
  "pcMap": {
    "0": {
      "offset": [
        0,
        1672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "LT"
    },
    "4": {
      "op": "ISZERO"
    },
    "5": {
      "op": "PUSH2",
      "value": "0x0D"
    },
    "8": {
      "op": "JUMPI"
    },
    "9": {
      "op": "PUSH2",
      "value": "0x4F6"
    },
    "12": {
      "op": "JUMP"
    },
    "13": {
      "op": "JUMPDEST"
    },
    "14": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16": {
      "op": "CALLDATALOAD"
    },
    "17": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "19": {
      "op": "MSTORE"
    },
    "20": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "22": {
      "op": "MLOAD"
    },
    "23": {
      "op": "CALLVALUE"
    },
    "24": {
      "op": "ISZERO"
    },
    "25": {
      "op": "PUSH2",
      "value": "0x021"
    },
    "28": {
      "op": "JUMPI"
    },
    "29": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "31": {
      "offset": [
        0,
        0
      ],
      "op": "DUP1",
      "path": "0"
    },
    "32": {
      "dev": "Cannot send ether to nonpayable function",
      "op": "REVERT"
    },
    "33": {
      "op": "JUMPDEST"
    },
    "34": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        629,
        687
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1816DDD"
    },
    "39": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        629,
        687
      ],
      "op": "DUP2",
      "path": "0"
    },
    "40": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        629,
        687
      ],
      "op": "EQ",
      "path": "0"
    },
    "41": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        629,
        687
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "42": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        629,
        687
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x039"
    },
    "45": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        629,
        687
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "46": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        670,
        687
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x5"
    },
    "48": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        663,
        687
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "49": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        663,
        687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "51": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        663,
        687
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "52": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        663,
        687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "54": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        663,
        687
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "56": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        663,
        687
      ],
      "op": "RETURN",
      "path": "0"
    },
    "57": {
      "fn": "ERC20Mock.totalSupply",
      "offset": [
        629,
        687
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "58": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "63": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "DUP2",
      "path": "0"
    },
    "64": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "EQ",
      "path": "0"
    },
    "65": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "66": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x08D"
    },
    "69": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "70": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "72": {
      "op": "CALLDATALOAD"
    },
    "73": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "75": {
      "op": "SHR"
    },
    "76": {
      "op": "ISZERO"
    },
    "77": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x055"
    },
    "80": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "81": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "83": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "84": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "REVERT",
      "path": "0"
    },
    "85": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "86": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "88": {
      "op": "CALLDATALOAD"
    },
    "89": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "91": {
      "op": "SHR"
    },
    "92": {
      "op": "ISZERO"
    },
    "93": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x065"
    },
    "96": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "97": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "99": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "DUP1",
      "path": "0"
    },
    "100": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "REVERT",
      "path": "0"
    },
    "101": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "102": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        781,
        796
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x4"
    },
    "104": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        797,
        803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "106": {
      "op": "CALLDATALOAD"
    },
    "107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "109": {
      "op": "MSTORE"
    },
    "110": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "112": {
      "op": "MSTORE"
    },
    "113": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "115": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "117": {
      "op": "SHA3"
    },
    "118": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        805,
        813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "120": {
      "op": "CALLDATALOAD"
    },
    "121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "123": {
      "op": "MSTORE"
    },
    "124": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "126": {
      "op": "MSTORE"
    },
    "127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "129": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "131": {
      "op": "SHA3"
    },
    "132": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        774,
        814
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "133": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        774,
        814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "135": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        774,
        814
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "136": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        774,
        814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "138": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        774,
        814
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "140": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        774,
        814
      ],
      "op": "RETURN",
      "path": "0"
    },
    "141": {
      "fn": "ERC20Mock.allowance",
      "offset": [
        706,
        814
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "142": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA959CBB"
    },
    "147": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "148": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "EQ",
      "path": "0"
    },
    "149": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "150": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "153": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "154": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "156": {
      "op": "CALLDATALOAD"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "159": {
      "op": "SHR"
    },
    "160": {
      "op": "ISZERO"
    },
    "161": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0A9"
    },
    "164": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "165": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "167": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "DUP1",
      "path": "0"
    },
    "168": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "REVERT",
      "path": "0"
    },
    "169": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "170": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        900
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x3"
    },
    "172": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "0"
    },
    "173": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "175": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "176": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "178": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "179": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "181": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "183": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "SHA3",
      "path": "0"
    },
    "184": {
      "op": "DUP1"
    },
    "185": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "186": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        916,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "188": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "189": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "190": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "DUP3",
      "path": "0"
    },
    "191": {
      "op": "LT"
    },
    "192": {
      "op": "ISZERO"
    },
    "193": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0C9"
    },
    "196": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "197": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "199": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "dev": "Integer underflow",
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "REVERT",
      "path": "0"
    },
    "201": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "202": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "203": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "DUP3",
      "path": "0"
    },
    "204": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "SUB",
      "path": "0"
    },
    "205": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "206": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "POP",
      "path": "0"
    },
    "207": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "208": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "POP",
      "path": "0"
    },
    "209": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "DUP2",
      "path": "0"
    },
    "210": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "211": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        886,
        922
      ],
      "op": "POP",
      "path": "0"
    },
    "212": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        941
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x3"
    },
    "214": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        942,
        945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "216": {
      "op": "CALLDATALOAD"
    },
    "217": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "219": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "220": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "222": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "223": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "225": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "227": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "SHA3",
      "path": "0"
    },
    "228": {
      "op": "DUP1"
    },
    "229": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "230": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        950,
        956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "232": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "233": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "DUP2",
      "path": "0"
    },
    "234": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "DUP2",
      "path": "0"
    },
    "235": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "DUP4",
      "path": "0"
    },
    "236": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "ADD",
      "path": "0"
    },
    "237": {
      "op": "LT"
    },
    "238": {
      "op": "ISZERO"
    },
    "239": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x0F7"
    },
    "242": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "243": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "245": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "dev": "Integer overflow",
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "REVERT",
      "path": "0"
    },
    "247": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "DUP1",
      "path": "0"
    },
    "249": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "DUP3",
      "path": "0"
    },
    "250": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "ADD",
      "path": "0"
    },
    "251": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "252": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "POP",
      "path": "0"
    },
    "253": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "254": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "POP",
      "path": "0"
    },
    "255": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "DUP2",
      "path": "0"
    },
    "256": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "257": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        927,
        956
      ],
      "op": "POP",
      "path": "0"
    },
    "258": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        991,
        997
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x24"
    },
    "260": {
      "op": "CALLDATALOAD"
    },
    "261": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "264": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        961,
        998
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "265": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        986,
        989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "267": {
      "op": "CALLDATALOAD"
    },
    "268": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        974,
        984
      ],
      "op": "CALLER",
      "path": "0"
    },
    "269": {
      "op": "PUSH32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "304": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "307": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        961,
        998
      ],
      "op": "LOG3",
      "path": "0"
    },
    "308": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        1010,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x1"
    },
    "310": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        1003,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "312": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        1003,
        1014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "313": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        1003,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "315": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        1003,
        1014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "317": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        1003,
        1014
      ],
      "op": "RETURN",
      "path": "0"
    },
    "318": {
      "fn": "ERC20Mock.transfer",
      "offset": [
        827,
        1014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "324": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "DUP2",
      "path": "0"
    },
    "325": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "EQ",
      "path": "0"
    },
    "326": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "327": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B"
    },
    "330": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "333": {
      "op": "CALLDATALOAD"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "336": {
      "op": "SHR"
    },
    "337": {
      "op": "ISZERO"
    },
    "338": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "341": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "342": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "344": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "DUP1",
      "path": "0"
    },
    "345": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "REVERT",
      "path": "0"
    },
    "346": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "349": {
      "op": "CALLDATALOAD"
    },
    "350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "352": {
      "op": "SHR"
    },
    "353": {
      "op": "ISZERO"
    },
    "354": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "357": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "358": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "360": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "DUP1",
      "path": "0"
    },
    "361": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "REVERT",
      "path": "0"
    },
    "362": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x3"
    },
    "365": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1122,
        1127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "367": {
      "op": "CALLDATALOAD"
    },
    "368": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "370": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "371": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "373": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "374": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "378": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "SHA3",
      "path": "0"
    },
    "379": {
      "op": "DUP1"
    },
    "380": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "381": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1132,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "383": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "384": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "DUP1",
      "path": "0"
    },
    "385": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "DUP3",
      "path": "0"
    },
    "386": {
      "op": "LT"
    },
    "387": {
      "op": "ISZERO"
    },
    "388": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "391": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "392": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "394": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "DUP1",
      "path": "0"
    },
    "395": {
      "dev": "Integer underflow",
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "REVERT",
      "path": "0"
    },
    "396": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "397": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "DUP1",
      "path": "0"
    },
    "398": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "DUP3",
      "path": "0"
    },
    "399": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "SUB",
      "path": "0"
    },
    "400": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "401": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "POP",
      "path": "0"
    },
    "402": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "403": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "POP",
      "path": "0"
    },
    "404": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "DUP2",
      "path": "0"
    },
    "405": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "406": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1107,
        1138
      ],
      "op": "POP",
      "path": "0"
    },
    "407": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1157
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x3"
    },
    "409": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1158,
        1161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "411": {
      "op": "CALLDATALOAD"
    },
    "412": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "414": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "415": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "417": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "418": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "420": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "422": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "SHA3",
      "path": "0"
    },
    "423": {
      "op": "DUP1"
    },
    "424": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "425": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1166,
        1172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "427": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "428": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP2",
      "path": "0"
    },
    "429": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP2",
      "path": "0"
    },
    "430": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP4",
      "path": "0"
    },
    "431": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "ADD",
      "path": "0"
    },
    "432": {
      "op": "LT"
    },
    "433": {
      "op": "ISZERO"
    },
    "434": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA"
    },
    "437": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "438": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "440": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "dev": "Integer overflow",
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "REVERT",
      "path": "0"
    },
    "442": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "443": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP3",
      "path": "0"
    },
    "445": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "ADD",
      "path": "0"
    },
    "446": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "447": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "POP",
      "path": "0"
    },
    "448": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "449": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "POP",
      "path": "0"
    },
    "450": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "DUP2",
      "path": "0"
    },
    "451": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "452": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1143,
        1172
      ],
      "op": "POP",
      "path": "0"
    },
    "453": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1192
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x4"
    },
    "455": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1193,
        1198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "457": {
      "op": "CALLDATALOAD"
    },
    "458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "460": {
      "op": "MSTORE"
    },
    "461": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "463": {
      "op": "MSTORE"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "468": {
      "op": "SHA3"
    },
    "469": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1200,
        1210
      ],
      "op": "CALLER",
      "path": "0"
    },
    "470": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "472": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "473": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "475": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "476": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "478": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "480": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "SHA3",
      "path": "0"
    },
    "481": {
      "op": "DUP1"
    },
    "482": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "483": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1215,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "485": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "486": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "487": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "DUP3",
      "path": "0"
    },
    "488": {
      "op": "LT"
    },
    "489": {
      "op": "ISZERO"
    },
    "490": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "493": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "494": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "496": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "497": {
      "dev": "Integer underflow",
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "REVERT",
      "path": "0"
    },
    "498": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "499": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "DUP1",
      "path": "0"
    },
    "500": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "DUP3",
      "path": "0"
    },
    "501": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "SUB",
      "path": "0"
    },
    "502": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "503": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "POP",
      "path": "0"
    },
    "504": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "505": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "POP",
      "path": "0"
    },
    "506": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "DUP2",
      "path": "0"
    },
    "507": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "508": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1177,
        1221
      ],
      "op": "POP",
      "path": "0"
    },
    "509": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1251,
        1257
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x44"
    },
    "511": {
      "op": "CALLDATALOAD"
    },
    "512": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "515": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1226,
        1258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "516": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1246,
        1249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "518": {
      "op": "CALLDATALOAD"
    },
    "519": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1239,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "521": {
      "op": "CALLDATALOAD"
    },
    "522": {
      "op": "PUSH32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "560": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1226,
        1258
      ],
      "op": "LOG3",
      "path": "0"
    },
    "561": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1270,
        1274
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x1"
    },
    "563": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1263,
        1274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "565": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1263,
        1274
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "566": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1263,
        1274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "568": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1263,
        1274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "570": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1263,
        1274
      ],
      "op": "RETURN",
      "path": "0"
    },
    "571": {
      "fn": "ERC20Mock.transferFrom",
      "offset": [
        1027,
        1274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "577": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "578": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "EQ",
      "path": "0"
    },
    "579": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "580": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B4"
    },
    "583": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "586": {
      "op": "CALLDATALOAD"
    },
    "587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "589": {
      "op": "SHR"
    },
    "590": {
      "op": "ISZERO"
    },
    "591": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x257"
    },
    "594": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "595": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "597": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "DUP1",
      "path": "0"
    },
    "598": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "REVERT",
      "path": "0"
    },
    "599": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "600": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1390,
        1396
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x24"
    },
    "602": {
      "op": "CALLDATALOAD"
    },
    "603": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1350,
        1365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "605": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1366,
        1376
      ],
      "op": "CALLER",
      "path": "0"
    },
    "606": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "608": {
      "op": "MSTORE"
    },
    "609": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "616": {
      "op": "SHA3"
    },
    "617": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1378,
        1386
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "619": {
      "op": "CALLDATALOAD"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "MSTORE"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "625": {
      "op": "MSTORE"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "630": {
      "op": "SHA3"
    },
    "631": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1350,
        1396
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "632": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1436,
        1442
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x24"
    },
    "634": {
      "op": "CALLDATALOAD"
    },
    "635": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "638": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1401,
        1443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "639": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1426,
        1434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "641": {
      "op": "CALLDATALOAD"
    },
    "642": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1414,
        1424
      ],
      "op": "CALLER",
      "path": "0"
    },
    "643": {
      "op": "PUSH32",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "678": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "681": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1401,
        1443
      ],
      "op": "LOG3",
      "path": "0"
    },
    "682": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1455,
        1459
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x1"
    },
    "684": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1448,
        1459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "686": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1448,
        1459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "687": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1448,
        1459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "689": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1448,
        1459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "691": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1448,
        1459
      ],
      "op": "RETURN",
      "path": "0"
    },
    "692": {
      "fn": "ERC20Mock.approve",
      "offset": [
        1287,
        1459
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "693": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF8C1412"
    },
    "698": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "699": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "EQ",
      "path": "0"
    },
    "700": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "701": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35C"
    },
    "704": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "705": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "707": {
      "op": "CALLDATALOAD"
    },
    "708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "710": {
      "op": "SHR"
    },
    "711": {
      "op": "ISZERO"
    },
    "712": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "715": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "716": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "718": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "719": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "REVERT",
      "path": "0"
    },
    "720": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "721": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1559
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x5"
    },
    "723": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1559
      ],
      "op": "DUP1",
      "path": "0"
    },
    "724": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1559
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "725": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1563,
        1569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "727": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "728": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "729": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "730": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "DUP4",
      "path": "0"
    },
    "731": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "ADD",
      "path": "0"
    },
    "732": {
      "op": "LT"
    },
    "733": {
      "op": "ISZERO"
    },
    "734": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E6"
    },
    "737": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "738": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "740": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "741": {
      "dev": "Integer overflow",
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "REVERT",
      "path": "0"
    },
    "742": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "743": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "DUP1",
      "path": "0"
    },
    "744": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "DUP3",
      "path": "0"
    },
    "745": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "ADD",
      "path": "0"
    },
    "746": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "POP",
      "path": "0"
    },
    "748": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "POP",
      "path": "0"
    },
    "750": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "DUP2",
      "path": "0"
    },
    "751": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "752": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1542,
        1569
      ],
      "op": "POP",
      "path": "0"
    },
    "753": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x3"
    },
    "755": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1589,
        1596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "757": {
      "op": "CALLDATALOAD"
    },
    "758": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "760": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "761": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "763": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "764": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "766": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "768": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "SHA3",
      "path": "0"
    },
    "769": {
      "op": "DUP1"
    },
    "770": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "771": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1601,
        1607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "773": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "774": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "775": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "776": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "DUP4",
      "path": "0"
    },
    "777": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "ADD",
      "path": "0"
    },
    "778": {
      "op": "LT"
    },
    "779": {
      "op": "ISZERO"
    },
    "780": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314"
    },
    "783": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "784": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "786": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "787": {
      "dev": "Integer overflow",
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "REVERT",
      "path": "0"
    },
    "788": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "789": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "DUP1",
      "path": "0"
    },
    "790": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "DUP3",
      "path": "0"
    },
    "791": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "793": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "POP",
      "path": "0"
    },
    "794": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "POP",
      "path": "0"
    },
    "796": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "DUP2",
      "path": "0"
    },
    "797": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "798": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1574,
        1607
      ],
      "op": "POP",
      "path": "0"
    },
    "799": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1648,
        1654
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x24"
    },
    "801": {
      "op": "CALLDATALOAD"
    },
    "802": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "805": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1612,
        1655
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "806": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1639,
        1646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "808": {
      "op": "CALLDATALOAD"
    },
    "809": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1625,
        1637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "811": {
      "op": "PUSH32",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "846": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "849": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1612,
        1655
      ],
      "op": "LOG3",
      "path": "0"
    },
    "850": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1668,
        1672
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "852": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1661,
        1672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "854": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1661,
        1672
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "855": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1661,
        1672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "857": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1661,
        1672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "859": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1661,
        1672
      ],
      "op": "RETURN",
      "path": "0"
    },
    "860": {
      "fn": "ERC20Mock._mint_for_testing",
      "offset": [
        1472,
        1672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "861": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE3"
    },
    "866": {
      "offset": [
        252,
        270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "867": {
      "offset": [
        252,
        270
      ],
      "op": "EQ",
      "path": "0"
    },
    "868": {
      "offset": [
        252,
        270
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "869": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "872": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "875": {
      "op": "DUP1"
    },
    "876": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "878": {
      "offset": [
        252,
        270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "879": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "881": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "883": {
      "offset": [
        252,
        270
      ],
      "op": "SHA3",
      "path": "0"
    },
    "884": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "887": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "889": {
      "offset": [
        252,
        270
      ],
      "op": "DUP3",
      "path": "0"
    },
    "890": {
      "offset": [
        252,
        270
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "891": {
      "offset": [
        252,
        270
      ],
      "op": "ADD",
      "path": "0"
    },
    "892": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "895": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "897": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "899": {
      "offset": [
        252,
        270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "900": {
      "offset": [
        252,
        270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "901": {
      "offset": [
        252,
        270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "902": {
      "offset": [
        252,
        270
      ],
      "op": "ADD",
      "path": "0"
    },
    "903": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "904": {
      "offset": [
        252,
        270
      ],
      "op": "DUP3",
      "path": "0"
    },
    "905": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "908": {
      "offset": [
        252,
        270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "909": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "911": {
      "offset": [
        252,
        270
      ],
      "op": "MUL",
      "path": "0"
    },
    "912": {
      "offset": [
        252,
        270
      ],
      "op": "GT",
      "path": "0"
    },
    "913": {
      "offset": [
        252,
        270
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "914": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39A"
    },
    "917": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "918": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BC"
    },
    "921": {
      "offset": [
        252,
        270
      ],
      "op": "JUMP",
      "path": "0"
    },
    "922": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "923": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "926": {
      "offset": [
        252,
        270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "927": {
      "offset": [
        252,
        270
      ],
      "op": "DUP6",
      "path": "0"
    },
    "928": {
      "offset": [
        252,
        270
      ],
      "op": "ADD",
      "path": "0"
    },
    "929": {
      "offset": [
        252,
        270
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "930": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "933": {
      "offset": [
        252,
        270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "934": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "936": {
      "offset": [
        252,
        270
      ],
      "op": "MUL",
      "path": "0"
    },
    "937": {
      "offset": [
        252,
        270
      ],
      "op": "DUP6",
      "path": "0"
    },
    "938": {
      "offset": [
        252,
        270
      ],
      "op": "ADD",
      "path": "0"
    },
    "939": {
      "offset": [
        252,
        270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "940": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "941": {
      "offset": [
        252,
        270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "942": {
      "offset": [
        252,
        270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "943": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "945": {
      "offset": [
        252,
        270
      ],
      "op": "ADD",
      "path": "0"
    },
    "946": {
      "offset": [
        252,
        270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "947": {
      "offset": [
        252,
        270
      ],
      "op": "DUP4",
      "path": "0"
    },
    "948": {
      "offset": [
        252,
        270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "949": {
      "offset": [
        252,
        270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "950": {
      "offset": [
        252,
        270
      ],
      "op": "EQ",
      "path": "0"
    },
    "951": {
      "offset": [
        252,
        270
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "952": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x387"
    },
    "955": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "956": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "957": {
      "offset": [
        252,
        270
      ],
      "op": "POP",
      "path": "0"
    },
    "958": {
      "offset": [
        252,
        270
      ],
      "op": "POP",
      "path": "0"
    },
    "959": {
      "offset": [
        252,
        270
      ],
      "op": "POP",
      "path": "0"
    },
    "960": {
      "offset": [
        252,
        270
      ],
      "op": "POP",
      "path": "0"
    },
    "961": {
      "offset": [
        252,
        270
      ],
      "op": "POP",
      "path": "0"
    },
    "962": {
      "offset": [
        252,
        270
      ],
      "op": "POP",
      "path": "0"
    },
    "963": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "966": {
      "op": "MLOAD"
    },
    "967": {
      "op": "DUP1"
    },
    "968": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "op": "DUP2"
    },
    "973": {
      "op": "DUP3"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "DUP3"
    },
    "979": {
      "op": "SUB"
    },
    "980": {
      "op": "MOD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "983": {
      "op": "DUP3"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "SWAP1"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "op": "SUB"
    },
    "989": {
      "op": "CALLDATASIZE"
    },
    "990": {
      "op": "DUP3"
    },
    "991": {
      "op": "CALLDATACOPY"
    },
    "992": {
      "op": "POP"
    },
    "993": {
      "offset": [
        252,
        270
      ],
      "op": "POP",
      "path": "0"
    },
    "994": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "996": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "999": {
      "offset": [
        252,
        270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1000": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1002": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1005": {
      "offset": [
        252,
        270
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1006": {
      "offset": [
        252,
        270
      ],
      "op": "ADD",
      "path": "0"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1011": {
      "op": "DUP3"
    },
    "1012": {
      "op": "SUB"
    },
    "1013": {
      "op": "MOD"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1016": {
      "op": "DUP3"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "op": "SWAP1"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "offset": [
        252,
        270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1024": {
      "offset": [
        252,
        270
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1025": {
      "offset": [
        252,
        270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1026": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "1031": {
      "offset": [
        279,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1032": {
      "offset": [
        279,
        297
      ],
      "op": "EQ",
      "path": "0"
    },
    "1033": {
      "offset": [
        279,
        297
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1034": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "1037": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "DUP1"
    },
    "1041": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1043": {
      "offset": [
        279,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1044": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1046": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC0"
    },
    "1048": {
      "offset": [
        279,
        297
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1049": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1052": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1054": {
      "offset": [
        279,
        297
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1055": {
      "offset": [
        279,
        297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1056": {
      "offset": [
        279,
        297
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "1060": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1062": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1064": {
      "offset": [
        279,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1065": {
      "offset": [
        279,
        297
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1066": {
      "offset": [
        279,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1067": {
      "offset": [
        279,
        297
      ],
      "op": "ADD",
      "path": "0"
    },
    "1068": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1069": {
      "offset": [
        279,
        297
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1070": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "1073": {
      "offset": [
        279,
        297
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1074": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1076": {
      "offset": [
        279,
        297
      ],
      "op": "MUL",
      "path": "0"
    },
    "1077": {
      "offset": [
        279,
        297
      ],
      "op": "GT",
      "path": "0"
    },
    "1078": {
      "offset": [
        279,
        297
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1079": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F"
    },
    "1082": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1083": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x461"
    },
    "1086": {
      "offset": [
        279,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1087": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1088": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "1091": {
      "offset": [
        279,
        297
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1092": {
      "offset": [
        279,
        297
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1093": {
      "offset": [
        279,
        297
      ],
      "op": "ADD",
      "path": "0"
    },
    "1094": {
      "offset": [
        279,
        297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1095": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "1098": {
      "offset": [
        279,
        297
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1099": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1101": {
      "offset": [
        279,
        297
      ],
      "op": "MUL",
      "path": "0"
    },
    "1102": {
      "offset": [
        279,
        297
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1103": {
      "offset": [
        279,
        297
      ],
      "op": "ADD",
      "path": "0"
    },
    "1104": {
      "offset": [
        279,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1105": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1106": {
      "offset": [
        279,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1107": {
      "offset": [
        279,
        297
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1108": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1110": {
      "offset": [
        279,
        297
      ],
      "op": "ADD",
      "path": "0"
    },
    "1111": {
      "offset": [
        279,
        297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1112": {
      "offset": [
        279,
        297
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1113": {
      "offset": [
        279,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1114": {
      "offset": [
        279,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1115": {
      "offset": [
        279,
        297
      ],
      "op": "EQ",
      "path": "0"
    },
    "1116": {
      "offset": [
        279,
        297
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1117": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42C"
    },
    "1120": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1121": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1122": {
      "offset": [
        279,
        297
      ],
      "op": "POP",
      "path": "0"
    },
    "1123": {
      "offset": [
        279,
        297
      ],
      "op": "POP",
      "path": "0"
    },
    "1124": {
      "offset": [
        279,
        297
      ],
      "op": "POP",
      "path": "0"
    },
    "1125": {
      "offset": [
        279,
        297
      ],
      "op": "POP",
      "path": "0"
    },
    "1126": {
      "offset": [
        279,
        297
      ],
      "op": "POP",
      "path": "0"
    },
    "1127": {
      "offset": [
        279,
        297
      ],
      "op": "POP",
      "path": "0"
    },
    "1128": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "1131": {
      "op": "MLOAD"
    },
    "1132": {
      "op": "DUP1"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "op": "DUP2"
    },
    "1138": {
      "op": "DUP3"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "DUP3"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "op": "MOD"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "SUB"
    },
    "1151": {
      "op": "SWAP1"
    },
    "1152": {
      "op": "POP"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "op": "CALLDATASIZE"
    },
    "1155": {
      "op": "DUP3"
    },
    "1156": {
      "op": "CALLDATACOPY"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "offset": [
        279,
        297
      ],
      "op": "POP",
      "path": "0"
    },
    "1159": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1161": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1164": {
      "offset": [
        279,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1165": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1167": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "1170": {
      "offset": [
        279,
        297
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1171": {
      "offset": [
        279,
        297
      ],
      "op": "ADD",
      "path": "0"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "DUP3"
    },
    "1177": {
      "op": "SUB"
    },
    "1178": {
      "op": "MOD"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "op": "SUB"
    },
    "1184": {
      "op": "SWAP1"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "offset": [
        279,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160"
    },
    "1189": {
      "offset": [
        279,
        297
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1190": {
      "offset": [
        279,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "offset": [
        308,
        323
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "1196": {
      "offset": [
        308,
        323
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "offset": [
        308,
        323
      ],
      "op": "EQ",
      "path": "0"
    },
    "1198": {
      "offset": [
        308,
        323
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1199": {
      "offset": [
        308,
        323
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BE"
    },
    "1202": {
      "offset": [
        308,
        323
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1205": {
      "offset": [
        308,
        323
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1206": {
      "offset": [
        308,
        323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1208": {
      "offset": [
        308,
        323
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1209": {
      "offset": [
        308,
        323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1211": {
      "offset": [
        308,
        323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1213": {
      "offset": [
        308,
        323
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1214": {
      "offset": [
        308,
        323
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1215": {
      "offset": [
        335,
        368
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "1220": {
      "offset": [
        335,
        368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1221": {
      "offset": [
        335,
        368
      ],
      "op": "EQ",
      "path": "0"
    },
    "1222": {
      "offset": [
        335,
        368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1223": {
      "offset": [
        335,
        368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F4"
    },
    "1226": {
      "offset": [
        335,
        368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1229": {
      "op": "CALLDATALOAD"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1232": {
      "op": "SHR"
    },
    "1233": {
      "op": "ISZERO"
    },
    "1234": {
      "offset": [
        335,
        368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DA"
    },
    "1237": {
      "offset": [
        335,
        368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1238": {
      "offset": [
        335,
        368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1240": {
      "offset": [
        335,
        368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1241": {
      "offset": [
        335,
        368
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1242": {
      "offset": [
        335,
        368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1247": {
      "op": "CALLDATALOAD"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1250": {
      "op": "MSTORE"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1258": {
      "op": "SHA3"
    },
    "1259": {
      "offset": [
        335,
        368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1260": {
      "offset": [
        335,
        368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1262": {
      "offset": [
        335,
        368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1263": {
      "offset": [
        335,
        368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1265": {
      "offset": [
        335,
        368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1267": {
      "offset": [
        335,
        368
      ],
      "op": "RETURN",
      "path": "0"
    },
    "1268": {
      "offset": [
        335,
        368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1269": {
      "op": "POP"
    },
    "1270": {
      "op": "JUMPDEST"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "REVERT"
    }
  },
  "sha1": "e2749e177cad065071c769cd0eac0e45b4696622",
  "source": "# @version ^0.2.0\n\"\"\"\n@notice Mock ERC20 for testing\n\"\"\"\n\nevent Transfer:\n    _from: indexed(address)\n    _to: indexed(address)\n    _value: uint256\n\nevent Approval:\n    _owner: indexed(address)\n    _spender: indexed(address)\n    _value: uint256\n\nname: public(String[64])\nsymbol: public(String[32])\ndecimals: public(uint256)\nbalanceOf: public(HashMap[address, uint256])\nallowances: HashMap[address, HashMap[address, uint256]]\ntotal_supply: uint256\n\n\n@external\ndef __init__(_name: String[64], _symbol: String[32], _decimals: uint256):\n    self.name = _name\n    self.symbol = _symbol\n    self.decimals = _decimals\n\n\n@external\n@view\ndef totalSupply() -> uint256:\n    return self.total_supply\n\n\n@external\n@view\ndef allowance(_owner : address, _spender : address) -> uint256:\n    return self.allowances[_owner][_spender]\n\n\n@external\ndef transfer(_to : address, _value : uint256) -> bool:\n    self.balanceOf[msg.sender] -= _value\n    self.balanceOf[_to] += _value\n    log Transfer(msg.sender, _to, _value)\n    return True\n\n\n@external\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\n    self.balanceOf[_from] -= _value\n    self.balanceOf[_to] += _value\n    self.allowances[_from][msg.sender] -= _value\n    log Transfer(_from, _to, _value)\n    return True\n\n\n@external\ndef approve(_spender : address, _value : uint256) -> bool:\n    self.allowances[msg.sender][_spender] = _value\n    log Approval(msg.sender, _spender, _value)\n    return True\n\n\n@external\ndef _mint_for_testing(_target: address, _value: uint256) -> bool:\n    self.total_supply += _value\n    self.balanceOf[_target] += _value\n    log Transfer(ZERO_ADDRESS, _target, _value)\n\n    return True\n",
  "sourceMap": "",
  "sourcePath": "contracts/testing/ERC20Mock.vy",
  "type": "contract"
}